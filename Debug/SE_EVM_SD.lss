
SE_EVM_SD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002de  00800200  000071d8  0000726c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000071d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000401  008004de  008004de  0000754a  2**0
                  ALLOC
  3 .stab         00000858  00000000  00000000  0000754c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000014b  00000000  00000000  00007da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000c0  00000000  00000000  00007ef0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003523  00000000  00000000  00007fb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000400  00000000  00000000  0000b4d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000021b0  00000000  00000000  0000b8d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005f8  00000000  00000000  0000da84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090e  00000000  00000000  0000e07c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d8e  00000000  00000000  0000e98a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00010718  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
       8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
       c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      10:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      14:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      18:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      1c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      20:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      24:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      28:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      2c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      30:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      34:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      38:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      3c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      40:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      44:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      48:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      4c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      50:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      54:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      58:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      5c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      60:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      64:	0c 94 0f 31 	jmp	0x621e	; 0x621e <__vector_25>
      68:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      6c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      70:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      74:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      78:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      7c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      80:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      84:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      88:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      8c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      90:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      94:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      98:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      9c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      a0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      a4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      a8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      ac:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      b0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      b4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      b8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      bc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      c0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      c4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      c8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      cc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      d0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      d4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      d8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      dc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
      e0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	14 e0       	ldi	r17, 0x04	; 4
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e8 ed       	ldi	r30, 0xD8	; 216
      fc:	f1 e7       	ldi	r31, 0x71	; 113
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 3d       	cpi	r26, 0xDE	; 222
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
     10e:	1b be       	out	0x3b, r1	; 59

00000110 <__do_clear_bss>:
     110:	18 e0       	ldi	r17, 0x08	; 8
     112:	ae ed       	ldi	r26, 0xDE	; 222
     114:	b4 e0       	ldi	r27, 0x04	; 4
     116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
     118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
     11a:	af 3d       	cpi	r26, 0xDF	; 223
     11c:	b1 07       	cpc	r27, r17
     11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>
     120:	0e 94 95 32 	call	0x652a	; 0x652a <main>
     124:	0c 94 ea 38 	jmp	0x71d4	; 0x71d4 <_exit>

00000128 <__bad_interrupt>:
     128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012c <USART_SendByte>:
	UCSR0B = ((1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0));
}

void USART_SendByte(uint8_t u8Data)
{
	while((UCSR0A & (1 << UDRE0)) == 0);		// Wait until last byte has been transmitted
     12c:	e0 ec       	ldi	r30, 0xC0	; 192
     12e:	f0 e0       	ldi	r31, 0x00	; 0
     130:	90 81       	ld	r25, Z
     132:	95 ff       	sbrs	r25, 5
     134:	fd cf       	rjmp	.-6      	; 0x130 <USART_SendByte+0x4>
	UDR0 = u8Data;
     136:	80 93 c6 00 	sts	0x00C6, r24
}
     13a:	08 95       	ret

0000013c <USART_putstring>:

void USART_putstring(char* StringPtr)
{
     13c:	cf 93       	push	r28
     13e:	df 93       	push	r29
     140:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
     142:	88 81       	ld	r24, Y
     144:	88 23       	and	r24, r24
     146:	31 f0       	breq	.+12     	; 0x154 <USART_putstring+0x18>
{
	while((UCSR0A & (1 << UDRE0)) == 0);		// Wait until last byte has been transmitted
	UDR0 = u8Data;
}

void USART_putstring(char* StringPtr)
     148:	21 96       	adiw	r28, 0x01	; 1
{
	while(*StringPtr != 0x00)
	{
		USART_SendByte(*StringPtr);
     14a:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	UDR0 = u8Data;
}

void USART_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
     14e:	89 91       	ld	r24, Y+
     150:	88 23       	and	r24, r24
     152:	d9 f7       	brne	.-10     	; 0x14a <USART_putstring+0xe>
	{
		USART_SendByte(*StringPtr);
		StringPtr++;
	}
}
     154:	df 91       	pop	r29
     156:	cf 91       	pop	r28
     158:	08 95       	ret

0000015a <USART_Transmit_dec>:
  return UDR0;
}


void USART_Transmit_dec(unsigned int int_data)
{
     15a:	cf 93       	push	r28
     15c:	df 93       	push	r29
	USART_SendByte(((int_data / 10000) | 0x30));								// Teh thousand
     15e:	60 e1       	ldi	r22, 0x10	; 16
     160:	77 e2       	ldi	r23, 0x27	; 39
     162:	0e 94 c0 38 	call	0x7180	; 0x7180 <__udivmodhi4>
     166:	ec 01       	movw	r28, r24
     168:	86 2f       	mov	r24, r22
     16a:	80 63       	ori	r24, 0x30	; 48
     16c:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_SendByte(((int_data % 10000) / (1000)) | (0x30)); 					// Tkousand
     170:	ce 01       	movw	r24, r28
     172:	68 ee       	ldi	r22, 0xE8	; 232
     174:	73 e0       	ldi	r23, 0x03	; 3
     176:	0e 94 c0 38 	call	0x7180	; 0x7180 <__udivmodhi4>
     17a:	ec 01       	movw	r28, r24
     17c:	86 2f       	mov	r24, r22
     17e:	80 63       	ori	r24, 0x30	; 48
     180:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_SendByte((((int_data % 10000) % (1000)) / (100)) | (0x30)); 			// Hundred
     184:	ce 01       	movw	r24, r28
     186:	64 e6       	ldi	r22, 0x64	; 100
     188:	70 e0       	ldi	r23, 0x00	; 0
     18a:	0e 94 c0 38 	call	0x7180	; 0x7180 <__udivmodhi4>
     18e:	ec 01       	movw	r28, r24
     190:	86 2f       	mov	r24, r22
     192:	80 63       	ori	r24, 0x30	; 48
     194:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_SendByte(((((int_data % 10000) % (1000)) % (100)) /( 10)) | (0x30)); // Tens
     198:	ce 01       	movw	r24, r28
     19a:	6a e0       	ldi	r22, 0x0A	; 10
     19c:	70 e0       	ldi	r23, 0x00	; 0
     19e:	0e 94 c0 38 	call	0x7180	; 0x7180 <__udivmodhi4>
     1a2:	c8 2f       	mov	r28, r24
     1a4:	86 2f       	mov	r24, r22
     1a6:	80 63       	ori	r24, 0x30	; 48
     1a8:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_SendByte(((((int_data % 10000) % (1000)) % (100)) % (10)) | (0x30)); // Units
     1ac:	8c 2f       	mov	r24, r28
     1ae:	80 63       	ori	r24, 0x30	; 48
     1b0:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
}
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <i2c_stop>:
	i2c_data = TWDR;	
}

void i2c_stop()							// Stop I2C communication
{
	TWCR |= (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);		// Send the stop condition.
     1ba:	ec eb       	ldi	r30, 0xBC	; 188
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	80 81       	ld	r24, Z
     1c0:	84 69       	ori	r24, 0x94	; 148
     1c2:	80 83       	st	Z, r24
}
     1c4:	08 95       	ret

000001c6 <i2c_start_type2>:
}

uint8_t i2c_start_type2(uint8_t address)
{
	// reset TWI control register
	TWCR = 0;
     1c6:	ec eb       	ldi	r30, 0xBC	; 188
     1c8:	f0 e0       	ldi	r31, 0x00	; 0
     1ca:	10 82       	st	Z, r1
	// transmit START condition 
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     1cc:	94 ea       	ldi	r25, 0xA4	; 164
     1ce:	90 83       	st	Z, r25
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );
     1d0:	90 81       	ld	r25, Z
     1d2:	99 23       	and	r25, r25
     1d4:	ec f7       	brge	.-6      	; 0x1d0 <i2c_start_type2+0xa>
	
	// check if the start condition was successfully transmitted
	if((TWSR & 0xF8) != TW_START){ return 1; }
     1d6:	90 91 b9 00 	lds	r25, 0x00B9
     1da:	98 7f       	andi	r25, 0xF8	; 248
     1dc:	98 30       	cpi	r25, 0x08	; 8
     1de:	a1 f4       	brne	.+40     	; 0x208 <i2c_start_type2+0x42>
	
	// load slave address into data register
	TWDR = address;
     1e0:	80 93 bb 00 	sts	0x00BB, r24
	// start transmission of address
	TWCR = (1<<TWINT) | (1<<TWEN);
     1e4:	84 e8       	ldi	r24, 0x84	; 132
     1e6:	80 93 bc 00 	sts	0x00BC, r24
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );
     1ea:	ec eb       	ldi	r30, 0xBC	; 188
     1ec:	f0 e0       	ldi	r31, 0x00	; 0
     1ee:	80 81       	ld	r24, Z
     1f0:	88 23       	and	r24, r24
     1f2:	ec f7       	brge	.-6      	; 0x1ee <i2c_start_type2+0x28>
	
	// check if the device has acknowledged the READ / WRITE mode
	uint8_t twst = TW_STATUS & 0xF8;
     1f4:	90 91 b9 00 	lds	r25, 0x00B9
     1f8:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     1fa:	98 31       	cpi	r25, 0x18	; 24
     1fc:	39 f0       	breq	.+14     	; 0x20c <i2c_start_type2+0x46>
	i2c_stop();

	return 0;
}

uint8_t i2c_start_type2(uint8_t address)
     1fe:	81 e0       	ldi	r24, 0x01	; 1
     200:	90 34       	cpi	r25, 0x40	; 64
     202:	29 f4       	brne	.+10     	; 0x20e <i2c_start_type2+0x48>
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	08 95       	ret
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );
	
	// check if the start condition was successfully transmitted
	if((TWSR & 0xF8) != TW_START){ return 1; }
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	08 95       	ret
	
	// check if the device has acknowledged the READ / WRITE mode
	uint8_t twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
	
	return 0;
     20c:	80 e0       	ldi	r24, 0x00	; 0
}	
     20e:	08 95       	ret

00000210 <i2c_write>:

uint8_t i2c_write(uint8_t data)
{
	// load data into data register
	TWDR = data;
     210:	80 93 bb 00 	sts	0x00BB, r24
	// start transmission of data
	TWCR = (1<<TWINT) | (1<<TWEN);
     214:	84 e8       	ldi	r24, 0x84	; 132
     216:	80 93 bc 00 	sts	0x00BC, r24
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );
     21a:	ec eb       	ldi	r30, 0xBC	; 188
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	80 81       	ld	r24, Z
     220:	88 23       	and	r24, r24
     222:	ec f7       	brge	.-6      	; 0x21e <i2c_write+0xe>
	
	if( (TWSR & 0xF8) != TW_MT_DATA_ACK ){ return 1; }
     224:	90 91 b9 00 	lds	r25, 0x00B9
     228:	98 7f       	andi	r25, 0xF8	; 248
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	98 32       	cpi	r25, 0x28	; 40
     22e:	09 f4       	brne	.+2      	; 0x232 <i2c_write+0x22>
     230:	80 e0       	ldi	r24, 0x00	; 0
	
	return 0;
}
     232:	08 95       	ret

00000234 <i2c_writeReg>:
	}
}


uint8_t i2c_writeReg(uint8_t devaddr, uint16_t regaddr, uint8_t* data, uint16_t length)
{
     234:	df 92       	push	r13
     236:	ef 92       	push	r14
     238:	ff 92       	push	r15
     23a:	0f 93       	push	r16
     23c:	1f 93       	push	r17
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
     242:	c6 2f       	mov	r28, r22
     244:	07 2f       	mov	r16, r23
     246:	d4 2f       	mov	r29, r20
     248:	d5 2e       	mov	r13, r21
     24a:	79 01       	movw	r14, r18
	if (i2c_start_type2(devaddr | 0x00)) return 1;
     24c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <i2c_start_type2>
     250:	88 23       	and	r24, r24
     252:	e1 f4       	brne	.+56     	; 0x28c <i2c_writeReg+0x58>

	i2c_write((uint8_t)(regaddr / 256));
     254:	80 2f       	mov	r24, r16
     256:	0e 94 08 01 	call	0x210	; 0x210 <i2c_write>
	i2c_write((uint8_t)(regaddr %  256));
     25a:	8c 2f       	mov	r24, r28
     25c:	0e 94 08 01 	call	0x210	; 0x210 <i2c_write>

	for (uint16_t i = 0; i < length; i++)
     260:	e1 14       	cp	r14, r1
     262:	f1 04       	cpc	r15, r1
     264:	79 f0       	breq	.+30     	; 0x284 <i2c_writeReg+0x50>
     266:	0d 2f       	mov	r16, r29
     268:	1d 2d       	mov	r17, r13
     26a:	c0 e0       	ldi	r28, 0x00	; 0
     26c:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if (i2c_write(data[i])) return 1;
     26e:	f8 01       	movw	r30, r16
     270:	81 91       	ld	r24, Z+
     272:	8f 01       	movw	r16, r30
     274:	0e 94 08 01 	call	0x210	; 0x210 <i2c_write>
     278:	88 23       	and	r24, r24
     27a:	51 f4       	brne	.+20     	; 0x290 <i2c_writeReg+0x5c>
	if (i2c_start_type2(devaddr | 0x00)) return 1;

	i2c_write((uint8_t)(regaddr / 256));
	i2c_write((uint8_t)(regaddr %  256));

	for (uint16_t i = 0; i < length; i++)
     27c:	21 96       	adiw	r28, 0x01	; 1
     27e:	ce 15       	cp	r28, r14
     280:	df 05       	cpc	r29, r15
     282:	a9 f7       	brne	.-22     	; 0x26e <i2c_writeReg+0x3a>
	{
		if (i2c_write(data[i])) return 1;
	}

	i2c_stop();
     284:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>

	return 0;
     288:	80 e0       	ldi	r24, 0x00	; 0
     28a:	03 c0       	rjmp	.+6      	; 0x292 <i2c_writeReg+0x5e>
}


uint8_t i2c_writeReg(uint8_t devaddr, uint16_t regaddr, uint8_t* data, uint16_t length)
{
	if (i2c_start_type2(devaddr | 0x00)) return 1;
     28c:	81 e0       	ldi	r24, 0x01	; 1
     28e:	01 c0       	rjmp	.+2      	; 0x292 <i2c_writeReg+0x5e>
	i2c_write((uint8_t)(regaddr / 256));
	i2c_write((uint8_t)(regaddr %  256));

	for (uint16_t i = 0; i < length; i++)
	{
		if (i2c_write(data[i])) return 1;
     290:	81 e0       	ldi	r24, 0x01	; 1
	}

	i2c_stop();

	return 0;
}
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	1f 91       	pop	r17
     298:	0f 91       	pop	r16
     29a:	ff 90       	pop	r15
     29c:	ef 90       	pop	r14
     29e:	df 90       	pop	r13
     2a0:	08 95       	ret

000002a2 <i2c_read_ack>:

uint8_t i2c_read_ack(void)
{
	
	// start TWI module and acknowledge data after reception
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA); 
     2a2:	84 ec       	ldi	r24, 0xC4	; 196
     2a4:	80 93 bc 00 	sts	0x00BC, r24
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );
     2a8:	ec eb       	ldi	r30, 0xBC	; 188
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	80 81       	ld	r24, Z
     2ae:	88 23       	and	r24, r24
     2b0:	ec f7       	brge	.-6      	; 0x2ac <i2c_read_ack+0xa>
	// return received data from TWDR
	return TWDR;
     2b2:	80 91 bb 00 	lds	r24, 0x00BB
}
     2b6:	08 95       	ret

000002b8 <i2c_read_nack>:

uint8_t i2c_read_nack(void)
{
	
	// start receiving without acknowledging reception
	TWCR = (1<<TWINT) | (1<<TWEN);
     2b8:	84 e8       	ldi	r24, 0x84	; 132
     2ba:	80 93 bc 00 	sts	0x00BC, r24
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );
     2be:	ec eb       	ldi	r30, 0xBC	; 188
     2c0:	f0 e0       	ldi	r31, 0x00	; 0
     2c2:	80 81       	ld	r24, Z
     2c4:	88 23       	and	r24, r24
     2c6:	ec f7       	brge	.-6      	; 0x2c2 <i2c_read_nack+0xa>
	// return received data from TWDR
	return TWDR;
     2c8:	80 91 bb 00 	lds	r24, 0x00BB
}
     2cc:	08 95       	ret

000002ce <i2c_readReg>:

	return 0;
}

uint8_t i2c_readReg(uint8_t devaddr, uint16_t regaddr, uint8_t* data, uint16_t length)
{
     2ce:	af 92       	push	r10
     2d0:	bf 92       	push	r11
     2d2:	cf 92       	push	r12
     2d4:	df 92       	push	r13
     2d6:	ef 92       	push	r14
     2d8:	ff 92       	push	r15
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	c8 2f       	mov	r28, r24
     2e4:	e6 2e       	mov	r14, r22
     2e6:	07 2f       	mov	r16, r23
     2e8:	5a 01       	movw	r10, r20
     2ea:	69 01       	movw	r12, r18
	if (i2c_start_type2(devaddr)) return 1;
     2ec:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <i2c_start_type2>
     2f0:	88 23       	and	r24, r24
     2f2:	39 f5       	brne	.+78     	; 0x342 <i2c_readReg+0x74>

	i2c_write((uint8_t)(regaddr / 256));
     2f4:	80 2f       	mov	r24, r16
     2f6:	0e 94 08 01 	call	0x210	; 0x210 <i2c_write>
	i2c_write((uint8_t)(regaddr %  256));
     2fa:	8e 2d       	mov	r24, r14
     2fc:	0e 94 08 01 	call	0x210	; 0x210 <i2c_write>

	if (i2c_start_type2(devaddr | 0x01)) return 1;
     300:	8c 2f       	mov	r24, r28
     302:	81 60       	ori	r24, 0x01	; 1
     304:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <i2c_start_type2>
     308:	88 23       	and	r24, r24
     30a:	e9 f4       	brne	.+58     	; 0x346 <i2c_readReg+0x78>

	for (uint16_t i = 0; i < (length-1); i++)
     30c:	e6 01       	movw	r28, r12
     30e:	21 97       	sbiw	r28, 0x01	; 1
     310:	69 f0       	breq	.+26     	; 0x32c <i2c_readReg+0x5e>
     312:	75 01       	movw	r14, r10
     314:	00 e0       	ldi	r16, 0x00	; 0
     316:	10 e0       	ldi	r17, 0x00	; 0
	{
		data[i] = i2c_read_ack();
     318:	0e 94 51 01 	call	0x2a2	; 0x2a2 <i2c_read_ack>
     31c:	f7 01       	movw	r30, r14
     31e:	81 93       	st	Z+, r24
     320:	7f 01       	movw	r14, r30
	i2c_write((uint8_t)(regaddr / 256));
	i2c_write((uint8_t)(regaddr %  256));

	if (i2c_start_type2(devaddr | 0x01)) return 1;

	for (uint16_t i = 0; i < (length-1); i++)
     322:	0f 5f       	subi	r16, 0xFF	; 255
     324:	1f 4f       	sbci	r17, 0xFF	; 255
     326:	0c 17       	cp	r16, r28
     328:	1d 07       	cpc	r17, r29
     32a:	b0 f3       	brcs	.-20     	; 0x318 <i2c_readReg+0x4a>
	{
		data[i] = i2c_read_ack();
	}
	data[(length-1)] = i2c_read_nack();
     32c:	e6 01       	movw	r28, r12
     32e:	21 97       	sbiw	r28, 0x01	; 1
     330:	ca 0d       	add	r28, r10
     332:	db 1d       	adc	r29, r11
     334:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <i2c_read_nack>
     338:	88 83       	st	Y, r24

	i2c_stop();
     33a:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>

	return 0;
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	03 c0       	rjmp	.+6      	; 0x348 <i2c_readReg+0x7a>
	return 0;
}

uint8_t i2c_readReg(uint8_t devaddr, uint16_t regaddr, uint8_t* data, uint16_t length)
{
	if (i2c_start_type2(devaddr)) return 1;
     342:	81 e0       	ldi	r24, 0x01	; 1
     344:	01 c0       	rjmp	.+2      	; 0x348 <i2c_readReg+0x7a>

	i2c_write((uint8_t)(regaddr / 256));
	i2c_write((uint8_t)(regaddr %  256));

	if (i2c_start_type2(devaddr | 0x01)) return 1;
     346:	81 e0       	ldi	r24, 0x01	; 1
	data[(length-1)] = i2c_read_nack();

	i2c_stop();

	return 0;
}
     348:	df 91       	pop	r29
     34a:	cf 91       	pop	r28
     34c:	1f 91       	pop	r17
     34e:	0f 91       	pop	r16
     350:	ff 90       	pop	r15
     352:	ef 90       	pop	r14
     354:	df 90       	pop	r13
     356:	cf 90       	pop	r12
     358:	bf 90       	pop	r11
     35a:	af 90       	pop	r10
     35c:	08 95       	ret

0000035e <serviceCommand>:
	USART_SendByte(0x0A);
	USART_SendByte(0x0A);
}

void serviceCommand(uint8_t *recvBuffer)
{
     35e:	ef 92       	push	r14
     360:	ff 92       	push	r15
     362:	0f 93       	push	r16
     364:	1f 93       	push	r17
     366:	cf 93       	push	r28
     368:	df 93       	push	r29
     36a:	fc 01       	movw	r30, r24
	uint8_t tempStrArr[40], candidateNo;
	uint16_t tempStrLen, tempAddrHolder;

	if(*recvBuffer == '@')		// Command to save string
     36c:	80 81       	ld	r24, Z
     36e:	80 34       	cpi	r24, 0x40	; 64
     370:	09 f0       	breq	.+2      	; 0x374 <serviceCommand+0x16>
     372:	3f c0       	rjmp	.+126    	; 0x3f2 <serviceCommand+0x94>
	{
		candidateNo = *(++recvBuffer);
		tempStrLen = (*(++recvBuffer) + 1);
     374:	ee 24       	eor	r14, r14
     376:	ff 24       	eor	r15, r15
     378:	68 94       	set
     37a:	e1 f8       	bld	r14, 1
     37c:	ee 0e       	add	r14, r30
     37e:	ff 1e       	adc	r15, r31
     380:	02 81       	ldd	r16, Z+2	; 0x02
     382:	10 e0       	ldi	r17, 0x00	; 0
     384:	0f 5f       	subi	r16, 0xFF	; 255
     386:	1f 4f       	sbci	r17, 0xFF	; 255
		stringPtrArray[candidateNo] = stringSaveAddr;
     388:	60 91 db 04 	lds	r22, 0x04DB
     38c:	70 91 dc 04 	lds	r23, 0x04DC
     390:	e1 81       	ldd	r30, Z+1	; 0x01
     392:	f0 e0       	ldi	r31, 0x00	; 0
     394:	cf ed       	ldi	r28, 0xDF	; 223
     396:	d4 e0       	ldi	r29, 0x04	; 4
     398:	ee 0f       	add	r30, r30
     39a:	ff 1f       	adc	r31, r31
     39c:	ec 0f       	add	r30, r28
     39e:	fd 1f       	adc	r31, r29
     3a0:	71 83       	std	Z+1, r23	; 0x01
     3a2:	60 83       	st	Z, r22

		i2c_writeReg(EEPROM_DEV_ADDR, stringSaveAddr, recvBuffer, tempStrLen);	// Save the characters of the string
     3a4:	80 ea       	ldi	r24, 0xA0	; 160
     3a6:	a7 01       	movw	r20, r14
     3a8:	98 01       	movw	r18, r16
     3aa:	0e 94 1a 01 	call	0x234	; 0x234 <i2c_writeReg>
		
		stringSaveAddr += (tempStrLen + 1);
     3ae:	80 91 db 04 	lds	r24, 0x04DB
     3b2:	90 91 dc 04 	lds	r25, 0x04DC
     3b6:	01 96       	adiw	r24, 0x01	; 1
     3b8:	80 0f       	add	r24, r16
     3ba:	91 1f       	adc	r25, r17
     3bc:	90 93 dc 04 	sts	0x04DC, r25
     3c0:	80 93 db 04 	sts	0x04DB, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c4:	8f ef       	ldi	r24, 0xFF	; 255
     3c6:	9f e1       	ldi	r25, 0x1F	; 31
     3c8:	ac e1       	ldi	r26, 0x1C	; 28
     3ca:	81 50       	subi	r24, 0x01	; 1
     3cc:	90 40       	sbci	r25, 0x00	; 0
     3ce:	a0 40       	sbci	r26, 0x00	; 0
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <serviceCommand+0x6c>
     3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <serviceCommand+0x76>
     3d4:	00 00       	nop
		_delay_ms(500);
		i2cWriteWordArray(EEPROM_DEV_ADDR, namePtrSaveAddr, stringPtrArray, MAX_NO_CANDIDATES);
     3d6:	80 ea       	ldi	r24, 0xA0	; 160
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	60 e0       	ldi	r22, 0x00	; 0
     3dc:	71 e0       	ldi	r23, 0x01	; 1
     3de:	ae 01       	movw	r20, r28
     3e0:	20 e4       	ldi	r18, 0x40	; 64
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	0e 94 8f 03 	call	0x71e	; 0x71e <i2cWriteWordArray>
		
		USART_putstring("OK");		// Acknowledge / Feedback
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	92 e0       	ldi	r25, 0x02	; 2
     3ec:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	uint16_t tempStrLen, tempAddrHolder;

	if(*recvBuffer == '@')		// Command to save string
	{
		candidateNo = *(++recvBuffer);
		tempStrLen = (*(++recvBuffer) + 1);
     3f0:	f7 01       	movw	r30, r14
		i2cWriteWordArray(EEPROM_DEV_ADDR, namePtrSaveAddr, stringPtrArray, MAX_NO_CANDIDATES);
		
		USART_putstring("OK");		// Acknowledge / Feedback
	}

	if(*recvBuffer == '?')		// Command to read string
     3f2:	80 81       	ld	r24, Z
     3f4:	8f 33       	cpi	r24, 0x3F	; 63
     3f6:	99 f5       	brne	.+102    	; 0x45e <serviceCommand+0x100>
	{
		candidateNo = *(++recvBuffer);
		i2c_readReg(EEPROM_DEV_ADDR, (stringPtrArray[candidateNo]), readString, 1);	// first read the lenght byte of the name string in EEPROM
     3f8:	c1 81       	ldd	r28, Z+1	; 0x01
     3fa:	d0 e0       	ldi	r29, 0x00	; 0
     3fc:	cc 0f       	add	r28, r28
     3fe:	dd 1f       	adc	r29, r29
     400:	c1 52       	subi	r28, 0x21	; 33
     402:	db 4f       	sbci	r29, 0xFB	; 251
     404:	68 81       	ld	r22, Y
     406:	79 81       	ldd	r23, Y+1	; 0x01
     408:	08 ed       	ldi	r16, 0xD8	; 216
     40a:	18 e0       	ldi	r17, 0x08	; 8
     40c:	80 ea       	ldi	r24, 0xA0	; 160
     40e:	a8 01       	movw	r20, r16
     410:	21 e0       	ldi	r18, 0x01	; 1
     412:	30 e0       	ldi	r19, 0x00	; 0
     414:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_readReg>
     418:	af ef       	ldi	r26, 0xFF	; 255
     41a:	b9 e5       	ldi	r27, 0x59	; 89
     41c:	11 97       	sbiw	r26, 0x01	; 1
     41e:	f1 f7       	brne	.-4      	; 0x41c <serviceCommand+0xbe>
     420:	00 c0       	rjmp	.+0      	; 0x422 <serviceCommand+0xc4>
     422:	00 00       	nop
		 _delay_ms(5);

		tempStrLen = readString[0];
     424:	e0 90 d8 08 	lds	r14, 0x08D8
     428:	ff 24       	eor	r15, r15

		i2c_readReg(EEPROM_DEV_ADDR, (stringPtrArray[candidateNo] + 1), readString, tempStrLen);
     42a:	68 81       	ld	r22, Y
     42c:	79 81       	ldd	r23, Y+1	; 0x01
     42e:	6f 5f       	subi	r22, 0xFF	; 255
     430:	7f 4f       	sbci	r23, 0xFF	; 255
     432:	80 ea       	ldi	r24, 0xA0	; 160
     434:	a8 01       	movw	r20, r16
     436:	97 01       	movw	r18, r14
     438:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_readReg>
		for(uint8_t i = 0; i < tempStrLen; i++)
     43c:	e1 14       	cp	r14, r1
     43e:	f1 04       	cpc	r15, r1
     440:	71 f0       	breq	.+28     	; 0x45e <serviceCommand+0x100>
     442:	c0 e0       	ldi	r28, 0x00	; 0
			{
				USART_SendByte(readString[i]);
     444:	f8 01       	movw	r30, r16
     446:	ec 0f       	add	r30, r28
     448:	f1 1d       	adc	r31, r1
     44a:	80 81       	ld	r24, Z
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
		 _delay_ms(5);

		tempStrLen = readString[0];

		i2c_readReg(EEPROM_DEV_ADDR, (stringPtrArray[candidateNo] + 1), readString, tempStrLen);
		for(uint8_t i = 0; i < tempStrLen; i++)
     452:	cf 5f       	subi	r28, 0xFF	; 255
     454:	8c 2f       	mov	r24, r28
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	8e 15       	cp	r24, r14
     45a:	9f 05       	cpc	r25, r15
     45c:	98 f3       	brcs	.-26     	; 0x444 <serviceCommand+0xe6>

		// i2c_readReg(EEPROM_DEV_ADDR, 0x0080, tempStrArr, 40);
		// for(uint8_t i=0; i <= 40; i++)
		// 	USART_SendByte(tempStrArr[i]);
	}
}
     45e:	df 91       	pop	r29
     460:	cf 91       	pop	r28
     462:	1f 91       	pop	r17
     464:	0f 91       	pop	r16
     466:	ff 90       	pop	r15
     468:	ef 90       	pop	r14
     46a:	08 95       	ret

0000046c <printName>:
		bufferPointer = 0;
}

/********************** Added 23.04.2017 **********************************************/
void printName(uint8_t candidateNo, uint16_t Voter_no)
{
     46c:	8f 92       	push	r8
     46e:	9f 92       	push	r9
     470:	af 92       	push	r10
     472:	bf 92       	push	r11
     474:	df 92       	push	r13
     476:	ef 92       	push	r14
     478:	ff 92       	push	r15
     47a:	0f 93       	push	r16
     47c:	1f 93       	push	r17
     47e:	cf 93       	push	r28
     480:	df 93       	push	r29
     482:	4b 01       	movw	r8, r22
	uint8_t tempStrLen;
	i2c_readReg(EEPROM_DEV_ADDR, (stringPtrArray[candidateNo]), readString, 1);	// first read the lenght byte of the name string in EEPROM
     484:	c8 2f       	mov	r28, r24
     486:	d0 e0       	ldi	r29, 0x00	; 0
     488:	cc 0f       	add	r28, r28
     48a:	dd 1f       	adc	r29, r29
     48c:	c1 52       	subi	r28, 0x21	; 33
     48e:	db 4f       	sbci	r29, 0xFB	; 251
     490:	68 81       	ld	r22, Y
     492:	79 81       	ldd	r23, Y+1	; 0x01
     494:	08 ed       	ldi	r16, 0xD8	; 216
     496:	18 e0       	ldi	r17, 0x08	; 8
     498:	80 ea       	ldi	r24, 0xA0	; 160
     49a:	a8 01       	movw	r20, r16
     49c:	21 e0       	ldi	r18, 0x01	; 1
     49e:	30 e0       	ldi	r19, 0x00	; 0
     4a0:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_readReg>
	tempStrLen = readString[0];
     4a4:	d0 90 d8 08 	lds	r13, 0x08D8
     4a8:	8f ef       	ldi	r24, 0xFF	; 255
     4aa:	9f e9       	ldi	r25, 0x9F	; 159
     4ac:	a5 e0       	ldi	r26, 0x05	; 5
     4ae:	81 50       	subi	r24, 0x01	; 1
     4b0:	90 40       	sbci	r25, 0x00	; 0
     4b2:	a0 40       	sbci	r26, 0x00	; 0
     4b4:	e1 f7       	brne	.-8      	; 0x4ae <printName+0x42>
     4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <printName+0x4c>
     4b8:	00 00       	nop
	_delay_ms(100);
	i2c_readReg(EEPROM_DEV_ADDR, (stringPtrArray[candidateNo] + 1), readString, tempStrLen);
     4ba:	68 81       	ld	r22, Y
     4bc:	79 81       	ldd	r23, Y+1	; 0x01
     4be:	6f 5f       	subi	r22, 0xFF	; 255
     4c0:	7f 4f       	sbci	r23, 0xFF	; 255
     4c2:	80 ea       	ldi	r24, 0xA0	; 160
     4c4:	a8 01       	movw	r20, r16
     4c6:	2d 2d       	mov	r18, r13
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	0e 94 67 01 	call	0x2ce	; 0x2ce <i2c_readReg>
	
	USART_putstring("************************");
     4ce:	0f 2e       	mov	r0, r31
     4d0:	fe e9       	ldi	r31, 0x9E	; 158
     4d2:	af 2e       	mov	r10, r31
     4d4:	f0 e0       	ldi	r31, 0x00	; 0
     4d6:	bf 2e       	mov	r11, r31
     4d8:	f0 2d       	mov	r31, r0
     4da:	83 e0       	ldi	r24, 0x03	; 3
     4dc:	92 e0       	ldi	r25, 0x02	; 2
     4de:	f5 01       	movw	r30, r10
     4e0:	19 95       	eicall
	USART_SendByte(0x0A);
     4e2:	0f 2e       	mov	r0, r31
     4e4:	f6 e9       	ldi	r31, 0x96	; 150
     4e6:	ef 2e       	mov	r14, r31
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	ff 2e       	mov	r15, r31
     4ec:	f0 2d       	mov	r31, r0
     4ee:	8a e0       	ldi	r24, 0x0A	; 10
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	f7 01       	movw	r30, r14
     4f4:	19 95       	eicall
	
	USART_putstring("Voter No.: ");
     4f6:	8c e1       	ldi	r24, 0x1C	; 28
     4f8:	92 e0       	ldi	r25, 0x02	; 2
     4fa:	f5 01       	movw	r30, r10
     4fc:	19 95       	eicall
	USART_Transmit_dec(Voter_no);
     4fe:	c4 01       	movw	r24, r8
     500:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0A);
     504:	8a e0       	ldi	r24, 0x0A	; 10
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	f7 01       	movw	r30, r14
     50a:	19 95       	eicall
	
	USART_putstring("Candidate Selected");
     50c:	88 e2       	ldi	r24, 0x28	; 40
     50e:	92 e0       	ldi	r25, 0x02	; 2
     510:	f5 01       	movw	r30, r10
     512:	19 95       	eicall
	USART_SendByte(0x0A);
     514:	8a e0       	ldi	r24, 0x0A	; 10
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	f7 01       	movw	r30, r14
     51a:	19 95       	eicall
	for(uint8_t i = 0; i < tempStrLen; i++)
     51c:	dd 20       	and	r13, r13
     51e:	71 f0       	breq	.+28     	; 0x53c <printName+0xd0>
	if(bufferPointer > MAX_RECV_BUFFERSIZE)
		bufferPointer = 0;
}

/********************** Added 23.04.2017 **********************************************/
void printName(uint8_t candidateNo, uint16_t Voter_no)
     520:	e8 01       	movw	r28, r16
     522:	21 96       	adiw	r28, 0x01	; 1
     524:	da 94       	dec	r13
     526:	cd 0d       	add	r28, r13
     528:	d1 1d       	adc	r29, r1
	
	USART_putstring("Candidate Selected");
	USART_SendByte(0x0A);
	for(uint8_t i = 0; i < tempStrLen; i++)
	{
		USART_SendByte(readString[i]);
     52a:	d8 01       	movw	r26, r16
     52c:	8d 91       	ld	r24, X+
     52e:	8d 01       	movw	r16, r26
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	f7 01       	movw	r30, r14
     534:	19 95       	eicall
	USART_Transmit_dec(Voter_no);
	USART_SendByte(0x0A);
	
	USART_putstring("Candidate Selected");
	USART_SendByte(0x0A);
	for(uint8_t i = 0; i < tempStrLen; i++)
     536:	0c 17       	cp	r16, r28
     538:	1d 07       	cpc	r17, r29
     53a:	b9 f7       	brne	.-18     	; 0x52a <printName+0xbe>
	{
		USART_SendByte(readString[i]);
	}
	USART_SendByte(0x0a);
     53c:	8a e0       	ldi	r24, 0x0A	; 10
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	f7 01       	movw	r30, r14
     542:	19 95       	eicall
	
	USART_putstring("************************");
     544:	83 e0       	ldi	r24, 0x03	; 3
     546:	92 e0       	ldi	r25, 0x02	; 2
     548:	f5 01       	movw	r30, r10
     54a:	19 95       	eicall
	USART_SendByte(0x0A);
     54c:	8a e0       	ldi	r24, 0x0A	; 10
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	f7 01       	movw	r30, r14
     552:	19 95       	eicall
	USART_SendByte(0x0A);
     554:	8a e0       	ldi	r24, 0x0A	; 10
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	f7 01       	movw	r30, r14
     55a:	19 95       	eicall
	USART_SendByte(0x0A);
     55c:	8a e0       	ldi	r24, 0x0A	; 10
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	f7 01       	movw	r30, r14
     562:	19 95       	eicall
	USART_SendByte(0x0A);
     564:	8a e0       	ldi	r24, 0x0A	; 10
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	f7 01       	movw	r30, r14
     56a:	19 95       	eicall
}
     56c:	df 91       	pop	r29
     56e:	cf 91       	pop	r28
     570:	1f 91       	pop	r17
     572:	0f 91       	pop	r16
     574:	ff 90       	pop	r15
     576:	ef 90       	pop	r14
     578:	df 90       	pop	r13
     57a:	bf 90       	pop	r11
     57c:	af 90       	pop	r10
     57e:	9f 90       	pop	r9
     580:	8f 90       	pop	r8
     582:	08 95       	ret

00000584 <PORT_pins_init>:
/********************** Added 23.04.2017 **********************************************/

/* Please note the Controller pin conections to the other devices can vary between AT32 AT2561 and AT2560 */
void PORT_pins_init()
{
	DDRA = 0xFF;				// Output Port to 16x2 LCD Set the DDRA register nits all pins are outputs.
     584:	8f ef       	ldi	r24, 0xFF	; 255
     586:	81 b9       	out	0x01, r24	; 1
	SETBIT(DDRD, 3);			// NA
     588:	53 9a       	sbi	0x0a, 3	; 10
	SETBIT(DDRD, 4);			// NA
     58a:	54 9a       	sbi	0x0a, 4	; 10
	CLEARBIT(PORTD, 3);			// NA
     58c:	5b 98       	cbi	0x0b, 3	; 11
	SETBIT(DDRD, 7);			// Output RS of LCD. 
     58e:	57 9a       	sbi	0x0a, 7	; 10
	SETBIT(DDRD, 6);			// Output EN of LCD
     590:	56 9a       	sbi	0x0a, 6	; 10
	SETBIT(DDRG, 0);			// Pin connected to LED set as ouptut pin
     592:	98 9a       	sbi	0x13, 0	; 19
	SETBIT(DDRG, 1);			// Buzzer	
     594:	99 9a       	sbi	0x13, 1	; 19
	CLEARBIT(DDRL, 1);			// Input pin connected to Initialise button
     596:	ea e0       	ldi	r30, 0x0A	; 10
     598:	f1 e0       	ldi	r31, 0x01	; 1
     59a:	90 81       	ld	r25, Z
     59c:	9d 7f       	andi	r25, 0xFD	; 253
     59e:	90 83       	st	Z, r25
	CLEARBIT(DDRL, 2);			// Input pin connected to Result button
     5a0:	90 81       	ld	r25, Z
     5a2:	9b 7f       	andi	r25, 0xFB	; 251
     5a4:	90 83       	st	Z, r25
	
	CLEARBIT(PORTG, 1);			// Buzzer OFF
     5a6:	a1 98       	cbi	0x14, 1	; 20
	SETBIT(PORTG, 0);			// LED OFF
     5a8:	a0 9a       	sbi	0x14, 0	; 20
	SETBIT(PORTL, 1);			// pull-up INIT line
     5aa:	eb e0       	ldi	r30, 0x0B	; 11
     5ac:	f1 e0       	ldi	r31, 0x01	; 1
     5ae:	90 81       	ld	r25, Z
     5b0:	92 60       	ori	r25, 0x02	; 2
     5b2:	90 83       	st	Z, r25
	SETBIT(PORTL, 2);			// Pull-up RESULT line
     5b4:	90 81       	ld	r25, Z
     5b6:	94 60       	ori	r25, 0x04	; 4
     5b8:	90 83       	st	Z, r25
	
		SETBIT(DDRG,5);				//LED_INDICATOR
     5ba:	9d 9a       	sbi	0x13, 5	; 19
		SETBIT(PORTG,5);
     5bc:	a5 9a       	sbi	0x14, 5	; 20
		
	
	DDRC = 0x00;				// Inputs from Encoder IC's
     5be:	17 b8       	out	0x07, r1	; 7
	PORTC = 0xFF;				// Activste pull-ups for DATA in not for 'data availables'
     5c0:	88 b9       	out	0x08, r24	; 8
	
	DDRB |= (1 << PB2);			// MOSI pin set as output
     5c2:	22 9a       	sbi	0x04, 2	; 4
	
	cli();
     5c4:	f8 94       	cli
	spi_init();
     5c6:	0e 94 af 38 	call	0x715e	; 0x715e <spi_init>
	
}
     5ca:	08 95       	ret

000005cc <USART_Init>:

void USART_Init(void)
{
	UBRR0L = USART_BAUD_PRESCALE;			// Load lower 8-bits into the low byte of the UBRR register
     5cc:	87 e7       	ldi	r24, 0x77	; 119
     5ce:	80 93 c4 00 	sts	0x00C4, r24
	UBRR0H = (USART_BAUD_PRESCALE >> 8); 
     5d2:	10 92 c5 00 	sts	0x00C5, r1
	/*   Load upper 8-bits into the high byte of the UBRR register
	     Default frame format is 8 data bits, no parity, 1 stop bit
		 to change use UCSRC*/
	/*   Enable receiver and transmitter and receive complete interrupt */
	UCSR0B = ((1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0));
     5d6:	88 e9       	ldi	r24, 0x98	; 152
     5d8:	80 93 c1 00 	sts	0x00C1, r24
}
     5dc:	08 95       	ret

000005de <USART_ReceiveByte>:
	}
}

uint8_t USART_ReceiveByte()
{
  while((UCSR0A &(1<<RXC0)) == 0);		// wait for transmit complete flag.
     5de:	e0 ec       	ldi	r30, 0xC0	; 192
     5e0:	f0 e0       	ldi	r31, 0x00	; 0
     5e2:	80 81       	ld	r24, Z
     5e4:	88 23       	and	r24, r24
     5e6:	ec f7       	brge	.-6      	; 0x5e2 <USART_ReceiveByte+0x4>
  return UDR0;
     5e8:	80 91 c6 00 	lds	r24, 0x00C6
}
     5ec:	08 95       	ret

000005ee <lcd_cmd>:
/******************************************************************************************************/
/*	Routine for LCD																					  */
/******************************************************************************************************/
void lcd_cmd(unsigned char cmd_addr) // Function to send command to LCD
{
	LCD = cmd_addr;		// Puts the command value on the Controller port connected to LCD data lines
     5ee:	82 b9       	out	0x02, r24	; 2
	RS = 0;				// RS = 0  Indicates to LCD data is a command
     5f0:	5f 98       	cbi	0x0b, 7	; 11
	EN = 1;				// ENABLE = 1 Enables LCD controller to write data to its RAM
     5f2:	5e 9a       	sbi	0x0b, 6	; 11
     5f4:	8f ef       	ldi	r24, 0xFF	; 255
     5f6:	93 e2       	ldi	r25, 0x23	; 35
     5f8:	01 97       	sbiw	r24, 0x01	; 1
     5fa:	f1 f7       	brne	.-4      	; 0x5f8 <lcd_cmd+0xa>
     5fc:	00 c0       	rjmp	.+0      	; 0x5fe <lcd_cmd+0x10>
     5fe:	00 00       	nop
	_delay_ms(2);
	EN = 0;
     600:	5e 98       	cbi	0x0b, 6	; 11
}
     602:	08 95       	ret

00000604 <lcd_data_str>:

void lcd_data_str(char str[50])      // Function to send string
{
     604:	fc 01       	movw	r30, r24
	int p;
	for (p=0;str[p]!='\0';p++)
     606:	80 81       	ld	r24, Z
     608:	88 23       	and	r24, r24
     60a:	71 f0       	breq	.+28     	; 0x628 <lcd_data_str+0x24>
	EN = 1;				// ENABLE = 1 Enables LCD controller to write data to its RAM
	_delay_ms(2);
	EN = 0;
}

void lcd_data_str(char str[50])      // Function to send string
     60c:	31 96       	adiw	r30, 0x01	; 1
{
	int p;
	for (p=0;str[p]!='\0';p++)
	{
		LCD = str[p];
     60e:	82 b9       	out	0x02, r24	; 2
		RS = 1;				  // RS=1,FOR DATA
     610:	5f 9a       	sbi	0x0b, 7	; 11
		EN = 1;				  // ENABLE =1
     612:	5e 9a       	sbi	0x0b, 6	; 11
     614:	8f ef       	ldi	r24, 0xFF	; 255
     616:	93 e2       	ldi	r25, 0x23	; 35
     618:	01 97       	sbiw	r24, 0x01	; 1
     61a:	f1 f7       	brne	.-4      	; 0x618 <lcd_data_str+0x14>
     61c:	00 c0       	rjmp	.+0      	; 0x61e <lcd_data_str+0x1a>
     61e:	00 00       	nop
		_delay_ms(2);
		EN = 0;				  // ENABLE =0
     620:	5e 98       	cbi	0x0b, 6	; 11
}

void lcd_data_str(char str[50])      // Function to send string
{
	int p;
	for (p=0;str[p]!='\0';p++)
     622:	81 91       	ld	r24, Z+
     624:	88 23       	and	r24, r24
     626:	99 f7       	brne	.-26     	; 0x60e <lcd_data_str+0xa>
     628:	08 95       	ret

0000062a <lcd_data_byte>:
	}
}

void lcd_data_byte(unsigned char byte) // Function to send one byte
{
	LCD = byte;
     62a:	82 b9       	out	0x02, r24	; 2
	RS = 1;							// RS = 1;
     62c:	5f 9a       	sbi	0x0b, 7	; 11
	EN = 1;							// EN = 1;
     62e:	5e 9a       	sbi	0x0b, 6	; 11
     630:	8f ef       	ldi	r24, 0xFF	; 255
     632:	93 e2       	ldi	r25, 0x23	; 35
     634:	01 97       	sbiw	r24, 0x01	; 1
     636:	f1 f7       	brne	.-4      	; 0x634 <lcd_data_byte+0xa>
     638:	00 c0       	rjmp	.+0      	; 0x63a <lcd_data_byte+0x10>
     63a:	00 00       	nop
	_delay_ms(2);
	EN = 0;
     63c:	5e 98       	cbi	0x0b, 6	; 11
}
     63e:	08 95       	ret

00000640 <lcd_data_int1>:
{
	char dig_ctrl_var;
	int p, j;
	for (j=1;j>=0;j--)
	{
		vote_amt[j]=vote%10;
     640:	2a e0       	ldi	r18, 0x0A	; 10
     642:	30 e0       	ldi	r19, 0x00	; 0
     644:	b9 01       	movw	r22, r18
     646:	0e 94 c0 38 	call	0x7180	; 0x7180 <__udivmodhi4>
     64a:	90 93 ce 08 	sts	0x08CE, r25
     64e:	80 93 cd 08 	sts	0x08CD, r24
     652:	cb 01       	movw	r24, r22
     654:	b9 01       	movw	r22, r18
     656:	0e 94 c0 38 	call	0x7180	; 0x7180 <__udivmodhi4>
     65a:	eb ec       	ldi	r30, 0xCB	; 203
     65c:	f8 e0       	ldi	r31, 0x08	; 8
     65e:	80 83       	st	Z, r24
     660:	91 83       	std	Z+1, r25	; 0x01
		vote=vote/10;
	}
	for (p=0;p<=1;p++)
	{
		dig_ctrl_var = vote_amt[p] + 48;    // Here the decimal data is converted to HEX because LCD only reads HEX.
     662:	80 5d       	subi	r24, 0xD0	; 208
		LCD = dig_ctrl_var;					// 48 is actually 0x30. So if wanting to display 1 on the LCD what needs to be sent is
     664:	82 b9       	out	0x02, r24	; 2
		RS = 1;								// 0x31. That is what is done here 1 + 0x30 = 0x31
     666:	5f 9a       	sbi	0x0b, 7	; 11
		EN = 1;
     668:	5e 9a       	sbi	0x0b, 6	; 11
     66a:	8f ef       	ldi	r24, 0xFF	; 255
     66c:	93 e2       	ldi	r25, 0x23	; 35
     66e:	01 97       	sbiw	r24, 0x01	; 1
     670:	f1 f7       	brne	.-4      	; 0x66e <lcd_data_int1+0x2e>
     672:	00 c0       	rjmp	.+0      	; 0x674 <lcd_data_int1+0x34>
     674:	00 00       	nop
		_delay_ms(2);
		EN = 0;
     676:	5e 98       	cbi	0x0b, 6	; 11
		vote_amt[j]=vote%10;
		vote=vote/10;
	}
	for (p=0;p<=1;p++)
	{
		dig_ctrl_var = vote_amt[p] + 48;    // Here the decimal data is converted to HEX because LCD only reads HEX.
     678:	80 91 cd 08 	lds	r24, 0x08CD
     67c:	80 5d       	subi	r24, 0xD0	; 208
		LCD = dig_ctrl_var;					// 48 is actually 0x30. So if wanting to display 1 on the LCD what needs to be sent is
     67e:	82 b9       	out	0x02, r24	; 2
		RS = 1;								// 0x31. That is what is done here 1 + 0x30 = 0x31
     680:	5f 9a       	sbi	0x0b, 7	; 11
		EN = 1;
     682:	5e 9a       	sbi	0x0b, 6	; 11
     684:	8f ef       	ldi	r24, 0xFF	; 255
     686:	93 e2       	ldi	r25, 0x23	; 35
     688:	01 97       	sbiw	r24, 0x01	; 1
     68a:	f1 f7       	brne	.-4      	; 0x688 <lcd_data_int1+0x48>
     68c:	00 c0       	rjmp	.+0      	; 0x68e <lcd_data_int1+0x4e>
     68e:	00 00       	nop
		_delay_ms(2);
		EN = 0;
     690:	5e 98       	cbi	0x0b, 6	; 11
	}
}
     692:	08 95       	ret

00000694 <lcd_data_int>:

void lcd_data_int(unsigned int vote)// Function to send 0-9 character values
{
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	e3 ed       	ldi	r30, 0xD3	; 211
     69a:	f8 e0       	ldi	r31, 0x08	; 8
		_delay_ms(2);
		EN = 0;
	}
}

void lcd_data_int(unsigned int vote)// Function to send 0-9 character values
     69c:	ef 01       	movw	r28, r30
     69e:	28 97       	sbiw	r28, 0x08	; 8
{
	char dig_ctrl_var;
	int p, j;
	for (j=3;j>=0;j--)
	{
		vote_amt[j]=vote%10;
     6a0:	2a e0       	ldi	r18, 0x0A	; 10
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	b9 01       	movw	r22, r18
     6a6:	0e 94 c0 38 	call	0x7180	; 0x7180 <__udivmodhi4>
     6aa:	92 93       	st	-Z, r25
     6ac:	82 93       	st	-Z, r24
		vote=vote/10;
     6ae:	86 2f       	mov	r24, r22
     6b0:	97 2f       	mov	r25, r23

void lcd_data_int(unsigned int vote)// Function to send 0-9 character values
{
	char dig_ctrl_var;
	int p, j;
	for (j=3;j>=0;j--)
     6b2:	ec 17       	cp	r30, r28
     6b4:	fd 07       	cpc	r31, r29
     6b6:	b1 f7       	brne	.-20     	; 0x6a4 <lcd_data_int+0x10>
     6b8:	eb ec       	ldi	r30, 0xCB	; 203
     6ba:	f8 e0       	ldi	r31, 0x08	; 8
		_delay_ms(2);
		EN = 0;
	}
}

void lcd_data_int(unsigned int vote)// Function to send 0-9 character values
     6bc:	28 96       	adiw	r28, 0x08	; 8
		vote_amt[j]=vote%10;
		vote=vote/10;
	}
	for (p=0;p<=3;p++)
	{
		dig_ctrl_var = vote_amt[p] + 48;    // Here the decimal data is converted to HEX because LCD only reads HEX.
     6be:	80 81       	ld	r24, Z
     6c0:	32 96       	adiw	r30, 0x02	; 2
     6c2:	80 5d       	subi	r24, 0xD0	; 208
		LCD = dig_ctrl_var;					// 48 is actually 0x30. So if wanting to display 1 on the LCD what needs to be sent is
     6c4:	82 b9       	out	0x02, r24	; 2
		RS = 1;								// 0x31. That is what is done here 1 + 0x30 = 0x31			    
     6c6:	5f 9a       	sbi	0x0b, 7	; 11
		EN = 1;				    
     6c8:	5e 9a       	sbi	0x0b, 6	; 11
     6ca:	8f ef       	ldi	r24, 0xFF	; 255
     6cc:	93 e2       	ldi	r25, 0x23	; 35
     6ce:	01 97       	sbiw	r24, 0x01	; 1
     6d0:	f1 f7       	brne	.-4      	; 0x6ce <lcd_data_int+0x3a>
     6d2:	00 c0       	rjmp	.+0      	; 0x6d4 <lcd_data_int+0x40>
     6d4:	00 00       	nop
		_delay_ms(2);
		EN = 0;					
     6d6:	5e 98       	cbi	0x0b, 6	; 11
	for (j=3;j>=0;j--)
	{
		vote_amt[j]=vote%10;
		vote=vote/10;
	}
	for (p=0;p<=3;p++)
     6d8:	ec 17       	cp	r30, r28
     6da:	fd 07       	cpc	r31, r29
     6dc:	81 f7       	brne	.-32     	; 0x6be <lcd_data_int+0x2a>
		RS = 1;								// 0x31. That is what is done here 1 + 0x30 = 0x31			    
		EN = 1;				    
		_delay_ms(2);
		EN = 0;					
	}
}
     6de:	df 91       	pop	r29
     6e0:	cf 91       	pop	r28
     6e2:	08 95       	ret

000006e4 <i2c_init>:
/******************************************************************************************************/
/*						Routine for I2C																  */
/******************************************************************************************************/
void i2c_init()
{
	TWBR = 5;				//Baud rate
     6e4:	85 e0       	ldi	r24, 0x05	; 5
     6e6:	80 93 b8 00 	sts	0x00B8, r24
	TWCR = (1 << TWEN);			// Enable I2c module
     6ea:	84 e0       	ldi	r24, 0x04	; 4
     6ec:	80 93 bc 00 	sts	0x00BC, r24
}
     6f0:	08 95       	ret

000006f2 <i2c_start>:

void i2c_start()						// Start I2C communication
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
     6f2:	ec eb       	ldi	r30, 0xBC	; 188
     6f4:	f0 e0       	ldi	r31, 0x00	; 0
     6f6:	84 ea       	ldi	r24, 0xA4	; 164
     6f8:	80 83       	st	Z, r24
	CLEARBIT(TWCR, 5);					// Clear TWSTA I2C start bit is to be cleared
     6fa:	80 81       	ld	r24, Z
     6fc:	8f 7d       	andi	r24, 0xDF	; 223
     6fe:	80 83       	st	Z, r24
	while(!(TWCR & (1 << TWINT)));		// Wait for TWINT flag to be set by hardware	
     700:	80 81       	ld	r24, Z
     702:	88 23       	and	r24, r24
     704:	ec f7       	brge	.-6      	; 0x700 <i2c_start+0xe>
}		
     706:	08 95       	ret

00000708 <i2c_send>:

void i2c_send(uint8_t i2c_data)	// Send one byte on the I2C line
{
	TWDR = i2c_data;					// Load the I2C register TWDR
     708:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1 << TWINT) | (1 << TWEN);	// Clear TWINT flag by writing 1 to it, thus initiating transmission of data
     70c:	84 e8       	ldi	r24, 0x84	; 132
     70e:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));		// Wait for TWINT flag to be set by hardware, end of transmission
     712:	ec eb       	ldi	r30, 0xBC	; 188
     714:	f0 e0       	ldi	r31, 0x00	; 0
     716:	80 81       	ld	r24, Z
     718:	88 23       	and	r24, r24
     71a:	ec f7       	brge	.-6      	; 0x716 <i2c_send+0xe>
}
     71c:	08 95       	ret

0000071e <i2cWriteWordArray>:
	_delay_ms(10);
}

/************* Added 26.04.2017 ****************************/
void i2cWriteWordArray(unsigned char device_id, uint16_t addr, uint16_t *val_data, uint8_t lenght)
{	
     71e:	cf 92       	push	r12
     720:	df 92       	push	r13
     722:	ef 92       	push	r14
     724:	ff 92       	push	r15
     726:	1f 93       	push	r17
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	c8 2f       	mov	r28, r24
     72e:	e6 2e       	mov	r14, r22
     730:	17 2f       	mov	r17, r23
     732:	6a 01       	movw	r12, r20
     734:	d2 2f       	mov	r29, r18
	do
	{
		i2c_start();
     736:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
		i2c_send(device_id);
     73a:	8c 2f       	mov	r24, r28
     73c:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
		if(slave_ack == 1)				// Stop I2C if no acknowledge
     740:	80 91 11 06 	lds	r24, 0x0611
     744:	88 23       	and	r24, r24
     746:	14 f4       	brge	.+4      	; 0x74c <i2cWriteWordArray+0x2e>
		i2c_stop();
     748:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
	}
	while(slave_ack == 1);				//loop until acknowledge is received
     74c:	80 91 11 06 	lds	r24, 0x0611
     750:	88 23       	and	r24, r24
     752:	8c f3       	brlt	.-30     	; 0x736 <i2cWriteWordArray+0x18>
	i2c_send(addr / 256);
     754:	81 2f       	mov	r24, r17
     756:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(addr % 256);
     75a:	8e 2d       	mov	r24, r14
     75c:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	for(uint8_t z = 0; z <= (lenght - 1); z++)
     760:	ed 2e       	mov	r14, r29
     762:	ff 24       	eor	r15, r15
     764:	08 94       	sec
     766:	e1 08       	sbc	r14, r1
     768:	f1 08       	sbc	r15, r1
     76a:	ff 20       	and	r15, r15
     76c:	cc f0       	brlt	.+50     	; 0x7a0 <i2cWriteWordArray+0x82>
     76e:	10 e0       	ldi	r17, 0x00	; 0
	{
		i2c_send(val_data[z] / 256);
     770:	c1 2f       	mov	r28, r17
     772:	d0 e0       	ldi	r29, 0x00	; 0
     774:	cc 0f       	add	r28, r28
     776:	dd 1f       	adc	r29, r29
     778:	cc 0d       	add	r28, r12
     77a:	dd 1d       	adc	r29, r13
     77c:	89 81       	ldd	r24, Y+1	; 0x01
     77e:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
		i2c_send(val_data[z] % 256);	
     782:	88 81       	ld	r24, Y
     784:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
     788:	8f ef       	ldi	r24, 0xFF	; 255
     78a:	93 eb       	ldi	r25, 0xB3	; 179
     78c:	01 97       	sbiw	r24, 0x01	; 1
     78e:	f1 f7       	brne	.-4      	; 0x78c <i2cWriteWordArray+0x6e>
     790:	00 c0       	rjmp	.+0      	; 0x792 <i2cWriteWordArray+0x74>
     792:	00 00       	nop
		i2c_stop();
	}
	while(slave_ack == 1);				//loop until acknowledge is received
	i2c_send(addr / 256);
	i2c_send(addr % 256);
	for(uint8_t z = 0; z <= (lenght - 1); z++)
     794:	1f 5f       	subi	r17, 0xFF	; 255
     796:	81 2f       	mov	r24, r17
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	e8 16       	cp	r14, r24
     79c:	f9 06       	cpc	r15, r25
     79e:	44 f7       	brge	.-48     	; 0x770 <i2cWriteWordArray+0x52>
	{
		i2c_send(val_data[z] / 256);
		i2c_send(val_data[z] % 256);	
		_delay_ms(10);
	}
	i2c_stop();
     7a0:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
     7a4:	8f ef       	ldi	r24, 0xFF	; 255
     7a6:	93 eb       	ldi	r25, 0xB3	; 179
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	f1 f7       	brne	.-4      	; 0x7a8 <i2cWriteWordArray+0x8a>
     7ac:	00 c0       	rjmp	.+0      	; 0x7ae <i2cWriteWordArray+0x90>
     7ae:	00 00       	nop
	_delay_ms(10);
}
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	1f 91       	pop	r17
     7b6:	ff 90       	pop	r15
     7b8:	ef 90       	pop	r14
     7ba:	df 90       	pop	r13
     7bc:	cf 90       	pop	r12
     7be:	08 95       	ret

000007c0 <i2c_receive>:
	while(!(TWCR & (1<<TWINT)));		// Wait for TWINT flag to be set by hardware, end of transmission
}

void i2c_receive(uint8_t ack_value)		// Receive a byte from  a slave device
{
	if(ack_value == 1)					// To send ACK
     7c0:	81 30       	cpi	r24, 0x01	; 1
     7c2:	21 f4       	brne	.+8      	; 0x7cc <i2c_receive+0xc>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);		// enable acknowledge transmission
     7c4:	84 ec       	ldi	r24, 0xC4	; 196
     7c6:	80 93 bc 00 	sts	0x00BC, r24
     7ca:	05 c0       	rjmp	.+10     	; 0x7d6 <i2c_receive+0x16>
	if(ack_value == 0)					// To send a NACK
     7cc:	88 23       	and	r24, r24
     7ce:	19 f4       	brne	.+6      	; 0x7d6 <i2c_receive+0x16>
	TWCR = (1 << TWINT) | (1 << TWEN);
     7d0:	84 e8       	ldi	r24, 0x84	; 132
     7d2:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1 << TWINT)));							// Wait for all 8bits to enter TWDR and TWINT to be set
     7d6:	ec eb       	ldi	r30, 0xBC	; 188
     7d8:	f0 e0       	ldi	r31, 0x00	; 0
     7da:	80 81       	ld	r24, Z
     7dc:	88 23       	and	r24, r24
     7de:	ec f7       	brge	.-6      	; 0x7da <i2c_receive+0x1a>
	i2c_data = TWDR;	
     7e0:	80 91 bb 00 	lds	r24, 0x00BB
     7e4:	80 93 f9 05 	sts	0x05F9, r24
}
     7e8:	08 95       	ret

000007ea <i2c_read_byte>:
{
	TWCR |= (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);		// Send the stop condition.
}

char i2c_read_byte(uint8_t device_id, uint16_t addr)
{
     7ea:	1f 93       	push	r17
     7ec:	cf 93       	push	r28
     7ee:	df 93       	push	r29
     7f0:	c8 2f       	mov	r28, r24
     7f2:	d6 2f       	mov	r29, r22
     7f4:	17 2f       	mov	r17, r23
	i2c_start();
     7f6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
	i2c_send(device_id);
     7fa:	8c 2f       	mov	r24, r28
     7fc:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(addr / 256);
     800:	81 2f       	mov	r24, r17
     802:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(addr % 256);
     806:	8d 2f       	mov	r24, r29
     808:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_stop();
     80c:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
     810:	8f ef       	ldi	r24, 0xFF	; 255
     812:	91 e1       	ldi	r25, 0x11	; 17
     814:	01 97       	sbiw	r24, 0x01	; 1
     816:	f1 f7       	brne	.-4      	; 0x814 <i2c_read_byte+0x2a>
     818:	00 c0       	rjmp	.+0      	; 0x81a <i2c_read_byte+0x30>
     81a:	00 00       	nop
	_delay_ms(1);
	i2c_start();
     81c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
	i2c_send(device_id + 1);
     820:	8c 2f       	mov	r24, r28
     822:	8f 5f       	subi	r24, 0xFF	; 255
     824:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_receive(0);
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <i2c_receive>
	i2c_stop();
     82e:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
	
	return i2c_data;
     832:	80 91 f9 05 	lds	r24, 0x05F9
	_delay_ms(10);
}
     836:	df 91       	pop	r29
     838:	cf 91       	pop	r28
     83a:	1f 91       	pop	r17
     83c:	08 95       	ret

0000083e <i2c_read_2_bytes>:

void i2c_read_2_bytes(uint16_t eeprom_addr)
{
     83e:	cf 93       	push	r28
     840:	df 93       	push	r29
     842:	c8 2f       	mov	r28, r24
     844:	d9 2f       	mov	r29, r25
	i2c_start();
     846:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
	i2c_send(0xA0);
     84a:	80 ea       	ldi	r24, 0xA0	; 160
     84c:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(eeprom_addr / 256);	// Sending the 16 bit address in two 8 bits
     850:	8d 2f       	mov	r24, r29
     852:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(eeprom_addr % 256);
     856:	8c 2f       	mov	r24, r28
     858:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_stop();
     85c:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
     860:	8f ef       	ldi	r24, 0xFF	; 255
     862:	91 e1       	ldi	r25, 0x11	; 17
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <i2c_read_2_bytes+0x26>
     868:	00 c0       	rjmp	.+0      	; 0x86a <i2c_read_2_bytes+0x2c>
     86a:	00 00       	nop
	_delay_ms(1);
	i2c_start();
     86c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
	i2c_send(0xA1);
     870:	81 ea       	ldi	r24, 0xA1	; 161
     872:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_receive(1);
     876:	81 e0       	ldi	r24, 0x01	; 1
     878:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <i2c_receive>
	i2c_data_16 = (i2c_data * 256);		// Shifting the 8bits by 8 posistions to form a 16bit value below
     87c:	20 91 f9 05 	lds	r18, 0x05F9
     880:	92 2f       	mov	r25, r18
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	90 93 62 05 	sts	0x0562, r25
     888:	80 93 61 05 	sts	0x0561, r24
	i2c_receive(0);
     88c:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <i2c_receive>
	i2c_data_16 = i2c_data_16 + i2c_data;
     890:	20 91 f9 05 	lds	r18, 0x05F9
     894:	80 91 61 05 	lds	r24, 0x0561
     898:	90 91 62 05 	lds	r25, 0x0562
     89c:	82 0f       	add	r24, r18
     89e:	91 1d       	adc	r25, r1
     8a0:	90 93 62 05 	sts	0x0562, r25
     8a4:	80 93 61 05 	sts	0x0561, r24
	i2c_stop();
     8a8:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
}
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	08 95       	ret

000008b2 <i2c_write_2_bytes>:

void i2c_write_2_bytes(unsigned char device_id, uint16_t addr, uint16_t val_data)
{	
     8b2:	ff 92       	push	r15
     8b4:	0f 93       	push	r16
     8b6:	1f 93       	push	r17
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	c8 2f       	mov	r28, r24
     8be:	06 2f       	mov	r16, r22
     8c0:	f7 2e       	mov	r15, r23
     8c2:	d4 2f       	mov	r29, r20
     8c4:	15 2f       	mov	r17, r21
	do
	{
		i2c_start();
     8c6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
		i2c_send(device_id);
     8ca:	8c 2f       	mov	r24, r28
     8cc:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
		if(slave_ack == 1)				// Stop I2C if no acknowledge
     8d0:	80 91 11 06 	lds	r24, 0x0611
     8d4:	88 23       	and	r24, r24
     8d6:	14 f4       	brge	.+4      	; 0x8dc <i2c_write_2_bytes+0x2a>
		i2c_stop();
     8d8:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
	}
	while(slave_ack == 1);				//loop until acknowledge is received
     8dc:	80 91 11 06 	lds	r24, 0x0611
     8e0:	88 23       	and	r24, r24
     8e2:	8c f3       	brlt	.-30     	; 0x8c6 <i2c_write_2_bytes+0x14>
	i2c_send(addr / 256);
     8e4:	8f 2d       	mov	r24, r15
     8e6:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(addr % 256);
     8ea:	80 2f       	mov	r24, r16
     8ec:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(val_data / 256);
     8f0:	81 2f       	mov	r24, r17
     8f2:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(val_data % 256);
     8f6:	8d 2f       	mov	r24, r29
     8f8:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_stop();
     8fc:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
     900:	8f ef       	ldi	r24, 0xFF	; 255
     902:	93 eb       	ldi	r25, 0xB3	; 179
     904:	01 97       	sbiw	r24, 0x01	; 1
     906:	f1 f7       	brne	.-4      	; 0x904 <i2c_write_2_bytes+0x52>
     908:	00 c0       	rjmp	.+0      	; 0x90a <i2c_write_2_bytes+0x58>
     90a:	00 00       	nop
	_delay_ms(10);
}
     90c:	df 91       	pop	r29
     90e:	cf 91       	pop	r28
     910:	1f 91       	pop	r17
     912:	0f 91       	pop	r16
     914:	ff 90       	pop	r15
     916:	08 95       	ret

00000918 <i2cReadWordArray>:
	i2c_stop();
	_delay_ms(10);
}

void i2cReadWordArray(unsigned char device_id, uint16_t addr, uint16_t *val_data, uint8_t lenght)
{
     918:	af 92       	push	r10
     91a:	bf 92       	push	r11
     91c:	cf 92       	push	r12
     91e:	df 92       	push	r13
     920:	ef 92       	push	r14
     922:	ff 92       	push	r15
     924:	0f 93       	push	r16
     926:	1f 93       	push	r17
     928:	cf 93       	push	r28
     92a:	df 93       	push	r29
     92c:	6b 01       	movw	r12, r22
     92e:	5a 01       	movw	r10, r20
	uint8_t tempWordHolderH, tempWordHolderL, z;
	uint16_t addressHolder = addr;
     930:	8a 01       	movw	r16, r20
	}
	i2c_stop();
	_delay_ms(10);
}

void i2cReadWordArray(unsigned char device_id, uint16_t addr, uint16_t *val_data, uint8_t lenght)
     932:	eb 01       	movw	r28, r22
     934:	c0 5c       	subi	r28, 0xC0	; 192
     936:	df 4f       	sbci	r29, 0xFF	; 255
{
	uint8_t tempWordHolderH, tempWordHolderL, z;
	uint16_t addressHolder = addr;
     938:	7b 01       	movw	r14, r22
	for(z = 0; z <= 31; z++)
	{
		i2c_read_2_bytes(addressHolder);
     93a:	c7 01       	movw	r24, r14
     93c:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
		val_data[z] = i2c_data_16;
     940:	80 91 61 05 	lds	r24, 0x0561
     944:	90 91 62 05 	lds	r25, 0x0562
     948:	d8 01       	movw	r26, r16
     94a:	8d 93       	st	X+, r24
     94c:	9d 93       	st	X+, r25
     94e:	8d 01       	movw	r16, r26
		addressHolder++;
		addressHolder++;
     950:	e2 e0       	ldi	r30, 0x02	; 2
     952:	f0 e0       	ldi	r31, 0x00	; 0
     954:	ee 0e       	add	r14, r30
     956:	ff 1e       	adc	r15, r31
     958:	8f ef       	ldi	r24, 0xFF	; 255
     95a:	93 eb       	ldi	r25, 0xB3	; 179
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	f1 f7       	brne	.-4      	; 0x95c <i2cReadWordArray+0x44>
     960:	00 c0       	rjmp	.+0      	; 0x962 <i2cReadWordArray+0x4a>
     962:	00 00       	nop

void i2cReadWordArray(unsigned char device_id, uint16_t addr, uint16_t *val_data, uint8_t lenght)
{
	uint8_t tempWordHolderH, tempWordHolderL, z;
	uint16_t addressHolder = addr;
	for(z = 0; z <= 31; z++)
     964:	ec 16       	cp	r14, r28
     966:	fd 06       	cpc	r15, r29
     968:	41 f7       	brne	.-48     	; 0x93a <i2cReadWordArray+0x22>
     96a:	8f ef       	ldi	r24, 0xFF	; 255
     96c:	9f e1       	ldi	r25, 0x1F	; 31
     96e:	ac e1       	ldi	r26, 0x1C	; 28
     970:	81 50       	subi	r24, 0x01	; 1
     972:	90 40       	sbci	r25, 0x00	; 0
     974:	a0 40       	sbci	r26, 0x00	; 0
     976:	e1 f7       	brne	.-8      	; 0x970 <i2cReadWordArray+0x58>
     978:	00 c0       	rjmp	.+0      	; 0x97a <i2cReadWordArray+0x62>
     97a:	00 00       	nop
	}
	i2c_stop();
	_delay_ms(10);
}

void i2cReadWordArray(unsigned char device_id, uint16_t addr, uint16_t *val_data, uint8_t lenght)
     97c:	e5 01       	movw	r28, r10
     97e:	c0 5c       	subi	r28, 0xC0	; 192
     980:	df 4f       	sbci	r29, 0xFF	; 255
     982:	86 01       	movw	r16, r12
     984:	0e 57       	subi	r16, 0x7E	; 126
     986:	1f 4f       	sbci	r17, 0xFF	; 255
		_delay_ms(10);
	}
	_delay_ms(500);
	for(z = 32; z <= 64; z++)
	{
		i2c_read_2_bytes(addressHolder);
     988:	c7 01       	movw	r24, r14
     98a:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
		val_data[z] = i2c_data_16;
     98e:	80 91 61 05 	lds	r24, 0x0561
     992:	90 91 62 05 	lds	r25, 0x0562
     996:	89 93       	st	Y+, r24
     998:	99 93       	st	Y+, r25
		addressHolder++;
		addressHolder++;
     99a:	a2 e0       	ldi	r26, 0x02	; 2
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	ea 0e       	add	r14, r26
     9a0:	fb 1e       	adc	r15, r27
     9a2:	ef ef       	ldi	r30, 0xFF	; 255
     9a4:	f3 eb       	ldi	r31, 0xB3	; 179
     9a6:	31 97       	sbiw	r30, 0x01	; 1
     9a8:	f1 f7       	brne	.-4      	; 0x9a6 <i2cReadWordArray+0x8e>
     9aa:	00 c0       	rjmp	.+0      	; 0x9ac <i2cReadWordArray+0x94>
     9ac:	00 00       	nop
		addressHolder++;
		addressHolder++;
		_delay_ms(10);
	}
	_delay_ms(500);
	for(z = 32; z <= 64; z++)
     9ae:	e0 16       	cp	r14, r16
     9b0:	f1 06       	cpc	r15, r17
     9b2:	51 f7       	brne	.-44     	; 0x988 <i2cReadWordArray+0x70>
	// tempWordHolderH = i2c_read_ack();
	// tempWordHolderL = i2c_read_nack();

	// val_data[lenght] = (tempWordHolderH << 8) + tempWordHolderL;
	//i2c_stop();
}
     9b4:	df 91       	pop	r29
     9b6:	cf 91       	pop	r28
     9b8:	1f 91       	pop	r17
     9ba:	0f 91       	pop	r16
     9bc:	ff 90       	pop	r15
     9be:	ef 90       	pop	r14
     9c0:	df 90       	pop	r13
     9c2:	cf 90       	pop	r12
     9c4:	bf 90       	pop	r11
     9c6:	af 90       	pop	r10
     9c8:	08 95       	ret

000009ca <eeprom_write_i2c>:

/*********************** Added 26.04.2017 	*****************************************************/

void eeprom_write_i2c(unsigned char device_id, uint16_t addr, uint8_t val_data)
{	
     9ca:	ef 92       	push	r14
     9cc:	ff 92       	push	r15
     9ce:	0f 93       	push	r16
     9d0:	1f 93       	push	r17
     9d2:	cf 93       	push	r28
     9d4:	df 93       	push	r29
     9d6:	18 2f       	mov	r17, r24
     9d8:	f6 2e       	mov	r15, r22
     9da:	07 2f       	mov	r16, r23
     9dc:	e4 2e       	mov	r14, r20
	do
	{
		i2c_start();
		i2c_send(device_id);
		if((TWSR & 0xF8) == 0x20)		// Masking out the prescalar bits from the status register. Stop I2C if no acknowledge. Reading the status register
     9de:	c9 eb       	ldi	r28, 0xB9	; 185
     9e0:	d0 e0       	ldi	r29, 0x00	; 0

void eeprom_write_i2c(unsigned char device_id, uint16_t addr, uint8_t val_data)
{	
	do
	{
		i2c_start();
     9e2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
		i2c_send(device_id);
     9e6:	81 2f       	mov	r24, r17
     9e8:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
		if((TWSR & 0xF8) == 0x20)		// Masking out the prescalar bits from the status register. Stop I2C if no acknowledge. Reading the status register
     9ec:	88 81       	ld	r24, Y
     9ee:	88 7f       	andi	r24, 0xF8	; 248
     9f0:	80 32       	cpi	r24, 0x20	; 32
     9f2:	11 f4       	brne	.+4      	; 0x9f8 <eeprom_write_i2c+0x2e>
		i2c_stop();
     9f4:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
	}
	while((TWSR & 0xF8) == 0x20);				//loop until acknowledge is received
     9f8:	88 81       	ld	r24, Y
     9fa:	88 7f       	andi	r24, 0xF8	; 248
     9fc:	80 32       	cpi	r24, 0x20	; 32
     9fe:	89 f3       	breq	.-30     	; 0x9e2 <eeprom_write_i2c+0x18>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a00:	86 ee       	ldi	r24, 0xE6	; 230
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	01 97       	sbiw	r24, 0x01	; 1
     a06:	f1 f7       	brne	.-4      	; 0xa04 <eeprom_write_i2c+0x3a>
     a08:	00 00       	nop
	_delay_us(50);
	
	i2c_send(addr / 256);			
     a0a:	80 2f       	mov	r24, r16
     a0c:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(addr % 256);			
     a10:	8f 2d       	mov	r24, r15
     a12:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(val_data);            		
     a16:	8e 2d       	mov	r24, r14
     a18:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_stop();	
     a1c:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a20:	8f ef       	ldi	r24, 0xFF	; 255
     a22:	93 eb       	ldi	r25, 0xB3	; 179
     a24:	01 97       	sbiw	r24, 0x01	; 1
     a26:	f1 f7       	brne	.-4      	; 0xa24 <eeprom_write_i2c+0x5a>
     a28:	00 c0       	rjmp	.+0      	; 0xa2a <eeprom_write_i2c+0x60>
     a2a:	00 00       	nop
	_delay_ms(10);
}
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	1f 91       	pop	r17
     a32:	0f 91       	pop	r16
     a34:	ff 90       	pop	r15
     a36:	ef 90       	pop	r14
     a38:	08 95       	ret

00000a3a <i2c_send_byte>:
		LED = 0;				// LED ON (ACTIVE LOW)
	}	
}

void i2c_send_byte(unsigned char device_id, unsigned char data)
{
     a3a:	0f 93       	push	r16
     a3c:	1f 93       	push	r17
     a3e:	cf 93       	push	r28
     a40:	df 93       	push	r29
     a42:	18 2f       	mov	r17, r24
     a44:	06 2f       	mov	r16, r22
	do
	{
		i2c_start();
		i2c_send(device_id);
		if((TWSR & 0xF8) == 0x20)		// Masking out the prescalar bits from the status register. Stop I2C if no acknowledge. Reading the status register
     a46:	c9 eb       	ldi	r28, 0xB9	; 185
     a48:	d0 e0       	ldi	r29, 0x00	; 0

void i2c_send_byte(unsigned char device_id, unsigned char data)
{
	do
	{
		i2c_start();
     a4a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
		i2c_send(device_id);
     a4e:	81 2f       	mov	r24, r17
     a50:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
		if((TWSR & 0xF8) == 0x20)		// Masking out the prescalar bits from the status register. Stop I2C if no acknowledge. Reading the status register
     a54:	88 81       	ld	r24, Y
     a56:	88 7f       	andi	r24, 0xF8	; 248
     a58:	80 32       	cpi	r24, 0x20	; 32
     a5a:	11 f4       	brne	.+4      	; 0xa60 <i2c_send_byte+0x26>
		i2c_stop();
     a5c:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
	}
	while((TWSR & 0xF8) == 0x20);				//loop until acknowledge is received
     a60:	88 81       	ld	r24, Y
     a62:	88 7f       	andi	r24, 0xF8	; 248
     a64:	80 32       	cpi	r24, 0x20	; 32
     a66:	89 f3       	breq	.-30     	; 0xa4a <i2c_send_byte+0x10>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a68:	86 ee       	ldi	r24, 0xE6	; 230
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	01 97       	sbiw	r24, 0x01	; 1
     a6e:	f1 f7       	brne	.-4      	; 0xa6c <i2c_send_byte+0x32>
     a70:	00 00       	nop
	_delay_us(50);
	i2c_send(data);
     a72:	80 2f       	mov	r24, r16
     a74:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_stop();
     a78:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
}
     a7c:	df 91       	pop	r29
     a7e:	cf 91       	pop	r28
     a80:	1f 91       	pop	r17
     a82:	0f 91       	pop	r16
     a84:	08 95       	ret

00000a86 <deactivate_category_buttons_and_save>:
	i2c_stop();	
	_delay_ms(10);
}

void deactivate_category_buttons_and_save(uint16_t addr, char button_no)
{
     a86:	1f 93       	push	r17
     a88:	cf 93       	push	r28
     a8a:	df 93       	push	r29
     a8c:	c8 2f       	mov	r28, r24
     a8e:	d9 2f       	mov	r29, r25
     a90:	16 2f       	mov	r17, r22
if(cod_typ == 'B')
     a92:	80 91 10 06 	lds	r24, 0x0610
     a96:	82 34       	cpi	r24, 0x42	; 66
     a98:	09 f0       	breq	.+2      	; 0xa9c <deactivate_category_buttons_and_save+0x16>
     a9a:	5c c0       	rjmp	.+184    	; 0xb54 <deactivate_category_buttons_and_save+0xce>
{
	lcd_cmd(0x01);
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
	lcd_data_str("Saving Vote");		
     aa2:	8b e3       	ldi	r24, 0x3B	; 59
     aa4:	92 e0       	ldi	r25, 0x02	; 2
     aa6:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
	/*		When storing a vote count o EEPROM, first the initial value stored in the location of EEPROM is read
			that value is incremented by one and rewritten to that same location								*/
	i2c_read_2_bytes(addr);	
     aaa:	8c 2f       	mov	r24, r28
     aac:	9d 2f       	mov	r25, r29
     aae:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ab2:	8f ef       	ldi	r24, 0xFF	; 255
     ab4:	9f e9       	ldi	r25, 0x9F	; 159
     ab6:	a5 e0       	ldi	r26, 0x05	; 5
     ab8:	81 50       	subi	r24, 0x01	; 1
     aba:	90 40       	sbci	r25, 0x00	; 0
     abc:	a0 40       	sbci	r26, 0x00	; 0
     abe:	e1 f7       	brne	.-8      	; 0xab8 <deactivate_category_buttons_and_save+0x32>
     ac0:	00 c0       	rjmp	.+0      	; 0xac2 <deactivate_category_buttons_and_save+0x3c>
     ac2:	00 00       	nop
	_delay_ms(100);
	
	/***********************	17.09.2015	**************************************/
	if (mach_typ == 'D')	// Char for Donor, can be set as anything else
     ac4:	80 91 ec 05 	lds	r24, 0x05EC
     ac8:	84 34       	cpi	r24, 0x44	; 68
     aca:	51 f4       	brne	.+20     	; 0xae0 <deactivate_category_buttons_and_save+0x5a>
	{						// Requirement of Parsi panchayat
		i2c_data_16 = i2c_data_16 + 2;						// Increment the value by 2 
     acc:	80 91 61 05 	lds	r24, 0x0561
     ad0:	90 91 62 05 	lds	r25, 0x0562
     ad4:	02 96       	adiw	r24, 0x02	; 2
     ad6:	90 93 62 05 	sts	0x0562, r25
     ada:	80 93 61 05 	sts	0x0561, r24
     ade:	09 c0       	rjmp	.+18     	; 0xaf2 <deactivate_category_buttons_and_save+0x6c>
	}
										
	else	i2c_data_16 = i2c_data_16 + 1;						// Increment the value by 1
     ae0:	80 91 61 05 	lds	r24, 0x0561
     ae4:	90 91 62 05 	lds	r25, 0x0562
     ae8:	01 96       	adiw	r24, 0x01	; 1
     aea:	90 93 62 05 	sts	0x0562, r25
     aee:	80 93 61 05 	sts	0x0561, r24

	/**********************	 17.09.2015	 *******************************************/

		i2c_write_2_bytes(EEPROM_DEV_ADDR, addr, i2c_data_16);		// Save the Incremented value back to the same location
     af2:	40 91 61 05 	lds	r20, 0x0561
     af6:	50 91 62 05 	lds	r21, 0x0562
     afa:	80 ea       	ldi	r24, 0xA0	; 160
     afc:	6c 2f       	mov	r22, r28
     afe:	7d 2f       	mov	r23, r29
     b00:	0e 94 59 04 	call	0x8b2	; 0x8b2 <i2c_write_2_bytes>
	
		votes_counter = votes_counter - 1;					// Decrement the total votes a voter can cast
     b04:	80 91 ff 05 	lds	r24, 0x05FF
     b08:	81 50       	subi	r24, 0x01	; 1
     b0a:	80 93 ff 05 	sts	0x05FF, r24
			if(!vote_cast)		// increment the voter_count when first vote is cast by a voter
     b0e:	80 91 07 06 	lds	r24, 0x0607
     b12:	88 23       	and	r24, r24
     b14:	49 f4       	brne	.+18     	; 0xb28 <deactivate_category_buttons_and_save+0xa2>
			voter_count++;
     b16:	80 91 5c 08 	lds	r24, 0x085C
     b1a:	90 91 5d 08 	lds	r25, 0x085D
     b1e:	01 96       	adiw	r24, 0x01	; 1
     b20:	90 93 5d 08 	sts	0x085D, r25
     b24:	80 93 5c 08 	sts	0x085C, r24
			vote_cast = 1;
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	80 93 07 06 	sts	0x0607, r24
			voting_on = 1;
     b2e:	80 91 11 06 	lds	r24, 0x0611
     b32:	80 62       	ori	r24, 0x20	; 32
     b34:	80 93 11 06 	sts	0x0611, r24
		i2c_send_byte(PIC_DEV_ADDR, button_no);		// Indicate to PIC LED controller to light up the respective buttons LED
     b38:	80 e8       	ldi	r24, 0x80	; 128
     b3a:	61 2f       	mov	r22, r17
     b3c:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
		Buzzer = 1;				// Buzzer ON
     b40:	a1 9a       	sbi	0x14, 1	; 20
		LED = 0;				// LED ON (ACTIVE LOW)*/
     b42:	a0 98       	cbi	0x14, 0	; 20

/**********************************************	 Added 24.04.2017 	Printing on Paper ********************************/
		printName(button_no, voter_count);
     b44:	60 91 5c 08 	lds	r22, 0x085C
     b48:	70 91 5d 08 	lds	r23, 0x085D
     b4c:	81 2f       	mov	r24, r17
     b4e:	0e 94 36 02 	call	0x46c	; 0x46c <printName>
     b52:	29 c0       	rjmp	.+82     	; 0xba6 <deactivate_category_buttons_and_save+0x120>
}

else                   // below code Compulsory all votes alloted to voter have to be cast for the votes to be saved
	{
	unsigned int i;
		if(!vote_cast)
     b54:	80 91 07 06 	lds	r24, 0x0607
     b58:	88 23       	and	r24, r24
     b5a:	19 f4       	brne	.+6      	; 0xb62 <deactivate_category_buttons_and_save+0xdc>
		vote_cast = 1;
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	80 93 07 06 	sts	0x0607, r24
		voting_on = 1;
     b62:	80 91 11 06 	lds	r24, 0x0611
     b66:	80 62       	ori	r24, 0x20	; 32
     b68:	80 93 11 06 	sts	0x0611, r24
		voted_button_array[elem_count] = addr;
     b6c:	80 91 52 08 	lds	r24, 0x0852
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	88 0f       	add	r24, r24
     b74:	99 1f       	adc	r25, r25
     b76:	fc 01       	movw	r30, r24
     b78:	e4 59       	subi	r30, 0x94	; 148
     b7a:	fa 4f       	sbci	r31, 0xFA	; 250
     b7c:	c0 83       	st	Z, r28
     b7e:	d1 83       	std	Z+1, r29	; 0x01
		eeprom_write_byte(elem_count*2,voted_button_array[elem_count]);// saving button addresses in internal eeprom 
     b80:	6c 2f       	mov	r22, r28
     b82:	0e 94 dc 38 	call	0x71b8	; 0x71b8 <__eewr_byte_m2560>
		elem_count++;
     b86:	80 91 52 08 	lds	r24, 0x0852
     b8a:	8f 5f       	subi	r24, 0xFF	; 255
     b8c:	80 93 52 08 	sts	0x0852, r24
		votes_counter = votes_counter - 1;					// Decrement the total votes a voter can cast
     b90:	80 91 ff 05 	lds	r24, 0x05FF
     b94:	81 50       	subi	r24, 0x01	; 1
     b96:	80 93 ff 05 	sts	0x05FF, r24
		i2c_send_byte(PIC_DEV_ADDR, button_no);		// Indicate to PIC LED controller to light up the respective buttons LED
     b9a:	80 e8       	ldi	r24, 0x80	; 128
     b9c:	61 2f       	mov	r22, r17
     b9e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
		Buzzer = 1;				// Buzzer ON
     ba2:	a1 9a       	sbi	0x14, 1	; 20
		LED = 0;				// LED ON (ACTIVE LOW)
     ba4:	a0 98       	cbi	0x14, 0	; 20
	}	
}
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	1f 91       	pop	r17
     bac:	08 95       	ret

00000bae <light_leds>:
}

void light_leds()

{										// 8.10.15 Needs to be implemented better.
	if(vote_indicator_1)
     bae:	80 91 63 05 	lds	r24, 0x0563
     bb2:	80 ff       	sbrs	r24, 0
     bb4:	04 c0       	rjmp	.+8      	; 0xbbe <light_leds+0x10>
	i2c_send_byte(PIC_DEV_ADDR, 1);
     bb6:	80 e8       	ldi	r24, 0x80	; 128
     bb8:	61 e0       	ldi	r22, 0x01	; 1
     bba:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bbe:	8c ec       	ldi	r24, 0xCC	; 204
     bc0:	91 e0       	ldi	r25, 0x01	; 1
     bc2:	01 97       	sbiw	r24, 0x01	; 1
     bc4:	f1 f7       	brne	.-4      	; 0xbc2 <light_leds+0x14>
     bc6:	00 c0       	rjmp	.+0      	; 0xbc8 <light_leds+0x1a>
     bc8:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_2)
     bca:	80 91 63 05 	lds	r24, 0x0563
     bce:	81 ff       	sbrs	r24, 1
     bd0:	04 c0       	rjmp	.+8      	; 0xbda <light_leds+0x2c>
	i2c_send_byte(PIC_DEV_ADDR, 2);
     bd2:	80 e8       	ldi	r24, 0x80	; 128
     bd4:	62 e0       	ldi	r22, 0x02	; 2
     bd6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     bda:	8c ec       	ldi	r24, 0xCC	; 204
     bdc:	91 e0       	ldi	r25, 0x01	; 1
     bde:	01 97       	sbiw	r24, 0x01	; 1
     be0:	f1 f7       	brne	.-4      	; 0xbde <light_leds+0x30>
     be2:	00 c0       	rjmp	.+0      	; 0xbe4 <light_leds+0x36>
     be4:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_3)
     be6:	80 91 63 05 	lds	r24, 0x0563
     bea:	82 ff       	sbrs	r24, 2
     bec:	04 c0       	rjmp	.+8      	; 0xbf6 <light_leds+0x48>
	i2c_send_byte(PIC_DEV_ADDR, 3);
     bee:	80 e8       	ldi	r24, 0x80	; 128
     bf0:	63 e0       	ldi	r22, 0x03	; 3
     bf2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     bf6:	8c ec       	ldi	r24, 0xCC	; 204
     bf8:	91 e0       	ldi	r25, 0x01	; 1
     bfa:	01 97       	sbiw	r24, 0x01	; 1
     bfc:	f1 f7       	brne	.-4      	; 0xbfa <light_leds+0x4c>
     bfe:	00 c0       	rjmp	.+0      	; 0xc00 <light_leds+0x52>
     c00:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_4)
     c02:	80 91 63 05 	lds	r24, 0x0563
     c06:	83 ff       	sbrs	r24, 3
     c08:	04 c0       	rjmp	.+8      	; 0xc12 <light_leds+0x64>
	i2c_send_byte(PIC_DEV_ADDR, 4);
     c0a:	80 e8       	ldi	r24, 0x80	; 128
     c0c:	64 e0       	ldi	r22, 0x04	; 4
     c0e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     c12:	8c ec       	ldi	r24, 0xCC	; 204
     c14:	91 e0       	ldi	r25, 0x01	; 1
     c16:	01 97       	sbiw	r24, 0x01	; 1
     c18:	f1 f7       	brne	.-4      	; 0xc16 <light_leds+0x68>
     c1a:	00 c0       	rjmp	.+0      	; 0xc1c <light_leds+0x6e>
     c1c:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_5)
     c1e:	80 91 63 05 	lds	r24, 0x0563
     c22:	84 ff       	sbrs	r24, 4
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <light_leds+0x80>
	i2c_send_byte(PIC_DEV_ADDR, 5);
     c26:	80 e8       	ldi	r24, 0x80	; 128
     c28:	65 e0       	ldi	r22, 0x05	; 5
     c2a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     c2e:	8c ec       	ldi	r24, 0xCC	; 204
     c30:	91 e0       	ldi	r25, 0x01	; 1
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	f1 f7       	brne	.-4      	; 0xc32 <light_leds+0x84>
     c36:	00 c0       	rjmp	.+0      	; 0xc38 <light_leds+0x8a>
     c38:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_6)
     c3a:	80 91 63 05 	lds	r24, 0x0563
     c3e:	85 ff       	sbrs	r24, 5
     c40:	04 c0       	rjmp	.+8      	; 0xc4a <light_leds+0x9c>
	i2c_send_byte(PIC_DEV_ADDR, 6);
     c42:	80 e8       	ldi	r24, 0x80	; 128
     c44:	66 e0       	ldi	r22, 0x06	; 6
     c46:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     c4a:	8c ec       	ldi	r24, 0xCC	; 204
     c4c:	91 e0       	ldi	r25, 0x01	; 1
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	f1 f7       	brne	.-4      	; 0xc4e <light_leds+0xa0>
     c52:	00 c0       	rjmp	.+0      	; 0xc54 <light_leds+0xa6>
     c54:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_7)
     c56:	80 91 63 05 	lds	r24, 0x0563
     c5a:	86 ff       	sbrs	r24, 6
     c5c:	04 c0       	rjmp	.+8      	; 0xc66 <light_leds+0xb8>
	i2c_send_byte(PIC_DEV_ADDR, 7);
     c5e:	80 e8       	ldi	r24, 0x80	; 128
     c60:	67 e0       	ldi	r22, 0x07	; 7
     c62:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     c66:	8c ec       	ldi	r24, 0xCC	; 204
     c68:	91 e0       	ldi	r25, 0x01	; 1
     c6a:	01 97       	sbiw	r24, 0x01	; 1
     c6c:	f1 f7       	brne	.-4      	; 0xc6a <light_leds+0xbc>
     c6e:	00 c0       	rjmp	.+0      	; 0xc70 <light_leds+0xc2>
     c70:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_8)
     c72:	80 91 63 05 	lds	r24, 0x0563
     c76:	88 23       	and	r24, r24
     c78:	24 f4       	brge	.+8      	; 0xc82 <light_leds+0xd4>
	i2c_send_byte(PIC_DEV_ADDR, 8);
     c7a:	80 e8       	ldi	r24, 0x80	; 128
     c7c:	68 e0       	ldi	r22, 0x08	; 8
     c7e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     c82:	8c ec       	ldi	r24, 0xCC	; 204
     c84:	91 e0       	ldi	r25, 0x01	; 1
     c86:	01 97       	sbiw	r24, 0x01	; 1
     c88:	f1 f7       	brne	.-4      	; 0xc86 <light_leds+0xd8>
     c8a:	00 c0       	rjmp	.+0      	; 0xc8c <light_leds+0xde>
     c8c:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_9)
     c8e:	80 91 47 06 	lds	r24, 0x0647
     c92:	80 ff       	sbrs	r24, 0
     c94:	04 c0       	rjmp	.+8      	; 0xc9e <light_leds+0xf0>
	i2c_send_byte(PIC_DEV_ADDR, 9);
     c96:	80 e8       	ldi	r24, 0x80	; 128
     c98:	69 e0       	ldi	r22, 0x09	; 9
     c9a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     c9e:	8c ec       	ldi	r24, 0xCC	; 204
     ca0:	91 e0       	ldi	r25, 0x01	; 1
     ca2:	01 97       	sbiw	r24, 0x01	; 1
     ca4:	f1 f7       	brne	.-4      	; 0xca2 <light_leds+0xf4>
     ca6:	00 c0       	rjmp	.+0      	; 0xca8 <light_leds+0xfa>
     ca8:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_10)
     caa:	80 91 47 06 	lds	r24, 0x0647
     cae:	81 ff       	sbrs	r24, 1
     cb0:	04 c0       	rjmp	.+8      	; 0xcba <light_leds+0x10c>
	i2c_send_byte(PIC_DEV_ADDR, 10);
     cb2:	80 e8       	ldi	r24, 0x80	; 128
     cb4:	6a e0       	ldi	r22, 0x0A	; 10
     cb6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     cba:	8c ec       	ldi	r24, 0xCC	; 204
     cbc:	91 e0       	ldi	r25, 0x01	; 1
     cbe:	01 97       	sbiw	r24, 0x01	; 1
     cc0:	f1 f7       	brne	.-4      	; 0xcbe <light_leds+0x110>
     cc2:	00 c0       	rjmp	.+0      	; 0xcc4 <light_leds+0x116>
     cc4:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_11)
     cc6:	80 91 47 06 	lds	r24, 0x0647
     cca:	82 ff       	sbrs	r24, 2
     ccc:	04 c0       	rjmp	.+8      	; 0xcd6 <light_leds+0x128>
	i2c_send_byte(PIC_DEV_ADDR, 11);
     cce:	80 e8       	ldi	r24, 0x80	; 128
     cd0:	6b e0       	ldi	r22, 0x0B	; 11
     cd2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     cd6:	8c ec       	ldi	r24, 0xCC	; 204
     cd8:	91 e0       	ldi	r25, 0x01	; 1
     cda:	01 97       	sbiw	r24, 0x01	; 1
     cdc:	f1 f7       	brne	.-4      	; 0xcda <light_leds+0x12c>
     cde:	00 c0       	rjmp	.+0      	; 0xce0 <light_leds+0x132>
     ce0:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_12)
     ce2:	80 91 47 06 	lds	r24, 0x0647
     ce6:	83 ff       	sbrs	r24, 3
     ce8:	04 c0       	rjmp	.+8      	; 0xcf2 <light_leds+0x144>
	i2c_send_byte(PIC_DEV_ADDR, 12);
     cea:	80 e8       	ldi	r24, 0x80	; 128
     cec:	6c e0       	ldi	r22, 0x0C	; 12
     cee:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     cf2:	8c ec       	ldi	r24, 0xCC	; 204
     cf4:	91 e0       	ldi	r25, 0x01	; 1
     cf6:	01 97       	sbiw	r24, 0x01	; 1
     cf8:	f1 f7       	brne	.-4      	; 0xcf6 <light_leds+0x148>
     cfa:	00 c0       	rjmp	.+0      	; 0xcfc <light_leds+0x14e>
     cfc:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_13)
     cfe:	80 91 47 06 	lds	r24, 0x0647
     d02:	84 ff       	sbrs	r24, 4
     d04:	04 c0       	rjmp	.+8      	; 0xd0e <light_leds+0x160>
	i2c_send_byte(PIC_DEV_ADDR, 13);
     d06:	80 e8       	ldi	r24, 0x80	; 128
     d08:	6d e0       	ldi	r22, 0x0D	; 13
     d0a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     d0e:	8c ec       	ldi	r24, 0xCC	; 204
     d10:	91 e0       	ldi	r25, 0x01	; 1
     d12:	01 97       	sbiw	r24, 0x01	; 1
     d14:	f1 f7       	brne	.-4      	; 0xd12 <light_leds+0x164>
     d16:	00 c0       	rjmp	.+0      	; 0xd18 <light_leds+0x16a>
     d18:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_14)
     d1a:	80 91 47 06 	lds	r24, 0x0647
     d1e:	85 ff       	sbrs	r24, 5
     d20:	04 c0       	rjmp	.+8      	; 0xd2a <light_leds+0x17c>
	i2c_send_byte(PIC_DEV_ADDR, 14);
     d22:	80 e8       	ldi	r24, 0x80	; 128
     d24:	6e e0       	ldi	r22, 0x0E	; 14
     d26:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     d2a:	8c ec       	ldi	r24, 0xCC	; 204
     d2c:	91 e0       	ldi	r25, 0x01	; 1
     d2e:	01 97       	sbiw	r24, 0x01	; 1
     d30:	f1 f7       	brne	.-4      	; 0xd2e <light_leds+0x180>
     d32:	00 c0       	rjmp	.+0      	; 0xd34 <light_leds+0x186>
     d34:	00 00       	nop
		_delay_us(100);	
	if(vote_indicator_15)
     d36:	80 91 47 06 	lds	r24, 0x0647
     d3a:	86 ff       	sbrs	r24, 6
     d3c:	04 c0       	rjmp	.+8      	; 0xd46 <light_leds+0x198>
	i2c_send_byte(PIC_DEV_ADDR, 15);
     d3e:	80 e8       	ldi	r24, 0x80	; 128
     d40:	6f e0       	ldi	r22, 0x0F	; 15
     d42:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     d46:	8c ec       	ldi	r24, 0xCC	; 204
     d48:	91 e0       	ldi	r25, 0x01	; 1
     d4a:	01 97       	sbiw	r24, 0x01	; 1
     d4c:	f1 f7       	brne	.-4      	; 0xd4a <light_leds+0x19c>
     d4e:	00 c0       	rjmp	.+0      	; 0xd50 <light_leds+0x1a2>
     d50:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_16)
     d52:	80 91 47 06 	lds	r24, 0x0647
     d56:	88 23       	and	r24, r24
     d58:	24 f4       	brge	.+8      	; 0xd62 <light_leds+0x1b4>
	i2c_send_byte(PIC_DEV_ADDR, 16);
     d5a:	80 e8       	ldi	r24, 0x80	; 128
     d5c:	60 e1       	ldi	r22, 0x10	; 16
     d5e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     d62:	8c ec       	ldi	r24, 0xCC	; 204
     d64:	91 e0       	ldi	r25, 0x01	; 1
     d66:	01 97       	sbiw	r24, 0x01	; 1
     d68:	f1 f7       	brne	.-4      	; 0xd66 <light_leds+0x1b8>
     d6a:	00 c0       	rjmp	.+0      	; 0xd6c <light_leds+0x1be>
     d6c:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_17)
     d6e:	80 91 0d 06 	lds	r24, 0x060D
     d72:	80 ff       	sbrs	r24, 0
     d74:	04 c0       	rjmp	.+8      	; 0xd7e <light_leds+0x1d0>
	i2c_send_byte(PIC_DEV_ADDR, 17);
     d76:	80 e8       	ldi	r24, 0x80	; 128
     d78:	61 e1       	ldi	r22, 0x11	; 17
     d7a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     d7e:	8c ec       	ldi	r24, 0xCC	; 204
     d80:	91 e0       	ldi	r25, 0x01	; 1
     d82:	01 97       	sbiw	r24, 0x01	; 1
     d84:	f1 f7       	brne	.-4      	; 0xd82 <light_leds+0x1d4>
     d86:	00 c0       	rjmp	.+0      	; 0xd88 <light_leds+0x1da>
     d88:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_18)
     d8a:	80 91 0d 06 	lds	r24, 0x060D
     d8e:	81 ff       	sbrs	r24, 1
     d90:	04 c0       	rjmp	.+8      	; 0xd9a <light_leds+0x1ec>
	i2c_send_byte(PIC_DEV_ADDR, 18);
     d92:	80 e8       	ldi	r24, 0x80	; 128
     d94:	62 e1       	ldi	r22, 0x12	; 18
     d96:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     d9a:	8c ec       	ldi	r24, 0xCC	; 204
     d9c:	91 e0       	ldi	r25, 0x01	; 1
     d9e:	01 97       	sbiw	r24, 0x01	; 1
     da0:	f1 f7       	brne	.-4      	; 0xd9e <light_leds+0x1f0>
     da2:	00 c0       	rjmp	.+0      	; 0xda4 <light_leds+0x1f6>
     da4:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_19)
     da6:	80 91 0d 06 	lds	r24, 0x060D
     daa:	82 ff       	sbrs	r24, 2
     dac:	04 c0       	rjmp	.+8      	; 0xdb6 <light_leds+0x208>
	i2c_send_byte(PIC_DEV_ADDR, 19);
     dae:	80 e8       	ldi	r24, 0x80	; 128
     db0:	63 e1       	ldi	r22, 0x13	; 19
     db2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     db6:	8c ec       	ldi	r24, 0xCC	; 204
     db8:	91 e0       	ldi	r25, 0x01	; 1
     dba:	01 97       	sbiw	r24, 0x01	; 1
     dbc:	f1 f7       	brne	.-4      	; 0xdba <light_leds+0x20c>
     dbe:	00 c0       	rjmp	.+0      	; 0xdc0 <light_leds+0x212>
     dc0:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_20)
     dc2:	80 91 0d 06 	lds	r24, 0x060D
     dc6:	83 ff       	sbrs	r24, 3
     dc8:	04 c0       	rjmp	.+8      	; 0xdd2 <light_leds+0x224>
	i2c_send_byte(PIC_DEV_ADDR, 20);
     dca:	80 e8       	ldi	r24, 0x80	; 128
     dcc:	64 e1       	ldi	r22, 0x14	; 20
     dce:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     dd2:	8c ec       	ldi	r24, 0xCC	; 204
     dd4:	91 e0       	ldi	r25, 0x01	; 1
     dd6:	01 97       	sbiw	r24, 0x01	; 1
     dd8:	f1 f7       	brne	.-4      	; 0xdd6 <light_leds+0x228>
     dda:	00 c0       	rjmp	.+0      	; 0xddc <light_leds+0x22e>
     ddc:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_21)
     dde:	80 91 0d 06 	lds	r24, 0x060D
     de2:	84 ff       	sbrs	r24, 4
     de4:	04 c0       	rjmp	.+8      	; 0xdee <light_leds+0x240>
	i2c_send_byte(PIC_DEV_ADDR, 21);
     de6:	80 e8       	ldi	r24, 0x80	; 128
     de8:	65 e1       	ldi	r22, 0x15	; 21
     dea:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     dee:	8c ec       	ldi	r24, 0xCC	; 204
     df0:	91 e0       	ldi	r25, 0x01	; 1
     df2:	01 97       	sbiw	r24, 0x01	; 1
     df4:	f1 f7       	brne	.-4      	; 0xdf2 <light_leds+0x244>
     df6:	00 c0       	rjmp	.+0      	; 0xdf8 <light_leds+0x24a>
     df8:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_22)
     dfa:	80 91 0d 06 	lds	r24, 0x060D
     dfe:	85 ff       	sbrs	r24, 5
     e00:	04 c0       	rjmp	.+8      	; 0xe0a <light_leds+0x25c>
	i2c_send_byte(PIC_DEV_ADDR, 22);
     e02:	80 e8       	ldi	r24, 0x80	; 128
     e04:	66 e1       	ldi	r22, 0x16	; 22
     e06:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     e0a:	8c ec       	ldi	r24, 0xCC	; 204
     e0c:	91 e0       	ldi	r25, 0x01	; 1
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	f1 f7       	brne	.-4      	; 0xe0e <light_leds+0x260>
     e12:	00 c0       	rjmp	.+0      	; 0xe14 <light_leds+0x266>
     e14:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_23)
     e16:	80 91 0d 06 	lds	r24, 0x060D
     e1a:	86 ff       	sbrs	r24, 6
     e1c:	04 c0       	rjmp	.+8      	; 0xe26 <light_leds+0x278>
	i2c_send_byte(PIC_DEV_ADDR, 23);
     e1e:	80 e8       	ldi	r24, 0x80	; 128
     e20:	67 e1       	ldi	r22, 0x17	; 23
     e22:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     e26:	8c ec       	ldi	r24, 0xCC	; 204
     e28:	91 e0       	ldi	r25, 0x01	; 1
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	f1 f7       	brne	.-4      	; 0xe2a <light_leds+0x27c>
     e2e:	00 c0       	rjmp	.+0      	; 0xe30 <light_leds+0x282>
     e30:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_24)
     e32:	80 91 0d 06 	lds	r24, 0x060D
     e36:	88 23       	and	r24, r24
     e38:	24 f4       	brge	.+8      	; 0xe42 <light_leds+0x294>
	i2c_send_byte(PIC_DEV_ADDR, 24);
     e3a:	80 e8       	ldi	r24, 0x80	; 128
     e3c:	68 e1       	ldi	r22, 0x18	; 24
     e3e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     e42:	8c ec       	ldi	r24, 0xCC	; 204
     e44:	91 e0       	ldi	r25, 0x01	; 1
     e46:	01 97       	sbiw	r24, 0x01	; 1
     e48:	f1 f7       	brne	.-4      	; 0xe46 <light_leds+0x298>
     e4a:	00 c0       	rjmp	.+0      	; 0xe4c <light_leds+0x29e>
     e4c:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_25)
     e4e:	80 91 60 05 	lds	r24, 0x0560
     e52:	80 ff       	sbrs	r24, 0
     e54:	04 c0       	rjmp	.+8      	; 0xe5e <light_leds+0x2b0>
	i2c_send_byte(PIC_DEV_ADDR, 25);
     e56:	80 e8       	ldi	r24, 0x80	; 128
     e58:	69 e1       	ldi	r22, 0x19	; 25
     e5a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     e5e:	8c ec       	ldi	r24, 0xCC	; 204
     e60:	91 e0       	ldi	r25, 0x01	; 1
     e62:	01 97       	sbiw	r24, 0x01	; 1
     e64:	f1 f7       	brne	.-4      	; 0xe62 <light_leds+0x2b4>
     e66:	00 c0       	rjmp	.+0      	; 0xe68 <light_leds+0x2ba>
     e68:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_26)
     e6a:	80 91 60 05 	lds	r24, 0x0560
     e6e:	81 ff       	sbrs	r24, 1
     e70:	04 c0       	rjmp	.+8      	; 0xe7a <light_leds+0x2cc>
	i2c_send_byte(PIC_DEV_ADDR, 26);
     e72:	80 e8       	ldi	r24, 0x80	; 128
     e74:	6a e1       	ldi	r22, 0x1A	; 26
     e76:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     e7a:	8c ec       	ldi	r24, 0xCC	; 204
     e7c:	91 e0       	ldi	r25, 0x01	; 1
     e7e:	01 97       	sbiw	r24, 0x01	; 1
     e80:	f1 f7       	brne	.-4      	; 0xe7e <light_leds+0x2d0>
     e82:	00 c0       	rjmp	.+0      	; 0xe84 <light_leds+0x2d6>
     e84:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_27)
     e86:	80 91 60 05 	lds	r24, 0x0560
     e8a:	82 ff       	sbrs	r24, 2
     e8c:	04 c0       	rjmp	.+8      	; 0xe96 <light_leds+0x2e8>
	i2c_send_byte(PIC_DEV_ADDR, 27);
     e8e:	80 e8       	ldi	r24, 0x80	; 128
     e90:	6b e1       	ldi	r22, 0x1B	; 27
     e92:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     e96:	8c ec       	ldi	r24, 0xCC	; 204
     e98:	91 e0       	ldi	r25, 0x01	; 1
     e9a:	01 97       	sbiw	r24, 0x01	; 1
     e9c:	f1 f7       	brne	.-4      	; 0xe9a <light_leds+0x2ec>
     e9e:	00 c0       	rjmp	.+0      	; 0xea0 <light_leds+0x2f2>
     ea0:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_28)
     ea2:	80 91 60 05 	lds	r24, 0x0560
     ea6:	83 ff       	sbrs	r24, 3
     ea8:	04 c0       	rjmp	.+8      	; 0xeb2 <light_leds+0x304>
	i2c_send_byte(PIC_DEV_ADDR, 28);
     eaa:	80 e8       	ldi	r24, 0x80	; 128
     eac:	6c e1       	ldi	r22, 0x1C	; 28
     eae:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     eb2:	8c ec       	ldi	r24, 0xCC	; 204
     eb4:	91 e0       	ldi	r25, 0x01	; 1
     eb6:	01 97       	sbiw	r24, 0x01	; 1
     eb8:	f1 f7       	brne	.-4      	; 0xeb6 <light_leds+0x308>
     eba:	00 c0       	rjmp	.+0      	; 0xebc <light_leds+0x30e>
     ebc:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_29)
     ebe:	80 91 60 05 	lds	r24, 0x0560
     ec2:	84 ff       	sbrs	r24, 4
     ec4:	04 c0       	rjmp	.+8      	; 0xece <light_leds+0x320>
	i2c_send_byte(PIC_DEV_ADDR, 29);
     ec6:	80 e8       	ldi	r24, 0x80	; 128
     ec8:	6d e1       	ldi	r22, 0x1D	; 29
     eca:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     ece:	8c ec       	ldi	r24, 0xCC	; 204
     ed0:	91 e0       	ldi	r25, 0x01	; 1
     ed2:	01 97       	sbiw	r24, 0x01	; 1
     ed4:	f1 f7       	brne	.-4      	; 0xed2 <light_leds+0x324>
     ed6:	00 c0       	rjmp	.+0      	; 0xed8 <light_leds+0x32a>
     ed8:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_30)
     eda:	80 91 60 05 	lds	r24, 0x0560
     ede:	85 ff       	sbrs	r24, 5
     ee0:	04 c0       	rjmp	.+8      	; 0xeea <light_leds+0x33c>
	i2c_send_byte(PIC_DEV_ADDR, 30);
     ee2:	80 e8       	ldi	r24, 0x80	; 128
     ee4:	6e e1       	ldi	r22, 0x1E	; 30
     ee6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     eea:	8c ec       	ldi	r24, 0xCC	; 204
     eec:	91 e0       	ldi	r25, 0x01	; 1
     eee:	01 97       	sbiw	r24, 0x01	; 1
     ef0:	f1 f7       	brne	.-4      	; 0xeee <light_leds+0x340>
     ef2:	00 c0       	rjmp	.+0      	; 0xef4 <light_leds+0x346>
     ef4:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_31)
     ef6:	80 91 60 05 	lds	r24, 0x0560
     efa:	86 ff       	sbrs	r24, 6
     efc:	04 c0       	rjmp	.+8      	; 0xf06 <light_leds+0x358>
	i2c_send_byte(PIC_DEV_ADDR, 31);
     efe:	80 e8       	ldi	r24, 0x80	; 128
     f00:	6f e1       	ldi	r22, 0x1F	; 31
     f02:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     f06:	8c ec       	ldi	r24, 0xCC	; 204
     f08:	91 e0       	ldi	r25, 0x01	; 1
     f0a:	01 97       	sbiw	r24, 0x01	; 1
     f0c:	f1 f7       	brne	.-4      	; 0xf0a <light_leds+0x35c>
     f0e:	00 c0       	rjmp	.+0      	; 0xf10 <light_leds+0x362>
     f10:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_32)
     f12:	80 91 60 05 	lds	r24, 0x0560
     f16:	88 23       	and	r24, r24
     f18:	24 f4       	brge	.+8      	; 0xf22 <light_leds+0x374>
	i2c_send_byte(PIC_DEV_ADDR, 32);
     f1a:	80 e8       	ldi	r24, 0x80	; 128
     f1c:	60 e2       	ldi	r22, 0x20	; 32
     f1e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     f22:	8c ec       	ldi	r24, 0xCC	; 204
     f24:	91 e0       	ldi	r25, 0x01	; 1
     f26:	01 97       	sbiw	r24, 0x01	; 1
     f28:	f1 f7       	brne	.-4      	; 0xf26 <light_leds+0x378>
     f2a:	00 c0       	rjmp	.+0      	; 0xf2c <light_leds+0x37e>
     f2c:	00 00       	nop
		_delay_us(100);
	if(vote_indicator_33)
     f2e:	80 91 c8 08 	lds	r24, 0x08C8
     f32:	80 ff       	sbrs	r24, 0
     f34:	04 c0       	rjmp	.+8      	; 0xf3e <light_leds+0x390>
	i2c_send_byte(PIC_DEV_ADDR, 33);
     f36:	80 e8       	ldi	r24, 0x80	; 128
     f38:	61 e2       	ldi	r22, 0x21	; 33
     f3a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     f3e:	8c ec       	ldi	r24, 0xCC	; 204
     f40:	91 e0       	ldi	r25, 0x01	; 1
     f42:	01 97       	sbiw	r24, 0x01	; 1
     f44:	f1 f7       	brne	.-4      	; 0xf42 <light_leds+0x394>
     f46:	00 c0       	rjmp	.+0      	; 0xf48 <light_leds+0x39a>
     f48:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_34)
     f4a:	80 91 c8 08 	lds	r24, 0x08C8
     f4e:	81 ff       	sbrs	r24, 1
     f50:	04 c0       	rjmp	.+8      	; 0xf5a <light_leds+0x3ac>
	i2c_send_byte(PIC_DEV_ADDR, 34);
     f52:	80 e8       	ldi	r24, 0x80	; 128
     f54:	62 e2       	ldi	r22, 0x22	; 34
     f56:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     f5a:	8c ec       	ldi	r24, 0xCC	; 204
     f5c:	91 e0       	ldi	r25, 0x01	; 1
     f5e:	01 97       	sbiw	r24, 0x01	; 1
     f60:	f1 f7       	brne	.-4      	; 0xf5e <light_leds+0x3b0>
     f62:	00 c0       	rjmp	.+0      	; 0xf64 <light_leds+0x3b6>
     f64:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_35)
     f66:	80 91 c8 08 	lds	r24, 0x08C8
     f6a:	82 ff       	sbrs	r24, 2
     f6c:	04 c0       	rjmp	.+8      	; 0xf76 <light_leds+0x3c8>
	i2c_send_byte(PIC_DEV_ADDR, 35);
     f6e:	80 e8       	ldi	r24, 0x80	; 128
     f70:	63 e2       	ldi	r22, 0x23	; 35
     f72:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     f76:	8c ec       	ldi	r24, 0xCC	; 204
     f78:	91 e0       	ldi	r25, 0x01	; 1
     f7a:	01 97       	sbiw	r24, 0x01	; 1
     f7c:	f1 f7       	brne	.-4      	; 0xf7a <light_leds+0x3cc>
     f7e:	00 c0       	rjmp	.+0      	; 0xf80 <light_leds+0x3d2>
     f80:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_36)
     f82:	80 91 c8 08 	lds	r24, 0x08C8
     f86:	83 ff       	sbrs	r24, 3
     f88:	04 c0       	rjmp	.+8      	; 0xf92 <light_leds+0x3e4>
	i2c_send_byte(PIC_DEV_ADDR, 36);
     f8a:	80 e8       	ldi	r24, 0x80	; 128
     f8c:	64 e2       	ldi	r22, 0x24	; 36
     f8e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     f92:	8c ec       	ldi	r24, 0xCC	; 204
     f94:	91 e0       	ldi	r25, 0x01	; 1
     f96:	01 97       	sbiw	r24, 0x01	; 1
     f98:	f1 f7       	brne	.-4      	; 0xf96 <light_leds+0x3e8>
     f9a:	00 c0       	rjmp	.+0      	; 0xf9c <light_leds+0x3ee>
     f9c:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_37)
     f9e:	80 91 c8 08 	lds	r24, 0x08C8
     fa2:	84 ff       	sbrs	r24, 4
     fa4:	04 c0       	rjmp	.+8      	; 0xfae <light_leds+0x400>
	i2c_send_byte(PIC_DEV_ADDR, 37);
     fa6:	80 e8       	ldi	r24, 0x80	; 128
     fa8:	65 e2       	ldi	r22, 0x25	; 37
     faa:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     fae:	8c ec       	ldi	r24, 0xCC	; 204
     fb0:	91 e0       	ldi	r25, 0x01	; 1
     fb2:	01 97       	sbiw	r24, 0x01	; 1
     fb4:	f1 f7       	brne	.-4      	; 0xfb2 <light_leds+0x404>
     fb6:	00 c0       	rjmp	.+0      	; 0xfb8 <light_leds+0x40a>
     fb8:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_38)
     fba:	80 91 c8 08 	lds	r24, 0x08C8
     fbe:	85 ff       	sbrs	r24, 5
     fc0:	04 c0       	rjmp	.+8      	; 0xfca <light_leds+0x41c>
	i2c_send_byte(PIC_DEV_ADDR, 38);
     fc2:	80 e8       	ldi	r24, 0x80	; 128
     fc4:	66 e2       	ldi	r22, 0x26	; 38
     fc6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     fca:	8c ec       	ldi	r24, 0xCC	; 204
     fcc:	91 e0       	ldi	r25, 0x01	; 1
     fce:	01 97       	sbiw	r24, 0x01	; 1
     fd0:	f1 f7       	brne	.-4      	; 0xfce <light_leds+0x420>
     fd2:	00 c0       	rjmp	.+0      	; 0xfd4 <light_leds+0x426>
     fd4:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_39)
     fd6:	80 91 c8 08 	lds	r24, 0x08C8
     fda:	86 ff       	sbrs	r24, 6
     fdc:	04 c0       	rjmp	.+8      	; 0xfe6 <light_leds+0x438>
	i2c_send_byte(PIC_DEV_ADDR, 39);
     fde:	80 e8       	ldi	r24, 0x80	; 128
     fe0:	67 e2       	ldi	r22, 0x27	; 39
     fe2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
     fe6:	8c ec       	ldi	r24, 0xCC	; 204
     fe8:	91 e0       	ldi	r25, 0x01	; 1
     fea:	01 97       	sbiw	r24, 0x01	; 1
     fec:	f1 f7       	brne	.-4      	; 0xfea <light_leds+0x43c>
     fee:	00 c0       	rjmp	.+0      	; 0xff0 <light_leds+0x442>
     ff0:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_40)
     ff2:	80 91 c8 08 	lds	r24, 0x08C8
     ff6:	88 23       	and	r24, r24
     ff8:	24 f4       	brge	.+8      	; 0x1002 <light_leds+0x454>
	i2c_send_byte(PIC_DEV_ADDR, 40);
     ffa:	80 e8       	ldi	r24, 0x80	; 128
     ffc:	68 e2       	ldi	r22, 0x28	; 40
     ffe:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    1002:	8c ec       	ldi	r24, 0xCC	; 204
    1004:	91 e0       	ldi	r25, 0x01	; 1
    1006:	01 97       	sbiw	r24, 0x01	; 1
    1008:	f1 f7       	brne	.-4      	; 0x1006 <light_leds+0x458>
    100a:	00 c0       	rjmp	.+0      	; 0x100c <light_leds+0x45e>
    100c:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_41)
    100e:	80 91 ca 08 	lds	r24, 0x08CA
    1012:	80 ff       	sbrs	r24, 0
    1014:	04 c0       	rjmp	.+8      	; 0x101e <light_leds+0x470>
	i2c_send_byte(PIC_DEV_ADDR, 41);
    1016:	80 e8       	ldi	r24, 0x80	; 128
    1018:	69 e2       	ldi	r22, 0x29	; 41
    101a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    101e:	8c ec       	ldi	r24, 0xCC	; 204
    1020:	91 e0       	ldi	r25, 0x01	; 1
    1022:	01 97       	sbiw	r24, 0x01	; 1
    1024:	f1 f7       	brne	.-4      	; 0x1022 <light_leds+0x474>
    1026:	00 c0       	rjmp	.+0      	; 0x1028 <light_leds+0x47a>
    1028:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_42)
    102a:	80 91 ca 08 	lds	r24, 0x08CA
    102e:	81 ff       	sbrs	r24, 1
    1030:	04 c0       	rjmp	.+8      	; 0x103a <light_leds+0x48c>
	i2c_send_byte(PIC_DEV_ADDR, 42);
    1032:	80 e8       	ldi	r24, 0x80	; 128
    1034:	6a e2       	ldi	r22, 0x2A	; 42
    1036:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    103a:	8c ec       	ldi	r24, 0xCC	; 204
    103c:	91 e0       	ldi	r25, 0x01	; 1
    103e:	01 97       	sbiw	r24, 0x01	; 1
    1040:	f1 f7       	brne	.-4      	; 0x103e <light_leds+0x490>
    1042:	00 c0       	rjmp	.+0      	; 0x1044 <light_leds+0x496>
    1044:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_43)
    1046:	80 91 ca 08 	lds	r24, 0x08CA
    104a:	82 ff       	sbrs	r24, 2
    104c:	04 c0       	rjmp	.+8      	; 0x1056 <light_leds+0x4a8>
	i2c_send_byte(PIC_DEV_ADDR, 43);
    104e:	80 e8       	ldi	r24, 0x80	; 128
    1050:	6b e2       	ldi	r22, 0x2B	; 43
    1052:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    1056:	8c ec       	ldi	r24, 0xCC	; 204
    1058:	91 e0       	ldi	r25, 0x01	; 1
    105a:	01 97       	sbiw	r24, 0x01	; 1
    105c:	f1 f7       	brne	.-4      	; 0x105a <light_leds+0x4ac>
    105e:	00 c0       	rjmp	.+0      	; 0x1060 <light_leds+0x4b2>
    1060:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_44)
    1062:	80 91 ca 08 	lds	r24, 0x08CA
    1066:	83 ff       	sbrs	r24, 3
    1068:	04 c0       	rjmp	.+8      	; 0x1072 <light_leds+0x4c4>
	i2c_send_byte(PIC_DEV_ADDR, 44);
    106a:	80 e8       	ldi	r24, 0x80	; 128
    106c:	6c e2       	ldi	r22, 0x2C	; 44
    106e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    1072:	8c ec       	ldi	r24, 0xCC	; 204
    1074:	91 e0       	ldi	r25, 0x01	; 1
    1076:	01 97       	sbiw	r24, 0x01	; 1
    1078:	f1 f7       	brne	.-4      	; 0x1076 <light_leds+0x4c8>
    107a:	00 c0       	rjmp	.+0      	; 0x107c <light_leds+0x4ce>
    107c:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_45)
    107e:	80 91 ca 08 	lds	r24, 0x08CA
    1082:	84 ff       	sbrs	r24, 4
    1084:	04 c0       	rjmp	.+8      	; 0x108e <light_leds+0x4e0>
	i2c_send_byte(PIC_DEV_ADDR, 45);
    1086:	80 e8       	ldi	r24, 0x80	; 128
    1088:	6d e2       	ldi	r22, 0x2D	; 45
    108a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    108e:	8c ec       	ldi	r24, 0xCC	; 204
    1090:	91 e0       	ldi	r25, 0x01	; 1
    1092:	01 97       	sbiw	r24, 0x01	; 1
    1094:	f1 f7       	brne	.-4      	; 0x1092 <light_leds+0x4e4>
    1096:	00 c0       	rjmp	.+0      	; 0x1098 <light_leds+0x4ea>
    1098:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_46)	
    109a:	80 91 ca 08 	lds	r24, 0x08CA
    109e:	85 ff       	sbrs	r24, 5
    10a0:	04 c0       	rjmp	.+8      	; 0x10aa <light_leds+0x4fc>
	i2c_send_byte(PIC_DEV_ADDR, 46);
    10a2:	80 e8       	ldi	r24, 0x80	; 128
    10a4:	6e e2       	ldi	r22, 0x2E	; 46
    10a6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    10aa:	8c ec       	ldi	r24, 0xCC	; 204
    10ac:	91 e0       	ldi	r25, 0x01	; 1
    10ae:	01 97       	sbiw	r24, 0x01	; 1
    10b0:	f1 f7       	brne	.-4      	; 0x10ae <light_leds+0x500>
    10b2:	00 c0       	rjmp	.+0      	; 0x10b4 <light_leds+0x506>
    10b4:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_47)
    10b6:	80 91 ca 08 	lds	r24, 0x08CA
    10ba:	86 ff       	sbrs	r24, 6
    10bc:	04 c0       	rjmp	.+8      	; 0x10c6 <light_leds+0x518>
	i2c_send_byte(PIC_DEV_ADDR, 47);
    10be:	80 e8       	ldi	r24, 0x80	; 128
    10c0:	6f e2       	ldi	r22, 0x2F	; 47
    10c2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    10c6:	8c ec       	ldi	r24, 0xCC	; 204
    10c8:	91 e0       	ldi	r25, 0x01	; 1
    10ca:	01 97       	sbiw	r24, 0x01	; 1
    10cc:	f1 f7       	brne	.-4      	; 0x10ca <light_leds+0x51c>
    10ce:	00 c0       	rjmp	.+0      	; 0x10d0 <light_leds+0x522>
    10d0:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_48)
    10d2:	80 91 ca 08 	lds	r24, 0x08CA
    10d6:	88 23       	and	r24, r24
    10d8:	24 f4       	brge	.+8      	; 0x10e2 <light_leds+0x534>
	i2c_send_byte(PIC_DEV_ADDR, 48);
    10da:	80 e8       	ldi	r24, 0x80	; 128
    10dc:	60 e3       	ldi	r22, 0x30	; 48
    10de:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    10e2:	8c ec       	ldi	r24, 0xCC	; 204
    10e4:	91 e0       	ldi	r25, 0x01	; 1
    10e6:	01 97       	sbiw	r24, 0x01	; 1
    10e8:	f1 f7       	brne	.-4      	; 0x10e6 <light_leds+0x538>
    10ea:	00 c0       	rjmp	.+0      	; 0x10ec <light_leds+0x53e>
    10ec:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_49)
    10ee:	80 91 67 05 	lds	r24, 0x0567
    10f2:	80 ff       	sbrs	r24, 0
    10f4:	04 c0       	rjmp	.+8      	; 0x10fe <light_leds+0x550>
	i2c_send_byte(PIC_DEV_ADDR, 49);
    10f6:	80 e8       	ldi	r24, 0x80	; 128
    10f8:	61 e3       	ldi	r22, 0x31	; 49
    10fa:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    10fe:	8c ec       	ldi	r24, 0xCC	; 204
    1100:	91 e0       	ldi	r25, 0x01	; 1
    1102:	01 97       	sbiw	r24, 0x01	; 1
    1104:	f1 f7       	brne	.-4      	; 0x1102 <light_leds+0x554>
    1106:	00 c0       	rjmp	.+0      	; 0x1108 <light_leds+0x55a>
    1108:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_50)
    110a:	80 91 67 05 	lds	r24, 0x0567
    110e:	81 ff       	sbrs	r24, 1
    1110:	04 c0       	rjmp	.+8      	; 0x111a <light_leds+0x56c>
	i2c_send_byte(PIC_DEV_ADDR, 50);
    1112:	80 e8       	ldi	r24, 0x80	; 128
    1114:	62 e3       	ldi	r22, 0x32	; 50
    1116:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    111a:	8c ec       	ldi	r24, 0xCC	; 204
    111c:	91 e0       	ldi	r25, 0x01	; 1
    111e:	01 97       	sbiw	r24, 0x01	; 1
    1120:	f1 f7       	brne	.-4      	; 0x111e <light_leds+0x570>
    1122:	00 c0       	rjmp	.+0      	; 0x1124 <light_leds+0x576>
    1124:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_51)
    1126:	80 91 67 05 	lds	r24, 0x0567
    112a:	82 ff       	sbrs	r24, 2
    112c:	04 c0       	rjmp	.+8      	; 0x1136 <light_leds+0x588>
	i2c_send_byte(PIC_DEV_ADDR, 51);
    112e:	80 e8       	ldi	r24, 0x80	; 128
    1130:	63 e3       	ldi	r22, 0x33	; 51
    1132:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    1136:	8c ec       	ldi	r24, 0xCC	; 204
    1138:	91 e0       	ldi	r25, 0x01	; 1
    113a:	01 97       	sbiw	r24, 0x01	; 1
    113c:	f1 f7       	brne	.-4      	; 0x113a <light_leds+0x58c>
    113e:	00 c0       	rjmp	.+0      	; 0x1140 <light_leds+0x592>
    1140:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_52)
    1142:	80 91 67 05 	lds	r24, 0x0567
    1146:	83 ff       	sbrs	r24, 3
    1148:	04 c0       	rjmp	.+8      	; 0x1152 <light_leds+0x5a4>
	i2c_send_byte(PIC_DEV_ADDR, 52);
    114a:	80 e8       	ldi	r24, 0x80	; 128
    114c:	64 e3       	ldi	r22, 0x34	; 52
    114e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    1152:	8c ec       	ldi	r24, 0xCC	; 204
    1154:	91 e0       	ldi	r25, 0x01	; 1
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	f1 f7       	brne	.-4      	; 0x1156 <light_leds+0x5a8>
    115a:	00 c0       	rjmp	.+0      	; 0x115c <light_leds+0x5ae>
    115c:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_53)
    115e:	80 91 67 05 	lds	r24, 0x0567
    1162:	84 ff       	sbrs	r24, 4
    1164:	04 c0       	rjmp	.+8      	; 0x116e <light_leds+0x5c0>
	i2c_send_byte(PIC_DEV_ADDR, 53);
    1166:	80 e8       	ldi	r24, 0x80	; 128
    1168:	65 e3       	ldi	r22, 0x35	; 53
    116a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    116e:	8c ec       	ldi	r24, 0xCC	; 204
    1170:	91 e0       	ldi	r25, 0x01	; 1
    1172:	01 97       	sbiw	r24, 0x01	; 1
    1174:	f1 f7       	brne	.-4      	; 0x1172 <light_leds+0x5c4>
    1176:	00 c0       	rjmp	.+0      	; 0x1178 <light_leds+0x5ca>
    1178:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_54)
    117a:	80 91 67 05 	lds	r24, 0x0567
    117e:	85 ff       	sbrs	r24, 5
    1180:	04 c0       	rjmp	.+8      	; 0x118a <light_leds+0x5dc>
	i2c_send_byte(PIC_DEV_ADDR, 54);
    1182:	80 e8       	ldi	r24, 0x80	; 128
    1184:	66 e3       	ldi	r22, 0x36	; 54
    1186:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    118a:	8c ec       	ldi	r24, 0xCC	; 204
    118c:	91 e0       	ldi	r25, 0x01	; 1
    118e:	01 97       	sbiw	r24, 0x01	; 1
    1190:	f1 f7       	brne	.-4      	; 0x118e <light_leds+0x5e0>
    1192:	00 c0       	rjmp	.+0      	; 0x1194 <light_leds+0x5e6>
    1194:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_55)
    1196:	80 91 67 05 	lds	r24, 0x0567
    119a:	86 ff       	sbrs	r24, 6
    119c:	04 c0       	rjmp	.+8      	; 0x11a6 <light_leds+0x5f8>
	i2c_send_byte(PIC_DEV_ADDR, 55);
    119e:	80 e8       	ldi	r24, 0x80	; 128
    11a0:	67 e3       	ldi	r22, 0x37	; 55
    11a2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    11a6:	8c ec       	ldi	r24, 0xCC	; 204
    11a8:	91 e0       	ldi	r25, 0x01	; 1
    11aa:	01 97       	sbiw	r24, 0x01	; 1
    11ac:	f1 f7       	brne	.-4      	; 0x11aa <light_leds+0x5fc>
    11ae:	00 c0       	rjmp	.+0      	; 0x11b0 <light_leds+0x602>
    11b0:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_56)
    11b2:	80 91 67 05 	lds	r24, 0x0567
    11b6:	88 23       	and	r24, r24
    11b8:	24 f4       	brge	.+8      	; 0x11c2 <light_leds+0x614>
	i2c_send_byte(PIC_DEV_ADDR, 56);
    11ba:	80 e8       	ldi	r24, 0x80	; 128
    11bc:	68 e3       	ldi	r22, 0x38	; 56
    11be:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    11c2:	8c ec       	ldi	r24, 0xCC	; 204
    11c4:	91 e0       	ldi	r25, 0x01	; 1
    11c6:	01 97       	sbiw	r24, 0x01	; 1
    11c8:	f1 f7       	brne	.-4      	; 0x11c6 <light_leds+0x618>
    11ca:	00 c0       	rjmp	.+0      	; 0x11cc <light_leds+0x61e>
    11cc:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_57)
    11ce:	80 91 54 08 	lds	r24, 0x0854
    11d2:	80 ff       	sbrs	r24, 0
    11d4:	04 c0       	rjmp	.+8      	; 0x11de <light_leds+0x630>
	i2c_send_byte(PIC_DEV_ADDR, 57);
    11d6:	80 e8       	ldi	r24, 0x80	; 128
    11d8:	69 e3       	ldi	r22, 0x39	; 57
    11da:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    11de:	8c ec       	ldi	r24, 0xCC	; 204
    11e0:	91 e0       	ldi	r25, 0x01	; 1
    11e2:	01 97       	sbiw	r24, 0x01	; 1
    11e4:	f1 f7       	brne	.-4      	; 0x11e2 <light_leds+0x634>
    11e6:	00 c0       	rjmp	.+0      	; 0x11e8 <light_leds+0x63a>
    11e8:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_58)
    11ea:	80 91 54 08 	lds	r24, 0x0854
    11ee:	81 ff       	sbrs	r24, 1
    11f0:	04 c0       	rjmp	.+8      	; 0x11fa <light_leds+0x64c>
	i2c_send_byte(PIC_DEV_ADDR, 58);
    11f2:	80 e8       	ldi	r24, 0x80	; 128
    11f4:	6a e3       	ldi	r22, 0x3A	; 58
    11f6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    11fa:	8c ec       	ldi	r24, 0xCC	; 204
    11fc:	91 e0       	ldi	r25, 0x01	; 1
    11fe:	01 97       	sbiw	r24, 0x01	; 1
    1200:	f1 f7       	brne	.-4      	; 0x11fe <light_leds+0x650>
    1202:	00 c0       	rjmp	.+0      	; 0x1204 <light_leds+0x656>
    1204:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_59)
    1206:	80 91 54 08 	lds	r24, 0x0854
    120a:	82 ff       	sbrs	r24, 2
    120c:	04 c0       	rjmp	.+8      	; 0x1216 <light_leds+0x668>
	i2c_send_byte(PIC_DEV_ADDR, 59);
    120e:	80 e8       	ldi	r24, 0x80	; 128
    1210:	6b e3       	ldi	r22, 0x3B	; 59
    1212:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    1216:	8c ec       	ldi	r24, 0xCC	; 204
    1218:	91 e0       	ldi	r25, 0x01	; 1
    121a:	01 97       	sbiw	r24, 0x01	; 1
    121c:	f1 f7       	brne	.-4      	; 0x121a <light_leds+0x66c>
    121e:	00 c0       	rjmp	.+0      	; 0x1220 <light_leds+0x672>
    1220:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_60)
    1222:	80 91 54 08 	lds	r24, 0x0854
    1226:	83 ff       	sbrs	r24, 3
    1228:	04 c0       	rjmp	.+8      	; 0x1232 <light_leds+0x684>
	i2c_send_byte(PIC_DEV_ADDR, 60);
    122a:	80 e8       	ldi	r24, 0x80	; 128
    122c:	6c e3       	ldi	r22, 0x3C	; 60
    122e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    1232:	8c ec       	ldi	r24, 0xCC	; 204
    1234:	91 e0       	ldi	r25, 0x01	; 1
    1236:	01 97       	sbiw	r24, 0x01	; 1
    1238:	f1 f7       	brne	.-4      	; 0x1236 <light_leds+0x688>
    123a:	00 c0       	rjmp	.+0      	; 0x123c <light_leds+0x68e>
    123c:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_61)
    123e:	80 91 54 08 	lds	r24, 0x0854
    1242:	84 ff       	sbrs	r24, 4
    1244:	04 c0       	rjmp	.+8      	; 0x124e <light_leds+0x6a0>
	i2c_send_byte(PIC_DEV_ADDR, 61);
    1246:	80 e8       	ldi	r24, 0x80	; 128
    1248:	6d e3       	ldi	r22, 0x3D	; 61
    124a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    124e:	8c ec       	ldi	r24, 0xCC	; 204
    1250:	91 e0       	ldi	r25, 0x01	; 1
    1252:	01 97       	sbiw	r24, 0x01	; 1
    1254:	f1 f7       	brne	.-4      	; 0x1252 <light_leds+0x6a4>
    1256:	00 c0       	rjmp	.+0      	; 0x1258 <light_leds+0x6aa>
    1258:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_62)
    125a:	80 91 54 08 	lds	r24, 0x0854
    125e:	85 ff       	sbrs	r24, 5
    1260:	04 c0       	rjmp	.+8      	; 0x126a <light_leds+0x6bc>
	i2c_send_byte(PIC_DEV_ADDR, 62);
    1262:	80 e8       	ldi	r24, 0x80	; 128
    1264:	6e e3       	ldi	r22, 0x3E	; 62
    1266:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    126a:	8c ec       	ldi	r24, 0xCC	; 204
    126c:	91 e0       	ldi	r25, 0x01	; 1
    126e:	01 97       	sbiw	r24, 0x01	; 1
    1270:	f1 f7       	brne	.-4      	; 0x126e <light_leds+0x6c0>
    1272:	00 c0       	rjmp	.+0      	; 0x1274 <light_leds+0x6c6>
    1274:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_63)
    1276:	80 91 54 08 	lds	r24, 0x0854
    127a:	86 ff       	sbrs	r24, 6
    127c:	04 c0       	rjmp	.+8      	; 0x1286 <light_leds+0x6d8>
	i2c_send_byte(PIC_DEV_ADDR, 63);
    127e:	80 e8       	ldi	r24, 0x80	; 128
    1280:	6f e3       	ldi	r22, 0x3F	; 63
    1282:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    1286:	8c ec       	ldi	r24, 0xCC	; 204
    1288:	91 e0       	ldi	r25, 0x01	; 1
    128a:	01 97       	sbiw	r24, 0x01	; 1
    128c:	f1 f7       	brne	.-4      	; 0x128a <light_leds+0x6dc>
    128e:	00 c0       	rjmp	.+0      	; 0x1290 <light_leds+0x6e2>
    1290:	00 00       	nop
	_delay_us(100);
	if(vote_indicator_64)
    1292:	80 91 54 08 	lds	r24, 0x0854
    1296:	88 23       	and	r24, r24
    1298:	24 f4       	brge	.+8      	; 0x12a2 <light_leds+0x6f4>
	i2c_send_byte(PIC_DEV_ADDR, 64);
    129a:	80 e8       	ldi	r24, 0x80	; 128
    129c:	60 e4       	ldi	r22, 0x40	; 64
    129e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
    12a2:	8c ec       	ldi	r24, 0xCC	; 204
    12a4:	91 e0       	ldi	r25, 0x01	; 1
    12a6:	01 97       	sbiw	r24, 0x01	; 1
    12a8:	f1 f7       	brne	.-4      	; 0x12a6 <light_leds+0x6f8>
    12aa:	00 c0       	rjmp	.+0      	; 0x12ac <light_leds+0x6fe>
    12ac:	00 00       	nop
	_delay_us(100);
	
}
    12ae:	08 95       	ret

000012b0 <vote_registration>:

void vote_registration()  			// Function to count votes
{
    12b0:	2f 92       	push	r2
    12b2:	3f 92       	push	r3
    12b4:	4f 92       	push	r4
    12b6:	5f 92       	push	r5
    12b8:	6f 92       	push	r6
    12ba:	7f 92       	push	r7
    12bc:	8f 92       	push	r8
    12be:	9f 92       	push	r9
    12c0:	af 92       	push	r10
    12c2:	bf 92       	push	r11
    12c4:	cf 92       	push	r12
    12c6:	df 92       	push	r13
    12c8:	ef 92       	push	r14
    12ca:	ff 92       	push	r15
    12cc:	0f 93       	push	r16
    12ce:	1f 93       	push	r17
    12d0:	cf 93       	push	r28
    12d2:	df 93       	push	r29
    12d4:	0f 92       	push	r0
    12d6:	cd b7       	in	r28, 0x3d	; 61
    12d8:	de b7       	in	r29, 0x3e	; 62
				below category size 1 is calculated by splitting categories1_2, considering only 2
						category size 2 is calculated by splitting considering only 4 and adding with 2
				So what is being calculated is till which button a category extends. This is used when checking if a button is in a category.
				A button in a particular category has to be greater than the last button of the previous category but less than or equal to the last button of its own category.	*/
	
		uint8_t category_size_1 = (i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0x0F);		// This is done to reduce repeated code showing calculations done when checking the value of a category.
    12da:	80 ea       	ldi	r24, 0xA0	; 160
    12dc:	60 e8       	ldi	r22, 0x80	; 128
    12de:	70 e0       	ldi	r23, 0x00	; 0
    12e0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    12e4:	8f 70       	andi	r24, 0x0F	; 15
    12e6:	89 83       	std	Y+1, r24	; 0x01
		uint8_t category_size_2 = ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0xF0) >> 4));
    12e8:	80 ea       	ldi	r24, 0xA0	; 160
    12ea:	60 e8       	ldi	r22, 0x80	; 128
    12ec:	70 e0       	ldi	r23, 0x00	; 0
    12ee:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    12f2:	e8 2e       	mov	r14, r24
    12f4:	80 ea       	ldi	r24, 0xA0	; 160
    12f6:	60 e8       	ldi	r22, 0x80	; 128
    12f8:	70 e0       	ldi	r23, 0x00	; 0
    12fa:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    12fe:	82 95       	swap	r24
    1300:	8f 70       	andi	r24, 0x0F	; 15
    1302:	9e 2d       	mov	r25, r14
    1304:	9f 70       	andi	r25, 0x0F	; 15
    1306:	58 2e       	mov	r5, r24
    1308:	59 0e       	add	r5, r25
		uint8_t category_size_3 = ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0x0F));
    130a:	80 ea       	ldi	r24, 0xA0	; 160
    130c:	60 e8       	ldi	r22, 0x80	; 128
    130e:	70 e0       	ldi	r23, 0x00	; 0
    1310:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1314:	d8 2e       	mov	r13, r24
    1316:	80 ea       	ldi	r24, 0xA0	; 160
    1318:	60 e8       	ldi	r22, 0x80	; 128
    131a:	70 e0       	ldi	r23, 0x00	; 0
    131c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1320:	82 95       	swap	r24
    1322:	8f 70       	andi	r24, 0x0F	; 15
    1324:	9d 2d       	mov	r25, r13
    1326:	9f 70       	andi	r25, 0x0F	; 15
    1328:	e8 2e       	mov	r14, r24
    132a:	e9 0e       	add	r14, r25
    132c:	80 ea       	ldi	r24, 0xA0	; 160
    132e:	61 e8       	ldi	r22, 0x81	; 129
    1330:	70 e0       	ldi	r23, 0x00	; 0
    1332:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1336:	8f 70       	andi	r24, 0x0F	; 15
    1338:	7e 2c       	mov	r7, r14
    133a:	78 0e       	add	r7, r24
		uint8_t category_size_4 = ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0xF0) >> 4));
    133c:	80 ea       	ldi	r24, 0xA0	; 160
    133e:	60 e8       	ldi	r22, 0x80	; 128
    1340:	70 e0       	ldi	r23, 0x00	; 0
    1342:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1346:	d8 2e       	mov	r13, r24
    1348:	80 ea       	ldi	r24, 0xA0	; 160
    134a:	60 e8       	ldi	r22, 0x80	; 128
    134c:	70 e0       	ldi	r23, 0x00	; 0
    134e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1352:	e8 2e       	mov	r14, r24
    1354:	e6 94       	lsr	r14
    1356:	e6 94       	lsr	r14
    1358:	e6 94       	lsr	r14
    135a:	e6 94       	lsr	r14
    135c:	9d 2d       	mov	r25, r13
    135e:	9f 70       	andi	r25, 0x0F	; 15
    1360:	e9 0e       	add	r14, r25
    1362:	80 ea       	ldi	r24, 0xA0	; 160
    1364:	61 e8       	ldi	r22, 0x81	; 129
    1366:	70 e0       	ldi	r23, 0x00	; 0
    1368:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    136c:	8f 70       	andi	r24, 0x0F	; 15
    136e:	e8 0e       	add	r14, r24
    1370:	80 ea       	ldi	r24, 0xA0	; 160
    1372:	61 e8       	ldi	r22, 0x81	; 129
    1374:	70 e0       	ldi	r23, 0x00	; 0
    1376:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    137a:	82 95       	swap	r24
    137c:	8f 70       	andi	r24, 0x0F	; 15
    137e:	9e 2c       	mov	r9, r14
    1380:	98 0e       	add	r9, r24
		uint8_t category_size_5 = ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories5_6) & 0x0F));
    1382:	80 ea       	ldi	r24, 0xA0	; 160
    1384:	60 e8       	ldi	r22, 0x80	; 128
    1386:	70 e0       	ldi	r23, 0x00	; 0
    1388:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    138c:	d8 2e       	mov	r13, r24
    138e:	80 ea       	ldi	r24, 0xA0	; 160
    1390:	60 e8       	ldi	r22, 0x80	; 128
    1392:	70 e0       	ldi	r23, 0x00	; 0
    1394:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1398:	e8 2e       	mov	r14, r24
    139a:	e6 94       	lsr	r14
    139c:	e6 94       	lsr	r14
    139e:	e6 94       	lsr	r14
    13a0:	e6 94       	lsr	r14
    13a2:	9d 2d       	mov	r25, r13
    13a4:	9f 70       	andi	r25, 0x0F	; 15
    13a6:	e9 0e       	add	r14, r25
    13a8:	80 ea       	ldi	r24, 0xA0	; 160
    13aa:	61 e8       	ldi	r22, 0x81	; 129
    13ac:	70 e0       	ldi	r23, 0x00	; 0
    13ae:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    13b2:	8f 70       	andi	r24, 0x0F	; 15
    13b4:	e8 0e       	add	r14, r24
    13b6:	80 ea       	ldi	r24, 0xA0	; 160
    13b8:	61 e8       	ldi	r22, 0x81	; 129
    13ba:	70 e0       	ldi	r23, 0x00	; 0
    13bc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    13c0:	82 95       	swap	r24
    13c2:	8f 70       	andi	r24, 0x0F	; 15
    13c4:	e8 0e       	add	r14, r24
    13c6:	80 ea       	ldi	r24, 0xA0	; 160
    13c8:	62 e8       	ldi	r22, 0x82	; 130
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    13d0:	8f 70       	andi	r24, 0x0F	; 15
    13d2:	ae 2c       	mov	r10, r14
    13d4:	a8 0e       	add	r10, r24
		uint8_t category_size_6	= ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories5_6) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories5_6) & 0xF0) >> 4));
    13d6:	80 ea       	ldi	r24, 0xA0	; 160
    13d8:	60 e8       	ldi	r22, 0x80	; 128
    13da:	70 e0       	ldi	r23, 0x00	; 0
    13dc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    13e0:	d8 2e       	mov	r13, r24
    13e2:	80 ea       	ldi	r24, 0xA0	; 160
    13e4:	60 e8       	ldi	r22, 0x80	; 128
    13e6:	70 e0       	ldi	r23, 0x00	; 0
    13e8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    13ec:	e8 2e       	mov	r14, r24
    13ee:	e6 94       	lsr	r14
    13f0:	e6 94       	lsr	r14
    13f2:	e6 94       	lsr	r14
    13f4:	e6 94       	lsr	r14
    13f6:	9d 2d       	mov	r25, r13
    13f8:	9f 70       	andi	r25, 0x0F	; 15
    13fa:	e9 0e       	add	r14, r25
    13fc:	80 ea       	ldi	r24, 0xA0	; 160
    13fe:	61 e8       	ldi	r22, 0x81	; 129
    1400:	70 e0       	ldi	r23, 0x00	; 0
    1402:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1406:	8f 70       	andi	r24, 0x0F	; 15
    1408:	e8 0e       	add	r14, r24
    140a:	80 ea       	ldi	r24, 0xA0	; 160
    140c:	61 e8       	ldi	r22, 0x81	; 129
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1414:	82 95       	swap	r24
    1416:	8f 70       	andi	r24, 0x0F	; 15
    1418:	e8 0e       	add	r14, r24
    141a:	80 ea       	ldi	r24, 0xA0	; 160
    141c:	62 e8       	ldi	r22, 0x82	; 130
    141e:	70 e0       	ldi	r23, 0x00	; 0
    1420:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1424:	8f 70       	andi	r24, 0x0F	; 15
    1426:	e8 0e       	add	r14, r24
    1428:	80 ea       	ldi	r24, 0xA0	; 160
    142a:	62 e8       	ldi	r22, 0x82	; 130
    142c:	70 e0       	ldi	r23, 0x00	; 0
    142e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1432:	82 95       	swap	r24
    1434:	8f 70       	andi	r24, 0x0F	; 15
    1436:	8e 2c       	mov	r8, r14
    1438:	88 0e       	add	r8, r24
		uint8_t category_size_7 = ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories5_6) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories5_6) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories7_8) & 0x0F));
    143a:	80 ea       	ldi	r24, 0xA0	; 160
    143c:	60 e8       	ldi	r22, 0x80	; 128
    143e:	70 e0       	ldi	r23, 0x00	; 0
    1440:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1444:	d8 2e       	mov	r13, r24
    1446:	80 ea       	ldi	r24, 0xA0	; 160
    1448:	60 e8       	ldi	r22, 0x80	; 128
    144a:	70 e0       	ldi	r23, 0x00	; 0
    144c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1450:	e8 2e       	mov	r14, r24
    1452:	e6 94       	lsr	r14
    1454:	e6 94       	lsr	r14
    1456:	e6 94       	lsr	r14
    1458:	e6 94       	lsr	r14
    145a:	9d 2d       	mov	r25, r13
    145c:	9f 70       	andi	r25, 0x0F	; 15
    145e:	e9 0e       	add	r14, r25
    1460:	80 ea       	ldi	r24, 0xA0	; 160
    1462:	61 e8       	ldi	r22, 0x81	; 129
    1464:	70 e0       	ldi	r23, 0x00	; 0
    1466:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    146a:	8f 70       	andi	r24, 0x0F	; 15
    146c:	e8 0e       	add	r14, r24
    146e:	80 ea       	ldi	r24, 0xA0	; 160
    1470:	61 e8       	ldi	r22, 0x81	; 129
    1472:	70 e0       	ldi	r23, 0x00	; 0
    1474:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1478:	82 95       	swap	r24
    147a:	8f 70       	andi	r24, 0x0F	; 15
    147c:	e8 0e       	add	r14, r24
    147e:	80 ea       	ldi	r24, 0xA0	; 160
    1480:	62 e8       	ldi	r22, 0x82	; 130
    1482:	70 e0       	ldi	r23, 0x00	; 0
    1484:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1488:	8f 70       	andi	r24, 0x0F	; 15
    148a:	e8 0e       	add	r14, r24
    148c:	80 ea       	ldi	r24, 0xA0	; 160
    148e:	62 e8       	ldi	r22, 0x82	; 130
    1490:	70 e0       	ldi	r23, 0x00	; 0
    1492:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1496:	82 95       	swap	r24
    1498:	8f 70       	andi	r24, 0x0F	; 15
    149a:	e8 0e       	add	r14, r24
    149c:	80 ea       	ldi	r24, 0xA0	; 160
    149e:	63 e8       	ldi	r22, 0x83	; 131
    14a0:	70 e0       	ldi	r23, 0x00	; 0
    14a2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    14a6:	8f 70       	andi	r24, 0x0F	; 15
    14a8:	6e 2c       	mov	r6, r14
    14aa:	68 0e       	add	r6, r24
		uint8_t category_size_8 = ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories1_2) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories3_4) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories5_6) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories5_6) & 0xF0) >> 4) + (i2c_read_byte(EEPROM_DEV_ADDR, categories7_8) & 0x0F) + ((i2c_read_byte(EEPROM_DEV_ADDR, categories7_8) & 0xF0) >> 4));
    14ac:	80 ea       	ldi	r24, 0xA0	; 160
    14ae:	60 e8       	ldi	r22, 0x80	; 128
    14b0:	70 e0       	ldi	r23, 0x00	; 0
    14b2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    14b6:	d8 2e       	mov	r13, r24
    14b8:	80 ea       	ldi	r24, 0xA0	; 160
    14ba:	60 e8       	ldi	r22, 0x80	; 128
    14bc:	70 e0       	ldi	r23, 0x00	; 0
    14be:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    14c2:	e8 2e       	mov	r14, r24
    14c4:	e6 94       	lsr	r14
    14c6:	e6 94       	lsr	r14
    14c8:	e6 94       	lsr	r14
    14ca:	e6 94       	lsr	r14
    14cc:	9d 2d       	mov	r25, r13
    14ce:	9f 70       	andi	r25, 0x0F	; 15
    14d0:	e9 0e       	add	r14, r25
    14d2:	80 ea       	ldi	r24, 0xA0	; 160
    14d4:	61 e8       	ldi	r22, 0x81	; 129
    14d6:	70 e0       	ldi	r23, 0x00	; 0
    14d8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    14dc:	8f 70       	andi	r24, 0x0F	; 15
    14de:	e8 0e       	add	r14, r24
    14e0:	80 ea       	ldi	r24, 0xA0	; 160
    14e2:	61 e8       	ldi	r22, 0x81	; 129
    14e4:	70 e0       	ldi	r23, 0x00	; 0
    14e6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    14ea:	82 95       	swap	r24
    14ec:	8f 70       	andi	r24, 0x0F	; 15
    14ee:	e8 0e       	add	r14, r24
    14f0:	80 ea       	ldi	r24, 0xA0	; 160
    14f2:	62 e8       	ldi	r22, 0x82	; 130
    14f4:	70 e0       	ldi	r23, 0x00	; 0
    14f6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    14fa:	8f 70       	andi	r24, 0x0F	; 15
    14fc:	e8 0e       	add	r14, r24
    14fe:	80 ea       	ldi	r24, 0xA0	; 160
    1500:	62 e8       	ldi	r22, 0x82	; 130
    1502:	70 e0       	ldi	r23, 0x00	; 0
    1504:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1508:	82 95       	swap	r24
    150a:	8f 70       	andi	r24, 0x0F	; 15
    150c:	e8 0e       	add	r14, r24
    150e:	80 ea       	ldi	r24, 0xA0	; 160
    1510:	63 e8       	ldi	r22, 0x83	; 131
    1512:	70 e0       	ldi	r23, 0x00	; 0
    1514:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1518:	8f 70       	andi	r24, 0x0F	; 15
    151a:	e8 0e       	add	r14, r24
    151c:	80 ea       	ldi	r24, 0xA0	; 160
    151e:	63 e8       	ldi	r22, 0x83	; 131
    1520:	70 e0       	ldi	r23, 0x00	; 0
    1522:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1526:	82 95       	swap	r24
    1528:	8f 70       	andi	r24, 0x0F	; 15
    152a:	e8 0e       	add	r14, r24
	
	if (!voting_on)
    152c:	80 91 11 06 	lds	r24, 0x0611
    1530:	85 fd       	sbrc	r24, 5
    1532:	2c c0       	rjmp	.+88     	; 0x158c <vote_registration+0x2dc>
	{
		no_of_votes_cat1 = i2c_read_byte(EEPROM_DEV_ADDR, catg1_votes);		// Here no. of votes a voter can cast for a particular category are loaded into variables no_of_votes_catx
    1534:	80 ea       	ldi	r24, 0xA0	; 160
    1536:	68 e8       	ldi	r22, 0x88	; 136
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    153e:	b8 2e       	mov	r11, r24
		no_of_votes_cat2 = i2c_read_byte(EEPROM_DEV_ADDR, catg2_votes);		
    1540:	80 ea       	ldi	r24, 0xA0	; 160
    1542:	69 e8       	ldi	r22, 0x89	; 137
    1544:	70 e0       	ldi	r23, 0x00	; 0
    1546:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    154a:	c8 2e       	mov	r12, r24
		no_of_votes_cat3 = i2c_read_byte(EEPROM_DEV_ADDR, catg3_votes);
    154c:	80 ea       	ldi	r24, 0xA0	; 160
    154e:	6a e8       	ldi	r22, 0x8A	; 138
    1550:	70 e0       	ldi	r23, 0x00	; 0
    1552:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1556:	f8 2e       	mov	r15, r24
		no_of_votes_cat4 = i2c_read_byte(EEPROM_DEV_ADDR, catg4_votes);
    1558:	80 ea       	ldi	r24, 0xA0	; 160
    155a:	6b e8       	ldi	r22, 0x8B	; 139
    155c:	70 e0       	ldi	r23, 0x00	; 0
    155e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1562:	28 2e       	mov	r2, r24
		no_of_votes_cat5 = i2c_read_byte(EEPROM_DEV_ADDR, catg5_votes);
    1564:	80 ea       	ldi	r24, 0xA0	; 160
    1566:	6c e8       	ldi	r22, 0x8C	; 140
    1568:	70 e0       	ldi	r23, 0x00	; 0
    156a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    156e:	38 2e       	mov	r3, r24
		no_of_votes_cat6 = i2c_read_byte(EEPROM_DEV_ADDR, catg6_votes);
    1570:	80 ea       	ldi	r24, 0xA0	; 160
    1572:	6d e8       	ldi	r22, 0x8D	; 141
    1574:	70 e0       	ldi	r23, 0x00	; 0
    1576:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    157a:	18 2f       	mov	r17, r24
		no_of_votes_cat7 = i2c_read_byte(EEPROM_DEV_ADDR, catg7_votes);
    157c:	80 ea       	ldi	r24, 0xA0	; 160
    157e:	6e e8       	ldi	r22, 0x8E	; 142
    1580:	70 e0       	ldi	r23, 0x00	; 0
    1582:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    1586:	08 2f       	mov	r16, r24
    1588:	0c 94 cf 2f 	jmp	0x5f9e	; 0x5f9e <__stack+0x3d9f>
		//no_of_votes_cat8 = i2c_read_byte(EEPROM_DEV_ADDR, catg8_votes);
	}
	else if (voting_on)
    158c:	80 91 11 06 	lds	r24, 0x0611
    1590:	85 fd       	sbrc	r24, 5
    1592:	02 c0       	rjmp	.+4      	; 0x1598 <vote_registration+0x2e8>
    1594:	0c 94 cf 2f 	jmp	0x5f9e	; 0x5f9e <__stack+0x3d9f>
			{
				no_of_votes_cat1 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_1_bkp);		// Here no. of votes remaining ina particular category from the previous session is loaded
    1598:	80 ea       	ldi	r24, 0xA0	; 160
    159a:	65 ea       	ldi	r22, 0xA5	; 165
    159c:	70 e0       	ldi	r23, 0x00	; 0
    159e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    15a2:	b8 2e       	mov	r11, r24
				no_of_votes_cat2 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_2_bkp);		
    15a4:	80 ea       	ldi	r24, 0xA0	; 160
    15a6:	66 ea       	ldi	r22, 0xA6	; 166
    15a8:	70 e0       	ldi	r23, 0x00	; 0
    15aa:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    15ae:	c8 2e       	mov	r12, r24
				no_of_votes_cat3 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_3_bkp);
    15b0:	80 ea       	ldi	r24, 0xA0	; 160
    15b2:	67 ea       	ldi	r22, 0xA7	; 167
    15b4:	70 e0       	ldi	r23, 0x00	; 0
    15b6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    15ba:	f8 2e       	mov	r15, r24
				no_of_votes_cat4 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_4_bkp);
    15bc:	80 ea       	ldi	r24, 0xA0	; 160
    15be:	68 ea       	ldi	r22, 0xA8	; 168
    15c0:	70 e0       	ldi	r23, 0x00	; 0
    15c2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    15c6:	28 2e       	mov	r2, r24
				no_of_votes_cat5 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_5_bkp);
    15c8:	80 ea       	ldi	r24, 0xA0	; 160
    15ca:	69 ea       	ldi	r22, 0xA9	; 169
    15cc:	70 e0       	ldi	r23, 0x00	; 0
    15ce:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    15d2:	38 2e       	mov	r3, r24
				no_of_votes_cat6 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_6_bkp);
    15d4:	80 ea       	ldi	r24, 0xA0	; 160
    15d6:	6a ea       	ldi	r22, 0xAA	; 170
    15d8:	70 e0       	ldi	r23, 0x00	; 0
    15da:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    15de:	18 2f       	mov	r17, r24
				no_of_votes_cat7 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_7_bkp);
    15e0:	80 ea       	ldi	r24, 0xA0	; 160
    15e2:	6b ea       	ldi	r22, 0xAB	; 171
    15e4:	70 e0       	ldi	r23, 0x00	; 0
    15e6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    15ea:	08 2f       	mov	r16, r24
				//no_of_votes_cat8 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_8_bkp);
				
				light_leds();
    15ec:	0e 94 d7 05 	call	0xbae	; 0xbae <light_leds>
    15f0:	0c 94 cf 2f 	jmp	0x5f9e	; 0x5f9e <__stack+0x3d9f>
			}
	
	while(votes_counter >= 0)				// The program stays in this loop until the voter has cast all of his/her votes or until INIT is pressed.
	{	
		if(cod_typ == 'B')
			i2c_write_2_bytes(EEPROM_DEV_ADDR, voters_voted, voter_count);	// Store the Count of no. of voters in EEPROM.
    15f4:	40 91 5c 08 	lds	r20, 0x085C
    15f8:	50 91 5d 08 	lds	r21, 0x085D
    15fc:	80 ea       	ldi	r24, 0xA0	; 160
    15fe:	68 e9       	ldi	r22, 0x98	; 152
    1600:	70 e0       	ldi	r23, 0x00	; 0
    1602:	0e 94 59 04 	call	0x8b2	; 0x8b2 <i2c_write_2_bytes>
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, vote_indic_1_8, myregister1);		// backup the vote_indicators
    1606:	40 91 63 05 	lds	r20, 0x0563
    160a:	80 ea       	ldi	r24, 0xA0	; 160
    160c:	6d e9       	ldi	r22, 0x9D	; 157
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, vote_indic_9_16, myregister2);
    1614:	40 91 47 06 	lds	r20, 0x0647
    1618:	80 ea       	ldi	r24, 0xA0	; 160
    161a:	6e e9       	ldi	r22, 0x9E	; 158
    161c:	70 e0       	ldi	r23, 0x00	; 0
    161e:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, vote_indic_17_24, myregister3);
    1622:	40 91 0d 06 	lds	r20, 0x060D
    1626:	80 ea       	ldi	r24, 0xA0	; 160
    1628:	6f e9       	ldi	r22, 0x9F	; 159
    162a:	70 e0       	ldi	r23, 0x00	; 0
    162c:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, vote_indic_25_32, myregister4);
    1630:	40 91 60 05 	lds	r20, 0x0560
    1634:	80 ea       	ldi	r24, 0xA0	; 160
    1636:	60 ea       	ldi	r22, 0xA0	; 160
    1638:	70 e0       	ldi	r23, 0x00	; 0
    163a:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, vote_indic_33_40, myregister5);
    163e:	40 91 c8 08 	lds	r20, 0x08C8
    1642:	80 ea       	ldi	r24, 0xA0	; 160
    1644:	61 ea       	ldi	r22, 0xA1	; 161
    1646:	70 e0       	ldi	r23, 0x00	; 0
    1648:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, vote_indic_41_48, myregister6);
    164c:	40 91 ca 08 	lds	r20, 0x08CA
    1650:	80 ea       	ldi	r24, 0xA0	; 160
    1652:	62 ea       	ldi	r22, 0xA2	; 162
    1654:	70 e0       	ldi	r23, 0x00	; 0
    1656:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, vote_indic_49_56, myregister7);
    165a:	40 91 67 05 	lds	r20, 0x0567
    165e:	80 ea       	ldi	r24, 0xA0	; 160
    1660:	63 ea       	ldi	r22, 0xA3	; 163
    1662:	70 e0       	ldi	r23, 0x00	; 0
    1664:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, vote_indic_57_64, myregister8);
    1668:	40 91 54 08 	lds	r20, 0x0854
    166c:	80 ea       	ldi	r24, 0xA0	; 160
    166e:	64 ea       	ldi	r22, 0xA4	; 164
    1670:	70 e0       	ldi	r23, 0x00	; 0
    1672:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, no_votes_1_bkp, no_of_votes_cat1);
    1676:	80 ea       	ldi	r24, 0xA0	; 160
    1678:	65 ea       	ldi	r22, 0xA5	; 165
    167a:	70 e0       	ldi	r23, 0x00	; 0
    167c:	4b 2d       	mov	r20, r11
    167e:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, no_votes_2_bkp, no_of_votes_cat2);
    1682:	80 ea       	ldi	r24, 0xA0	; 160
    1684:	66 ea       	ldi	r22, 0xA6	; 166
    1686:	70 e0       	ldi	r23, 0x00	; 0
    1688:	4c 2d       	mov	r20, r12
    168a:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, no_votes_3_bkp, no_of_votes_cat3);
    168e:	80 ea       	ldi	r24, 0xA0	; 160
    1690:	67 ea       	ldi	r22, 0xA7	; 167
    1692:	70 e0       	ldi	r23, 0x00	; 0
    1694:	4f 2d       	mov	r20, r15
    1696:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, no_votes_4_bkp, no_of_votes_cat4);
    169a:	80 ea       	ldi	r24, 0xA0	; 160
    169c:	68 ea       	ldi	r22, 0xA8	; 168
    169e:	70 e0       	ldi	r23, 0x00	; 0
    16a0:	42 2d       	mov	r20, r2
    16a2:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, no_votes_5_bkp, no_of_votes_cat5);
    16a6:	80 ea       	ldi	r24, 0xA0	; 160
    16a8:	69 ea       	ldi	r22, 0xA9	; 169
    16aa:	70 e0       	ldi	r23, 0x00	; 0
    16ac:	43 2d       	mov	r20, r3
    16ae:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, no_votes_6_bkp, no_of_votes_cat6);
    16b2:	80 ea       	ldi	r24, 0xA0	; 160
    16b4:	6a ea       	ldi	r22, 0xAA	; 170
    16b6:	70 e0       	ldi	r23, 0x00	; 0
    16b8:	41 2f       	mov	r20, r17
    16ba:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, no_votes_7_bkp, no_of_votes_cat7);
    16be:	80 ea       	ldi	r24, 0xA0	; 160
    16c0:	6b ea       	ldi	r22, 0xAB	; 171
    16c2:	70 e0       	ldi	r23, 0x00	; 0
    16c4:	40 2f       	mov	r20, r16
    16c6:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		//eeprom_write_i2c(EEPROM_DEV_ADDR, no_votes_8_bkp, no_of_votes_cat8);
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, gen_vote_count_bkp, gen_vote_count);
    16ca:	40 91 48 08 	lds	r20, 0x0848
    16ce:	80 ea       	ldi	r24, 0xA0	; 160
    16d0:	6e ea       	ldi	r22, 0xAE	; 174
    16d2:	70 e0       	ldi	r23, 0x00	; 0
    16d4:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR, votes_count_bkp, votes_counter);
    16d8:	40 91 ff 05 	lds	r20, 0x05FF
    16dc:	80 ea       	ldi	r24, 0xA0	; 160
    16de:	6d ea       	ldi	r22, 0xAD	; 173
    16e0:	70 e0       	ldi	r23, 0x00	; 0
    16e2:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		eeprom_write_i2c(EEPROM_DEV_ADDR,elem_count_bkp,elem_count);
    16e6:	80 ea       	ldi	r24, 0xA0	; 160
    16e8:	60 eb       	ldi	r22, 0xB0	; 176
    16ea:	70 e0       	ldi	r23, 0x00	; 0
    16ec:	40 91 52 08 	lds	r20, 0x0852
    16f0:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, flag_register_bkp, flag_register);
    16f4:	40 91 11 06 	lds	r20, 0x0611
    16f8:	80 ea       	ldi	r24, 0xA0	; 160
    16fa:	6f ea       	ldi	r22, 0xAF	; 175
    16fc:	70 e0       	ldi	r23, 0x00	; 0
    16fe:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		//USART_Transmit_dec(gen_vote_count);
		//USART_SendByte(0x0D);
		
/*******************************************************************************************************************/	
			
		lcd_cmd(0x01);						
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_data_str("Votes remaining:");		//	Display the no. of votes remaining for that voter
    1708:	87 e4       	ldi	r24, 0x47	; 71
    170a:	92 e0       	ldi	r25, 0x02	; 2
    170c:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
		lcd_cmd(0xC0);
    1710:	80 ec       	ldi	r24, 0xC0	; 192
    1712:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_data_int(votes_counter);
    1716:	80 91 ff 05 	lds	r24, 0x05FF
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 94 4a 03 	call	0x694	; 0x694 <lcd_data_int>
		
		LED = 1;				// LED off
    1720:	a0 9a       	sbi	0x14, 0	; 20
		Buzzer = 0;				// Buzzer off
    1722:	a1 98       	cbi	0x14, 1	; 20
		
			/*******************************************************  added by neeraj on 08/12/15   ***********************************************************************/
			if(votes_counter == 0)
    1724:	80 91 ff 05 	lds	r24, 0x05FF
    1728:	88 23       	and	r24, r24
    172a:	71 f5       	brne	.+92     	; 0x1788 <vote_registration+0x4d8>
			{
				while ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && (INIT == 1)); // Wait while no button is pressed //
    172c:	e9 e0       	ldi	r30, 0x09	; 9
    172e:	f1 e0       	ldi	r31, 0x01	; 1
    1730:	86 b1       	in	r24, 0x06	; 6
    1732:	80 fd       	sbrc	r24, 0
    1734:	0c c0       	rjmp	.+24     	; 0x174e <vote_registration+0x49e>
    1736:	86 b1       	in	r24, 0x06	; 6
    1738:	81 fd       	sbrc	r24, 1
    173a:	09 c0       	rjmp	.+18     	; 0x174e <vote_registration+0x49e>
    173c:	86 b1       	in	r24, 0x06	; 6
    173e:	82 fd       	sbrc	r24, 2
    1740:	06 c0       	rjmp	.+12     	; 0x174e <vote_registration+0x49e>
    1742:	86 b1       	in	r24, 0x06	; 6
    1744:	83 fd       	sbrc	r24, 3
    1746:	03 c0       	rjmp	.+6      	; 0x174e <vote_registration+0x49e>
    1748:	80 81       	ld	r24, Z
    174a:	81 fd       	sbrc	r24, 1
    174c:	f1 cf       	rjmp	.-30     	; 0x1730 <vote_registration+0x480>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    174e:	8f ef       	ldi	r24, 0xFF	; 255
    1750:	9f e9       	ldi	r25, 0x9F	; 159
    1752:	a5 e0       	ldi	r26, 0x05	; 5
    1754:	81 50       	subi	r24, 0x01	; 1
    1756:	90 40       	sbci	r25, 0x00	; 0
    1758:	a0 40       	sbci	r26, 0x00	; 0
    175a:	e1 f7       	brne	.-8      	; 0x1754 <vote_registration+0x4a4>
    175c:	00 c0       	rjmp	.+0      	; 0x175e <vote_registration+0x4ae>
    175e:	00 00       	nop
				_delay_ms(100);
				if(INIT == 0)
    1760:	80 91 09 01 	lds	r24, 0x0109
    1764:	81 fd       	sbrc	r24, 1
    1766:	10 c0       	rjmp	.+32     	; 0x1788 <vote_registration+0x4d8>
				{
					while(INIT == 0);
    1768:	e9 e0       	ldi	r30, 0x09	; 9
    176a:	f1 e0       	ldi	r31, 0x01	; 1
    176c:	80 81       	ld	r24, Z
    176e:	81 ff       	sbrs	r24, 1
    1770:	fd cf       	rjmp	.-6      	; 0x176c <vote_registration+0x4bc>
					i2c_send_byte(PIC_DEV_ADDR, 0);		// Clear the LED's
    1772:	80 e8       	ldi	r24, 0x80	; 128
    1774:	60 e0       	ldi	r22, 0x00	; 0
    1776:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
					votes_counter=0;
    177a:	10 92 ff 05 	sts	0x05FF, r1
					vote_cast=1;
    177e:	81 e0       	ldi	r24, 0x01	; 1
    1780:	80 93 07 06 	sts	0x0607, r24
					return;
    1784:	0c 94 d9 2f 	jmp	0x5fb2	; 0x5fb2 <__stack+0x3db3>
				}
			}
			/*******************************************************  added by neeraj on 08/12/15   ***********************************************************************/
			
			if(votes_counter > 0)             // added by neeraj on 08/12/2015
    1788:	80 91 ff 05 	lds	r24, 0x05FF
    178c:	88 23       	and	r24, r24
    178e:	11 f4       	brne	.+4      	; 0x1794 <vote_registration+0x4e4>
    1790:	0c 94 cf 2f 	jmp	0x5f9e	; 0x5f9e <__stack+0x3d9f>
			{	
		
		while ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && (INIT == 1)); // Wait while no button is pressed //
    1794:	e9 e0       	ldi	r30, 0x09	; 9
    1796:	f1 e0       	ldi	r31, 0x01	; 1
    1798:	86 b1       	in	r24, 0x06	; 6
    179a:	80 fd       	sbrc	r24, 0
    179c:	0c c0       	rjmp	.+24     	; 0x17b6 <vote_registration+0x506>
    179e:	86 b1       	in	r24, 0x06	; 6
    17a0:	81 fd       	sbrc	r24, 1
    17a2:	09 c0       	rjmp	.+18     	; 0x17b6 <vote_registration+0x506>
    17a4:	86 b1       	in	r24, 0x06	; 6
    17a6:	82 fd       	sbrc	r24, 2
    17a8:	06 c0       	rjmp	.+12     	; 0x17b6 <vote_registration+0x506>
    17aa:	86 b1       	in	r24, 0x06	; 6
    17ac:	83 fd       	sbrc	r24, 3
    17ae:	03 c0       	rjmp	.+6      	; 0x17b6 <vote_registration+0x506>
    17b0:	80 81       	ld	r24, Z
    17b2:	81 fd       	sbrc	r24, 1
    17b4:	f1 cf       	rjmp	.-30     	; 0x1798 <vote_registration+0x4e8>
    17b6:	8f ef       	ldi	r24, 0xFF	; 255
    17b8:	9f e9       	ldi	r25, 0x9F	; 159
    17ba:	a5 e0       	ldi	r26, 0x05	; 5
    17bc:	81 50       	subi	r24, 0x01	; 1
    17be:	90 40       	sbci	r25, 0x00	; 0
    17c0:	a0 40       	sbci	r26, 0x00	; 0
    17c2:	e1 f7       	brne	.-8      	; 0x17bc <vote_registration+0x50c>
    17c4:	00 c0       	rjmp	.+0      	; 0x17c6 <vote_registration+0x516>
    17c6:	00 00       	nop
		_delay_ms(100);		// To press bouncing button effect, false press.
		
		// Note PINB is where button data appears.
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x00) && (1 <= candidate_count) && (vote_indicator_1 == 0))		// Checking if button falls in the number of candidates selected when configuring the machine.
    17c8:	86 b1       	in	r24, 0x06	; 6
    17ca:	80 ff       	sbrs	r24, 0
    17cc:	41 c0       	rjmp	.+130    	; 0x1850 <vote_registration+0x5a0>
    17ce:	86 b1       	in	r24, 0x06	; 6
    17d0:	81 fd       	sbrc	r24, 1
    17d2:	3e c0       	rjmp	.+124    	; 0x1850 <vote_registration+0x5a0>
    17d4:	86 b1       	in	r24, 0x06	; 6
    17d6:	82 fd       	sbrc	r24, 2
    17d8:	3b c0       	rjmp	.+118    	; 0x1850 <vote_registration+0x5a0>
    17da:	86 b1       	in	r24, 0x06	; 6
    17dc:	83 fd       	sbrc	r24, 3
    17de:	38 c0       	rjmp	.+112    	; 0x1850 <vote_registration+0x5a0>
    17e0:	83 b1       	in	r24, 0x03	; 3
    17e2:	90 e0       	ldi	r25, 0x00	; 0
    17e4:	8f 70       	andi	r24, 0x0F	; 15
    17e6:	90 70       	andi	r25, 0x00	; 0
    17e8:	00 97       	sbiw	r24, 0x00	; 0
    17ea:	91 f5       	brne	.+100    	; 0x1850 <vote_registration+0x5a0>
    17ec:	80 91 f6 05 	lds	r24, 0x05F6
    17f0:	88 23       	and	r24, r24
    17f2:	71 f1       	breq	.+92     	; 0x1850 <vote_registration+0x5a0>
    17f4:	80 91 63 05 	lds	r24, 0x0563
    17f8:	80 fd       	sbrc	r24, 0
    17fa:	2a c0       	rjmp	.+84     	; 0x1850 <vote_registration+0x5a0>
		{																										// Also checking if button was previously pressed by the voter when allowed to cast multiple votes.
			if((1 <= category_size_1) && (no_of_votes_cat1 != 0x00))				//
    17fc:	99 81       	ldd	r25, Y+1	; 0x01
    17fe:	99 23       	and	r25, r25
    1800:	71 f0       	breq	.+28     	; 0x181e <vote_registration+0x56e>
    1802:	bb 20       	and	r11, r11
    1804:	61 f0       	breq	.+24     	; 0x181e <vote_registration+0x56e>
			{
				//USART_putstring("1C1 ");			// comment this out in final product
				vote_indicator_1 = 1;				// Indicating button 1 was pressed
    1806:	80 91 63 05 	lds	r24, 0x0563
    180a:	81 60       	ori	r24, 0x01	; 1
    180c:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button1_addr, 1);
    1810:	80 e0       	ldi	r24, 0x00	; 0
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	61 e0       	ldi	r22, 0x01	; 1
    1816:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 1);
				no_of_votes_cat1--;
    181a:	ba 94       	dec	r11
    181c:	19 c0       	rjmp	.+50     	; 0x1850 <vote_registration+0x5a0>
			}
			else if((1 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    181e:	80 91 64 05 	lds	r24, 0x0564
    1822:	90 91 65 05 	lds	r25, 0x0565
    1826:	00 97       	sbiw	r24, 0x00	; 0
    1828:	99 f4       	brne	.+38     	; 0x1850 <vote_registration+0x5a0>
    182a:	80 91 48 08 	lds	r24, 0x0848
    182e:	88 23       	and	r24, r24
    1830:	79 f0       	breq	.+30     	; 0x1850 <vote_registration+0x5a0>
			{
				//USART_putstring("1G ");		// comment this out in final product
				vote_indicator_1 = 1;			// Indicating button 1 was pressed
    1832:	80 91 63 05 	lds	r24, 0x0563
    1836:	81 60       	ori	r24, 0x01	; 1
    1838:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button1_addr, 1);
    183c:	80 e0       	ldi	r24, 0x00	; 0
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	61 e0       	ldi	r22, 0x01	; 1
    1842:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 1);
				gen_vote_count--;
    1846:	80 91 48 08 	lds	r24, 0x0848
    184a:	81 50       	subi	r24, 0x01	; 1
    184c:	80 93 48 08 	sts	0x0848, r24
			}	
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x01) && (2 <= candidate_count) && vote_indicator_2 == 0)
    1850:	86 b1       	in	r24, 0x06	; 6
    1852:	80 ff       	sbrs	r24, 0
    1854:	53 c0       	rjmp	.+166    	; 0x18fc <vote_registration+0x64c>
    1856:	86 b1       	in	r24, 0x06	; 6
    1858:	81 fd       	sbrc	r24, 1
    185a:	50 c0       	rjmp	.+160    	; 0x18fc <vote_registration+0x64c>
    185c:	86 b1       	in	r24, 0x06	; 6
    185e:	82 fd       	sbrc	r24, 2
    1860:	4d c0       	rjmp	.+154    	; 0x18fc <vote_registration+0x64c>
    1862:	86 b1       	in	r24, 0x06	; 6
    1864:	83 fd       	sbrc	r24, 3
    1866:	4a c0       	rjmp	.+148    	; 0x18fc <vote_registration+0x64c>
    1868:	83 b1       	in	r24, 0x03	; 3
    186a:	8f 70       	andi	r24, 0x0F	; 15
    186c:	81 30       	cpi	r24, 0x01	; 1
    186e:	09 f0       	breq	.+2      	; 0x1872 <vote_registration+0x5c2>
    1870:	45 c0       	rjmp	.+138    	; 0x18fc <vote_registration+0x64c>
    1872:	80 91 f6 05 	lds	r24, 0x05F6
    1876:	82 30       	cpi	r24, 0x02	; 2
    1878:	08 f4       	brcc	.+2      	; 0x187c <vote_registration+0x5cc>
    187a:	40 c0       	rjmp	.+128    	; 0x18fc <vote_registration+0x64c>
    187c:	80 91 63 05 	lds	r24, 0x0563
    1880:	81 fd       	sbrc	r24, 1
    1882:	3c c0       	rjmp	.+120    	; 0x18fc <vote_registration+0x64c>
		{
			if((2 <= category_size_1) && (no_of_votes_cat1 != 0x00))				//
    1884:	a9 81       	ldd	r26, Y+1	; 0x01
    1886:	a2 30       	cpi	r26, 0x02	; 2
    1888:	70 f0       	brcs	.+28     	; 0x18a6 <vote_registration+0x5f6>
    188a:	bb 20       	and	r11, r11
    188c:	e9 f0       	breq	.+58     	; 0x18c8 <vote_registration+0x618>
			{
				//USART_putstring("2C1 ");				// comment this out in final product
				vote_indicator_2 = 1; 					// Indicating button 1 was pressed
    188e:	80 91 63 05 	lds	r24, 0x0563
    1892:	82 60       	ori	r24, 0x02	; 2
    1894:	80 93 63 05 	sts	0x0563, r24
				no_of_votes_cat1--;
    1898:	ba 94       	dec	r11
				//i2c_send_byte(PIC_DEV_ADDR, 0x02);
				deactivate_category_buttons_and_save(button2_addr, 2);  // provide starting and ending buttons as arguments
    189a:	82 e0       	ldi	r24, 0x02	; 2
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	62 e0       	ldi	r22, 0x02	; 2
    18a0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    18a4:	2b c0       	rjmp	.+86     	; 0x18fc <vote_registration+0x64c>
			}
			else if((2 > category_size_1) && (2 <= category_size_2) && (no_of_votes_cat2 != 0))	// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    18a6:	b1 e0       	ldi	r27, 0x01	; 1
    18a8:	b5 15       	cp	r27, r5
    18aa:	70 f4       	brcc	.+28     	; 0x18c8 <vote_registration+0x618>
    18ac:	cc 20       	and	r12, r12
    18ae:	61 f0       	breq	.+24     	; 0x18c8 <vote_registration+0x618>
			{
				//USART_putstring("2C2 ");
				vote_indicator_2 = 1;				// Indicating button 2 was pressed.
    18b0:	80 91 63 05 	lds	r24, 0x0563
    18b4:	82 60       	ori	r24, 0x02	; 2
    18b6:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button2_addr, 2);
    18ba:	82 e0       	ldi	r24, 0x02	; 2
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	62 e0       	ldi	r22, 0x02	; 2
    18c0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x02);
				no_of_votes_cat2--;
    18c4:	ca 94       	dec	r12
    18c6:	1a c0       	rjmp	.+52     	; 0x18fc <vote_registration+0x64c>
			}
			else if ((2 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    18c8:	80 91 64 05 	lds	r24, 0x0564
    18cc:	90 91 65 05 	lds	r25, 0x0565
    18d0:	82 30       	cpi	r24, 0x02	; 2
    18d2:	91 05       	cpc	r25, r1
    18d4:	98 f4       	brcc	.+38     	; 0x18fc <vote_registration+0x64c>
    18d6:	80 91 48 08 	lds	r24, 0x0848
    18da:	88 23       	and	r24, r24
    18dc:	79 f0       	breq	.+30     	; 0x18fc <vote_registration+0x64c>
			{
				//USART_putstring("2G ");		// comment this out in final product
				vote_indicator_2 = 1;			// Indicating button 1 was pressed
    18de:	80 91 63 05 	lds	r24, 0x0563
    18e2:	82 60       	ori	r24, 0x02	; 2
    18e4:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button2_addr, 2);
    18e8:	82 e0       	ldi	r24, 0x02	; 2
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	62 e0       	ldi	r22, 0x02	; 2
    18ee:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x02);
				gen_vote_count--;
    18f2:	80 91 48 08 	lds	r24, 0x0848
    18f6:	81 50       	subi	r24, 0x01	; 1
    18f8:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x02) && (3 <= candidate_count) && vote_indicator_3==0)
    18fc:	86 b1       	in	r24, 0x06	; 6
    18fe:	80 ff       	sbrs	r24, 0
    1900:	53 c0       	rjmp	.+166    	; 0x19a8 <vote_registration+0x6f8>
    1902:	86 b1       	in	r24, 0x06	; 6
    1904:	81 fd       	sbrc	r24, 1
    1906:	50 c0       	rjmp	.+160    	; 0x19a8 <vote_registration+0x6f8>
    1908:	86 b1       	in	r24, 0x06	; 6
    190a:	82 fd       	sbrc	r24, 2
    190c:	4d c0       	rjmp	.+154    	; 0x19a8 <vote_registration+0x6f8>
    190e:	86 b1       	in	r24, 0x06	; 6
    1910:	83 fd       	sbrc	r24, 3
    1912:	4a c0       	rjmp	.+148    	; 0x19a8 <vote_registration+0x6f8>
    1914:	83 b1       	in	r24, 0x03	; 3
    1916:	8f 70       	andi	r24, 0x0F	; 15
    1918:	82 30       	cpi	r24, 0x02	; 2
    191a:	09 f0       	breq	.+2      	; 0x191e <vote_registration+0x66e>
    191c:	45 c0       	rjmp	.+138    	; 0x19a8 <vote_registration+0x6f8>
    191e:	80 91 f6 05 	lds	r24, 0x05F6
    1922:	83 30       	cpi	r24, 0x03	; 3
    1924:	08 f4       	brcc	.+2      	; 0x1928 <vote_registration+0x678>
    1926:	40 c0       	rjmp	.+128    	; 0x19a8 <vote_registration+0x6f8>
    1928:	80 91 63 05 	lds	r24, 0x0563
    192c:	82 fd       	sbrc	r24, 2
    192e:	3c c0       	rjmp	.+120    	; 0x19a8 <vote_registration+0x6f8>
		{
			if((3 <= category_size_1)	&& (no_of_votes_cat1 != 0x00))				//
    1930:	e9 81       	ldd	r30, Y+1	; 0x01
    1932:	e3 30       	cpi	r30, 0x03	; 3
    1934:	70 f0       	brcs	.+28     	; 0x1952 <vote_registration+0x6a2>
    1936:	bb 20       	and	r11, r11
    1938:	e9 f0       	breq	.+58     	; 0x1974 <vote_registration+0x6c4>
			{
				//USART_putstring("3C1 ");
				vote_indicator_3 = 1;				// Indicating button 3 was pressed.
    193a:	80 91 63 05 	lds	r24, 0x0563
    193e:	84 60       	ori	r24, 0x04	; 4
    1940:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button3_addr, 3);			// provide starting and ending buttons as arguments
    1944:	84 e0       	ldi	r24, 0x04	; 4
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	63 e0       	ldi	r22, 0x03	; 3
    194a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x03);
				no_of_votes_cat1--;
    194e:	ba 94       	dec	r11
    1950:	2b c0       	rjmp	.+86     	; 0x19a8 <vote_registration+0x6f8>
			}
			else if((3 > category_size_1) && (3 <= category_size_2) && (no_of_votes_cat2 != 0))	// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    1952:	f2 e0       	ldi	r31, 0x02	; 2
    1954:	f5 15       	cp	r31, r5
    1956:	70 f4       	brcc	.+28     	; 0x1974 <vote_registration+0x6c4>
    1958:	cc 20       	and	r12, r12
    195a:	61 f0       	breq	.+24     	; 0x1974 <vote_registration+0x6c4>
			{
				//USART_putstring("3C2 ");
				vote_indicator_3 = 1;				// Indicating button 3 was pressed.
    195c:	80 91 63 05 	lds	r24, 0x0563
    1960:	84 60       	ori	r24, 0x04	; 4
    1962:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button3_addr, 3);
    1966:	84 e0       	ldi	r24, 0x04	; 4
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	63 e0       	ldi	r22, 0x03	; 3
    196c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x03);
				no_of_votes_cat2--;
    1970:	ca 94       	dec	r12
    1972:	1a c0       	rjmp	.+52     	; 0x19a8 <vote_registration+0x6f8>
			}
			else if ((3 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    1974:	80 91 64 05 	lds	r24, 0x0564
    1978:	90 91 65 05 	lds	r25, 0x0565
    197c:	83 30       	cpi	r24, 0x03	; 3
    197e:	91 05       	cpc	r25, r1
    1980:	98 f4       	brcc	.+38     	; 0x19a8 <vote_registration+0x6f8>
    1982:	80 91 48 08 	lds	r24, 0x0848
    1986:	88 23       	and	r24, r24
    1988:	79 f0       	breq	.+30     	; 0x19a8 <vote_registration+0x6f8>
			{
				//USART_putstring("3G ");		// comment this out in final product
				vote_indicator_3 = 1;			// Indicating button 1 was pressed
    198a:	80 91 63 05 	lds	r24, 0x0563
    198e:	84 60       	ori	r24, 0x04	; 4
    1990:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button3_addr, 3);
    1994:	84 e0       	ldi	r24, 0x04	; 4
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	63 e0       	ldi	r22, 0x03	; 3
    199a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x03);
				gen_vote_count--;
    199e:	80 91 48 08 	lds	r24, 0x0848
    19a2:	81 50       	subi	r24, 0x01	; 1
    19a4:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x03) && (4 <= candidate_count) && vote_indicator_4 == 0)
    19a8:	86 b1       	in	r24, 0x06	; 6
    19aa:	80 ff       	sbrs	r24, 0
    19ac:	67 c0       	rjmp	.+206    	; 0x1a7c <vote_registration+0x7cc>
    19ae:	86 b1       	in	r24, 0x06	; 6
    19b0:	81 fd       	sbrc	r24, 1
    19b2:	64 c0       	rjmp	.+200    	; 0x1a7c <vote_registration+0x7cc>
    19b4:	86 b1       	in	r24, 0x06	; 6
    19b6:	82 fd       	sbrc	r24, 2
    19b8:	61 c0       	rjmp	.+194    	; 0x1a7c <vote_registration+0x7cc>
    19ba:	86 b1       	in	r24, 0x06	; 6
    19bc:	83 fd       	sbrc	r24, 3
    19be:	5e c0       	rjmp	.+188    	; 0x1a7c <vote_registration+0x7cc>
    19c0:	83 b1       	in	r24, 0x03	; 3
    19c2:	8f 70       	andi	r24, 0x0F	; 15
    19c4:	83 30       	cpi	r24, 0x03	; 3
    19c6:	09 f0       	breq	.+2      	; 0x19ca <vote_registration+0x71a>
    19c8:	59 c0       	rjmp	.+178    	; 0x1a7c <vote_registration+0x7cc>
    19ca:	80 91 f6 05 	lds	r24, 0x05F6
    19ce:	84 30       	cpi	r24, 0x04	; 4
    19d0:	08 f4       	brcc	.+2      	; 0x19d4 <vote_registration+0x724>
    19d2:	54 c0       	rjmp	.+168    	; 0x1a7c <vote_registration+0x7cc>
    19d4:	80 91 63 05 	lds	r24, 0x0563
    19d8:	83 fd       	sbrc	r24, 3
    19da:	50 c0       	rjmp	.+160    	; 0x1a7c <vote_registration+0x7cc>
		{
			if((4 <= category_size_1) && no_of_votes_cat1 != 0) 			//
    19dc:	89 81       	ldd	r24, Y+1	; 0x01
    19de:	84 30       	cpi	r24, 0x04	; 4
    19e0:	70 f0       	brcs	.+28     	; 0x19fe <vote_registration+0x74e>
    19e2:	bb 20       	and	r11, r11
    19e4:	e9 f0       	breq	.+58     	; 0x1a20 <vote_registration+0x770>
			{
				//USART_putstring("4C1 ");
				vote_indicator_4 = 1;			// Indicating button 3 was pressed.
    19e6:	80 91 63 05 	lds	r24, 0x0563
    19ea:	88 60       	ori	r24, 0x08	; 8
    19ec:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button4_addr, 4);  // provide starting and ending buttons as arguments
    19f0:	86 e0       	ldi	r24, 0x06	; 6
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	64 e0       	ldi	r22, 0x04	; 4
    19f6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x04);
				no_of_votes_cat1--;
    19fa:	ba 94       	dec	r11
    19fc:	3f c0       	rjmp	.+126    	; 0x1a7c <vote_registration+0x7cc>
			}
			
			else if((4 > category_size_1) && (4 <= category_size_2) && (no_of_votes_cat2 != 0))	// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    19fe:	93 e0       	ldi	r25, 0x03	; 3
    1a00:	95 15       	cp	r25, r5
    1a02:	88 f4       	brcc	.+34     	; 0x1a26 <vote_registration+0x776>
    1a04:	cc 20       	and	r12, r12
    1a06:	01 f1       	breq	.+64     	; 0x1a48 <vote_registration+0x798>
			{
				//USART_putstring("4C2 ");
				vote_indicator_4 = 1;			// Indicating button 3 was pressed.
    1a08:	80 91 63 05 	lds	r24, 0x0563
    1a0c:	88 60       	ori	r24, 0x08	; 8
    1a0e:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button4_addr, 4);
    1a12:	86 e0       	ldi	r24, 0x06	; 6
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	64 e0       	ldi	r22, 0x04	; 4
    1a18:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x04);
				no_of_votes_cat2--;
    1a1c:	ca 94       	dec	r12
    1a1e:	2e c0       	rjmp	.+92     	; 0x1a7c <vote_registration+0x7cc>
			}
			
			/// Added by Brendz on March 7th 2017. Btn 4 fell into category 3 and was not checked in any if Conditions
			else if((4 > category_size_2) && (4 <= category_size_3) && (no_of_votes_cat3 != 0))	// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    1a20:	a3 e0       	ldi	r26, 0x03	; 3
    1a22:	a5 15       	cp	r26, r5
    1a24:	88 f0       	brcs	.+34     	; 0x1a48 <vote_registration+0x798>
    1a26:	b3 e0       	ldi	r27, 0x03	; 3
    1a28:	b7 15       	cp	r27, r7
    1a2a:	70 f4       	brcc	.+28     	; 0x1a48 <vote_registration+0x798>
    1a2c:	ff 20       	and	r15, r15
    1a2e:	61 f0       	breq	.+24     	; 0x1a48 <vote_registration+0x798>
			{
				//USART_putstring("4C2 ");
				vote_indicator_4 = 1;			// Indicating button 3 was pressed.
    1a30:	80 91 63 05 	lds	r24, 0x0563
    1a34:	88 60       	ori	r24, 0x08	; 8
    1a36:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button4_addr, 4);
    1a3a:	86 e0       	ldi	r24, 0x06	; 6
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	64 e0       	ldi	r22, 0x04	; 4
    1a40:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x04);
				no_of_votes_cat3--;
    1a44:	fa 94       	dec	r15
    1a46:	1a c0       	rjmp	.+52     	; 0x1a7c <vote_registration+0x7cc>
			}
			else if ((4 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    1a48:	80 91 64 05 	lds	r24, 0x0564
    1a4c:	90 91 65 05 	lds	r25, 0x0565
    1a50:	84 30       	cpi	r24, 0x04	; 4
    1a52:	91 05       	cpc	r25, r1
    1a54:	98 f4       	brcc	.+38     	; 0x1a7c <vote_registration+0x7cc>
    1a56:	80 91 48 08 	lds	r24, 0x0848
    1a5a:	88 23       	and	r24, r24
    1a5c:	79 f0       	breq	.+30     	; 0x1a7c <vote_registration+0x7cc>
			{
				//USART_putstring("4G ");		// comment this out in final product
				vote_indicator_4 = 1;			// Indicating button 1 was pressed
    1a5e:	80 91 63 05 	lds	r24, 0x0563
    1a62:	88 60       	ori	r24, 0x08	; 8
    1a64:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button4_addr, 4);
    1a68:	86 e0       	ldi	r24, 0x06	; 6
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	64 e0       	ldi	r22, 0x04	; 4
    1a6e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x04);
				gen_vote_count--;
    1a72:	80 91 48 08 	lds	r24, 0x0848
    1a76:	81 50       	subi	r24, 0x01	; 1
    1a78:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x04) && (5 <= candidate_count) && vote_indicator_5==0)
    1a7c:	86 b1       	in	r24, 0x06	; 6
    1a7e:	80 ff       	sbrs	r24, 0
    1a80:	67 c0       	rjmp	.+206    	; 0x1b50 <vote_registration+0x8a0>
    1a82:	86 b1       	in	r24, 0x06	; 6
    1a84:	81 fd       	sbrc	r24, 1
    1a86:	64 c0       	rjmp	.+200    	; 0x1b50 <vote_registration+0x8a0>
    1a88:	86 b1       	in	r24, 0x06	; 6
    1a8a:	82 fd       	sbrc	r24, 2
    1a8c:	61 c0       	rjmp	.+194    	; 0x1b50 <vote_registration+0x8a0>
    1a8e:	86 b1       	in	r24, 0x06	; 6
    1a90:	83 fd       	sbrc	r24, 3
    1a92:	5e c0       	rjmp	.+188    	; 0x1b50 <vote_registration+0x8a0>
    1a94:	83 b1       	in	r24, 0x03	; 3
    1a96:	8f 70       	andi	r24, 0x0F	; 15
    1a98:	84 30       	cpi	r24, 0x04	; 4
    1a9a:	09 f0       	breq	.+2      	; 0x1a9e <vote_registration+0x7ee>
    1a9c:	59 c0       	rjmp	.+178    	; 0x1b50 <vote_registration+0x8a0>
    1a9e:	80 91 f6 05 	lds	r24, 0x05F6
    1aa2:	85 30       	cpi	r24, 0x05	; 5
    1aa4:	08 f4       	brcc	.+2      	; 0x1aa8 <vote_registration+0x7f8>
    1aa6:	54 c0       	rjmp	.+168    	; 0x1b50 <vote_registration+0x8a0>
    1aa8:	80 91 63 05 	lds	r24, 0x0563
    1aac:	84 fd       	sbrc	r24, 4
    1aae:	50 c0       	rjmp	.+160    	; 0x1b50 <vote_registration+0x8a0>
		{
			if((5 <= category_size_1) && (no_of_votes_cat1 != 0x00))	//
    1ab0:	e9 81       	ldd	r30, Y+1	; 0x01
    1ab2:	e5 30       	cpi	r30, 0x05	; 5
    1ab4:	70 f0       	brcs	.+28     	; 0x1ad2 <vote_registration+0x822>
    1ab6:	bb 20       	and	r11, r11
    1ab8:	e9 f0       	breq	.+58     	; 0x1af4 <vote_registration+0x844>
			{
				//USART_putstring("5C1 ");
				vote_indicator_5 = 1;							// Indicating button 5 was pressed.
    1aba:	80 91 63 05 	lds	r24, 0x0563
    1abe:	80 61       	ori	r24, 0x10	; 16
    1ac0:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button5_addr, 5);		// provide starting and ending buttons as arguments
    1ac4:	88 e0       	ldi	r24, 0x08	; 8
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	65 e0       	ldi	r22, 0x05	; 5
    1aca:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x05);
				no_of_votes_cat1--;
    1ace:	ba 94       	dec	r11
    1ad0:	3f c0       	rjmp	.+126    	; 0x1b50 <vote_registration+0x8a0>
			}
			else if((5 > category_size_1) && (5 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    1ad2:	f4 e0       	ldi	r31, 0x04	; 4
    1ad4:	f5 15       	cp	r31, r5
    1ad6:	88 f4       	brcc	.+34     	; 0x1afa <vote_registration+0x84a>
    1ad8:	cc 20       	and	r12, r12
    1ada:	01 f1       	breq	.+64     	; 0x1b1c <vote_registration+0x86c>
			{
				//USART_putstring("5C2 ");
				vote_indicator_5 = 1;	// Indicating button 5 was pressed.
    1adc:	80 91 63 05 	lds	r24, 0x0563
    1ae0:	80 61       	ori	r24, 0x10	; 16
    1ae2:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button5_addr, 5);
    1ae6:	88 e0       	ldi	r24, 0x08	; 8
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	65 e0       	ldi	r22, 0x05	; 5
    1aec:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x05);
				no_of_votes_cat2--;
    1af0:	ca 94       	dec	r12
    1af2:	2e c0       	rjmp	.+92     	; 0x1b50 <vote_registration+0x8a0>
			}
			else if((5 > category_size_2) && (5 <= category_size_3) && (no_of_votes_cat3 != 0))
    1af4:	84 e0       	ldi	r24, 0x04	; 4
    1af6:	85 15       	cp	r24, r5
    1af8:	88 f0       	brcs	.+34     	; 0x1b1c <vote_registration+0x86c>
    1afa:	94 e0       	ldi	r25, 0x04	; 4
    1afc:	97 15       	cp	r25, r7
    1afe:	70 f4       	brcc	.+28     	; 0x1b1c <vote_registration+0x86c>
    1b00:	ff 20       	and	r15, r15
    1b02:	61 f0       	breq	.+24     	; 0x1b1c <vote_registration+0x86c>
			{
				//USART_putstring("5C3 ");
				vote_indicator_5 = 1;	// Indicating button 5 was pressed.
    1b04:	80 91 63 05 	lds	r24, 0x0563
    1b08:	80 61       	ori	r24, 0x10	; 16
    1b0a:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button5_addr, 5);
    1b0e:	88 e0       	ldi	r24, 0x08	; 8
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	65 e0       	ldi	r22, 0x05	; 5
    1b14:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x05);
				no_of_votes_cat3--;
    1b18:	fa 94       	dec	r15
    1b1a:	1a c0       	rjmp	.+52     	; 0x1b50 <vote_registration+0x8a0>
			}
			else if((5 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    1b1c:	80 91 64 05 	lds	r24, 0x0564
    1b20:	90 91 65 05 	lds	r25, 0x0565
    1b24:	85 30       	cpi	r24, 0x05	; 5
    1b26:	91 05       	cpc	r25, r1
    1b28:	98 f4       	brcc	.+38     	; 0x1b50 <vote_registration+0x8a0>
    1b2a:	80 91 48 08 	lds	r24, 0x0848
    1b2e:	88 23       	and	r24, r24
    1b30:	79 f0       	breq	.+30     	; 0x1b50 <vote_registration+0x8a0>
			{
				//USART_putstring("5G ");		// comment this out in final product
				vote_indicator_5 = 1;			// Indicating button 1 was pressed
    1b32:	80 91 63 05 	lds	r24, 0x0563
    1b36:	80 61       	ori	r24, 0x10	; 16
    1b38:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button5_addr, 5);
    1b3c:	88 e0       	ldi	r24, 0x08	; 8
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	65 e0       	ldi	r22, 0x05	; 5
    1b42:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x05);
				gen_vote_count--;
    1b46:	80 91 48 08 	lds	r24, 0x0848
    1b4a:	81 50       	subi	r24, 0x01	; 1
    1b4c:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x05) && (6 <= candidate_count) && (vote_indicator_6 == 0))
    1b50:	86 b1       	in	r24, 0x06	; 6
    1b52:	80 ff       	sbrs	r24, 0
    1b54:	67 c0       	rjmp	.+206    	; 0x1c24 <vote_registration+0x974>
    1b56:	86 b1       	in	r24, 0x06	; 6
    1b58:	81 fd       	sbrc	r24, 1
    1b5a:	64 c0       	rjmp	.+200    	; 0x1c24 <vote_registration+0x974>
    1b5c:	86 b1       	in	r24, 0x06	; 6
    1b5e:	82 fd       	sbrc	r24, 2
    1b60:	61 c0       	rjmp	.+194    	; 0x1c24 <vote_registration+0x974>
    1b62:	86 b1       	in	r24, 0x06	; 6
    1b64:	83 fd       	sbrc	r24, 3
    1b66:	5e c0       	rjmp	.+188    	; 0x1c24 <vote_registration+0x974>
    1b68:	83 b1       	in	r24, 0x03	; 3
    1b6a:	8f 70       	andi	r24, 0x0F	; 15
    1b6c:	85 30       	cpi	r24, 0x05	; 5
    1b6e:	09 f0       	breq	.+2      	; 0x1b72 <vote_registration+0x8c2>
    1b70:	59 c0       	rjmp	.+178    	; 0x1c24 <vote_registration+0x974>
    1b72:	80 91 f6 05 	lds	r24, 0x05F6
    1b76:	86 30       	cpi	r24, 0x06	; 6
    1b78:	08 f4       	brcc	.+2      	; 0x1b7c <vote_registration+0x8cc>
    1b7a:	54 c0       	rjmp	.+168    	; 0x1c24 <vote_registration+0x974>
    1b7c:	80 91 63 05 	lds	r24, 0x0563
    1b80:	85 fd       	sbrc	r24, 5
    1b82:	50 c0       	rjmp	.+160    	; 0x1c24 <vote_registration+0x974>
		{
			if((6 <= category_size_1) && (no_of_votes_cat1 != 0))		// 
    1b84:	a9 81       	ldd	r26, Y+1	; 0x01
    1b86:	a6 30       	cpi	r26, 0x06	; 6
    1b88:	70 f0       	brcs	.+28     	; 0x1ba6 <vote_registration+0x8f6>
    1b8a:	bb 20       	and	r11, r11
    1b8c:	e9 f0       	breq	.+58     	; 0x1bc8 <vote_registration+0x918>
			{
				//USART_putstring("6C1 ");
				vote_indicator_6 = 1;					// Indicating button 6 was presses.
    1b8e:	80 91 63 05 	lds	r24, 0x0563
    1b92:	80 62       	ori	r24, 0x20	; 32
    1b94:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button6_addr, 6);  // provide starting and ending buttons as arguments
    1b98:	8a e0       	ldi	r24, 0x0A	; 10
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	66 e0       	ldi	r22, 0x06	; 6
    1b9e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x06);
				no_of_votes_cat1--;
    1ba2:	ba 94       	dec	r11
    1ba4:	3f c0       	rjmp	.+126    	; 0x1c24 <vote_registration+0x974>
			}
			else if((6 > category_size_1) && (6 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    1ba6:	b5 e0       	ldi	r27, 0x05	; 5
    1ba8:	b5 15       	cp	r27, r5
    1baa:	88 f4       	brcc	.+34     	; 0x1bce <vote_registration+0x91e>
    1bac:	cc 20       	and	r12, r12
    1bae:	01 f1       	breq	.+64     	; 0x1bf0 <vote_registration+0x940>
			{
				//USART_putstring("6C2 ");
				vote_indicator_6 = 1;	// Indicating button 6 was pressed.
    1bb0:	80 91 63 05 	lds	r24, 0x0563
    1bb4:	80 62       	ori	r24, 0x20	; 32
    1bb6:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button6_addr, 6);
    1bba:	8a e0       	ldi	r24, 0x0A	; 10
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	66 e0       	ldi	r22, 0x06	; 6
    1bc0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x06);
				no_of_votes_cat2--;
    1bc4:	ca 94       	dec	r12
    1bc6:	2e c0       	rjmp	.+92     	; 0x1c24 <vote_registration+0x974>
			}
			else if((6 > category_size_2) && (6 <= category_size_3) && (no_of_votes_cat3 != 0))
    1bc8:	e5 e0       	ldi	r30, 0x05	; 5
    1bca:	e5 15       	cp	r30, r5
    1bcc:	88 f0       	brcs	.+34     	; 0x1bf0 <vote_registration+0x940>
    1bce:	f5 e0       	ldi	r31, 0x05	; 5
    1bd0:	f7 15       	cp	r31, r7
    1bd2:	70 f4       	brcc	.+28     	; 0x1bf0 <vote_registration+0x940>
    1bd4:	ff 20       	and	r15, r15
    1bd6:	61 f0       	breq	.+24     	; 0x1bf0 <vote_registration+0x940>
			{
				//USART_putstring("6C3 ");
				vote_indicator_6 = 1;	// Indicating button 6 was presses.
    1bd8:	80 91 63 05 	lds	r24, 0x0563
    1bdc:	80 62       	ori	r24, 0x20	; 32
    1bde:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button6_addr, 6);
    1be2:	8a e0       	ldi	r24, 0x0A	; 10
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	66 e0       	ldi	r22, 0x06	; 6
    1be8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x06);
				no_of_votes_cat3--;
    1bec:	fa 94       	dec	r15
    1bee:	1a c0       	rjmp	.+52     	; 0x1c24 <vote_registration+0x974>
			}
			else if ((6 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    1bf0:	80 91 64 05 	lds	r24, 0x0564
    1bf4:	90 91 65 05 	lds	r25, 0x0565
    1bf8:	86 30       	cpi	r24, 0x06	; 6
    1bfa:	91 05       	cpc	r25, r1
    1bfc:	98 f4       	brcc	.+38     	; 0x1c24 <vote_registration+0x974>
    1bfe:	80 91 48 08 	lds	r24, 0x0848
    1c02:	88 23       	and	r24, r24
    1c04:	79 f0       	breq	.+30     	; 0x1c24 <vote_registration+0x974>
			{
				//USART_putstring("6G ");		// comment this out in final product
				vote_indicator_6 = 1;			// Indicating button 1 was pressed
    1c06:	80 91 63 05 	lds	r24, 0x0563
    1c0a:	80 62       	ori	r24, 0x20	; 32
    1c0c:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button6_addr, 6);
    1c10:	8a e0       	ldi	r24, 0x0A	; 10
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	66 e0       	ldi	r22, 0x06	; 6
    1c16:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x06);
				gen_vote_count--;
    1c1a:	80 91 48 08 	lds	r24, 0x0848
    1c1e:	81 50       	subi	r24, 0x01	; 1
    1c20:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x06) && (7 <= candidate_count) && vote_indicator_7==0)
    1c24:	86 b1       	in	r24, 0x06	; 6
    1c26:	80 ff       	sbrs	r24, 0
    1c28:	7b c0       	rjmp	.+246    	; 0x1d20 <vote_registration+0xa70>
    1c2a:	86 b1       	in	r24, 0x06	; 6
    1c2c:	81 fd       	sbrc	r24, 1
    1c2e:	78 c0       	rjmp	.+240    	; 0x1d20 <vote_registration+0xa70>
    1c30:	86 b1       	in	r24, 0x06	; 6
    1c32:	82 fd       	sbrc	r24, 2
    1c34:	75 c0       	rjmp	.+234    	; 0x1d20 <vote_registration+0xa70>
    1c36:	86 b1       	in	r24, 0x06	; 6
    1c38:	83 fd       	sbrc	r24, 3
    1c3a:	72 c0       	rjmp	.+228    	; 0x1d20 <vote_registration+0xa70>
    1c3c:	83 b1       	in	r24, 0x03	; 3
    1c3e:	8f 70       	andi	r24, 0x0F	; 15
    1c40:	86 30       	cpi	r24, 0x06	; 6
    1c42:	09 f0       	breq	.+2      	; 0x1c46 <vote_registration+0x996>
    1c44:	6d c0       	rjmp	.+218    	; 0x1d20 <vote_registration+0xa70>
    1c46:	80 91 f6 05 	lds	r24, 0x05F6
    1c4a:	87 30       	cpi	r24, 0x07	; 7
    1c4c:	08 f4       	brcc	.+2      	; 0x1c50 <vote_registration+0x9a0>
    1c4e:	68 c0       	rjmp	.+208    	; 0x1d20 <vote_registration+0xa70>
    1c50:	80 91 63 05 	lds	r24, 0x0563
    1c54:	86 fd       	sbrc	r24, 6
    1c56:	64 c0       	rjmp	.+200    	; 0x1d20 <vote_registration+0xa70>
		{
			if((7 <= category_size_1) && (no_of_votes_cat1 != 0))			//.
    1c58:	89 81       	ldd	r24, Y+1	; 0x01
    1c5a:	87 30       	cpi	r24, 0x07	; 7
    1c5c:	70 f0       	brcs	.+28     	; 0x1c7a <vote_registration+0x9ca>
    1c5e:	bb 20       	and	r11, r11
    1c60:	e9 f0       	breq	.+58     	; 0x1c9c <vote_registration+0x9ec>
			{
				//USART_putstring("7C1 ");
				vote_indicator_7 = 1;	// Indicating button 7 was presses.
    1c62:	80 91 63 05 	lds	r24, 0x0563
    1c66:	80 64       	ori	r24, 0x40	; 64
    1c68:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button7_addr, 7);  // provide starting and ending buttons as arguments
    1c6c:	8c e0       	ldi	r24, 0x0C	; 12
    1c6e:	90 e0       	ldi	r25, 0x00	; 0
    1c70:	67 e0       	ldi	r22, 0x07	; 7
    1c72:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x07);
				no_of_votes_cat1--;
    1c76:	ba 94       	dec	r11
    1c78:	53 c0       	rjmp	.+166    	; 0x1d20 <vote_registration+0xa70>
			}
			else if((7 > category_size_1) && (7 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    1c7a:	96 e0       	ldi	r25, 0x06	; 6
    1c7c:	95 15       	cp	r25, r5
    1c7e:	88 f4       	brcc	.+34     	; 0x1ca2 <vote_registration+0x9f2>
    1c80:	cc 20       	and	r12, r12
    1c82:	01 f1       	breq	.+64     	; 0x1cc4 <vote_registration+0xa14>
			{
				//USART_putstring("7C2 ");
				vote_indicator_7 = 1;	// Indicating button 7 was presses.
    1c84:	80 91 63 05 	lds	r24, 0x0563
    1c88:	80 64       	ori	r24, 0x40	; 64
    1c8a:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button7_addr, 7);
    1c8e:	8c e0       	ldi	r24, 0x0C	; 12
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	67 e0       	ldi	r22, 0x07	; 7
    1c94:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x07);
				no_of_votes_cat2--;
    1c98:	ca 94       	dec	r12
    1c9a:	42 c0       	rjmp	.+132    	; 0x1d20 <vote_registration+0xa70>
			}
			else if((7 > category_size_2) && (7 <= category_size_3) && (no_of_votes_cat3 != 0))
    1c9c:	a6 e0       	ldi	r26, 0x06	; 6
    1c9e:	a5 15       	cp	r26, r5
    1ca0:	88 f0       	brcs	.+34     	; 0x1cc4 <vote_registration+0xa14>
    1ca2:	b6 e0       	ldi	r27, 0x06	; 6
    1ca4:	b7 15       	cp	r27, r7
    1ca6:	88 f4       	brcc	.+34     	; 0x1cca <vote_registration+0xa1a>
    1ca8:	ff 20       	and	r15, r15
    1caa:	01 f1       	breq	.+64     	; 0x1cec <vote_registration+0xa3c>
			{
				//USART_putstring("7C3 ");
				vote_indicator_7 = 1;	// Indicating button 7 was presses.
    1cac:	80 91 63 05 	lds	r24, 0x0563
    1cb0:	80 64       	ori	r24, 0x40	; 64
    1cb2:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button7_addr, 7);
    1cb6:	8c e0       	ldi	r24, 0x0C	; 12
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	67 e0       	ldi	r22, 0x07	; 7
    1cbc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x07);
				no_of_votes_cat3--;
    1cc0:	fa 94       	dec	r15
    1cc2:	2e c0       	rjmp	.+92     	; 0x1d20 <vote_registration+0xa70>
			}
			else if((7 > category_size_3) && (7 <= category_size_4) && (no_of_votes_cat4 != 0))
    1cc4:	e6 e0       	ldi	r30, 0x06	; 6
    1cc6:	e7 15       	cp	r30, r7
    1cc8:	88 f0       	brcs	.+34     	; 0x1cec <vote_registration+0xa3c>
    1cca:	f6 e0       	ldi	r31, 0x06	; 6
    1ccc:	f9 15       	cp	r31, r9
    1cce:	70 f4       	brcc	.+28     	; 0x1cec <vote_registration+0xa3c>
    1cd0:	22 20       	and	r2, r2
    1cd2:	61 f0       	breq	.+24     	; 0x1cec <vote_registration+0xa3c>
			{
				//USART_putstring("7C4 ");
				vote_indicator_7 = 1;	// Indicating button 7 was presses.
    1cd4:	80 91 63 05 	lds	r24, 0x0563
    1cd8:	80 64       	ori	r24, 0x40	; 64
    1cda:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button7_addr, 7);
    1cde:	8c e0       	ldi	r24, 0x0C	; 12
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	67 e0       	ldi	r22, 0x07	; 7
    1ce4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x07);
				no_of_votes_cat4--;
    1ce8:	2a 94       	dec	r2
    1cea:	1a c0       	rjmp	.+52     	; 0x1d20 <vote_registration+0xa70>
			}
			else if ((7 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    1cec:	80 91 64 05 	lds	r24, 0x0564
    1cf0:	90 91 65 05 	lds	r25, 0x0565
    1cf4:	87 30       	cpi	r24, 0x07	; 7
    1cf6:	91 05       	cpc	r25, r1
    1cf8:	98 f4       	brcc	.+38     	; 0x1d20 <vote_registration+0xa70>
    1cfa:	80 91 48 08 	lds	r24, 0x0848
    1cfe:	88 23       	and	r24, r24
    1d00:	79 f0       	breq	.+30     	; 0x1d20 <vote_registration+0xa70>
			{
				//USART_putstring("7G ");		// comment this out in final product
				vote_indicator_7 = 1;			// Indicating button 1 was pressed
    1d02:	80 91 63 05 	lds	r24, 0x0563
    1d06:	80 64       	ori	r24, 0x40	; 64
    1d08:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button7_addr, 7);
    1d0c:	8c e0       	ldi	r24, 0x0C	; 12
    1d0e:	90 e0       	ldi	r25, 0x00	; 0
    1d10:	67 e0       	ldi	r22, 0x07	; 7
    1d12:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x07);
				gen_vote_count--;
    1d16:	80 91 48 08 	lds	r24, 0x0848
    1d1a:	81 50       	subi	r24, 0x01	; 1
    1d1c:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x07) && (8 <= candidate_count) && vote_indicator_8==0)
    1d20:	86 b1       	in	r24, 0x06	; 6
    1d22:	80 ff       	sbrs	r24, 0
    1d24:	90 c0       	rjmp	.+288    	; 0x1e46 <vote_registration+0xb96>
    1d26:	86 b1       	in	r24, 0x06	; 6
    1d28:	81 fd       	sbrc	r24, 1
    1d2a:	8d c0       	rjmp	.+282    	; 0x1e46 <vote_registration+0xb96>
    1d2c:	86 b1       	in	r24, 0x06	; 6
    1d2e:	82 fd       	sbrc	r24, 2
    1d30:	8a c0       	rjmp	.+276    	; 0x1e46 <vote_registration+0xb96>
    1d32:	86 b1       	in	r24, 0x06	; 6
    1d34:	83 fd       	sbrc	r24, 3
    1d36:	87 c0       	rjmp	.+270    	; 0x1e46 <vote_registration+0xb96>
    1d38:	83 b1       	in	r24, 0x03	; 3
    1d3a:	8f 70       	andi	r24, 0x0F	; 15
    1d3c:	87 30       	cpi	r24, 0x07	; 7
    1d3e:	09 f0       	breq	.+2      	; 0x1d42 <vote_registration+0xa92>
    1d40:	82 c0       	rjmp	.+260    	; 0x1e46 <vote_registration+0xb96>
    1d42:	80 91 f6 05 	lds	r24, 0x05F6
    1d46:	88 30       	cpi	r24, 0x08	; 8
    1d48:	08 f4       	brcc	.+2      	; 0x1d4c <vote_registration+0xa9c>
    1d4a:	7d c0       	rjmp	.+250    	; 0x1e46 <vote_registration+0xb96>
    1d4c:	80 91 63 05 	lds	r24, 0x0563
    1d50:	88 23       	and	r24, r24
    1d52:	0c f4       	brge	.+2      	; 0x1d56 <vote_registration+0xaa6>
    1d54:	78 c0       	rjmp	.+240    	; 0x1e46 <vote_registration+0xb96>
		{
			if((8 <= category_size_1) && (no_of_votes_cat1 != 0))		//
    1d56:	89 81       	ldd	r24, Y+1	; 0x01
    1d58:	88 30       	cpi	r24, 0x08	; 8
    1d5a:	70 f0       	brcs	.+28     	; 0x1d78 <vote_registration+0xac8>
    1d5c:	bb 20       	and	r11, r11
    1d5e:	e9 f0       	breq	.+58     	; 0x1d9a <vote_registration+0xaea>
			{
				//USART_putstring("8C1 ");
				vote_indicator_8 = 1;	// Indicating button 8 was presses.
    1d60:	80 91 63 05 	lds	r24, 0x0563
    1d64:	80 68       	ori	r24, 0x80	; 128
    1d66:	80 93 63 05 	sts	0x0563, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x08);
				deactivate_category_buttons_and_save(button8_addr, 8);  // provide starting and ending buttons as arguments
    1d6a:	8e e0       	ldi	r24, 0x0E	; 14
    1d6c:	90 e0       	ldi	r25, 0x00	; 0
    1d6e:	68 e0       	ldi	r22, 0x08	; 8
    1d70:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat1--;
    1d74:	ba 94       	dec	r11
    1d76:	67 c0       	rjmp	.+206    	; 0x1e46 <vote_registration+0xb96>
			}
			else if((8 > category_size_1) && (8 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    1d78:	97 e0       	ldi	r25, 0x07	; 7
    1d7a:	95 15       	cp	r25, r5
    1d7c:	88 f4       	brcc	.+34     	; 0x1da0 <vote_registration+0xaf0>
    1d7e:	cc 20       	and	r12, r12
    1d80:	01 f1       	breq	.+64     	; 0x1dc2 <vote_registration+0xb12>
			{
				//USART_putstring("8C2 ");
				vote_indicator_8 = 1;	// Indicating button 8 was presses.
    1d82:	80 91 63 05 	lds	r24, 0x0563
    1d86:	80 68       	ori	r24, 0x80	; 128
    1d88:	80 93 63 05 	sts	0x0563, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x08);
				deactivate_category_buttons_and_save(button8_addr, 8);
    1d8c:	8e e0       	ldi	r24, 0x0E	; 14
    1d8e:	90 e0       	ldi	r25, 0x00	; 0
    1d90:	68 e0       	ldi	r22, 0x08	; 8
    1d92:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    1d96:	ca 94       	dec	r12
    1d98:	56 c0       	rjmp	.+172    	; 0x1e46 <vote_registration+0xb96>
			}
			else if((8 > category_size_2) && (8 <= category_size_3) && (no_of_votes_cat3 != 0))
    1d9a:	a7 e0       	ldi	r26, 0x07	; 7
    1d9c:	a5 15       	cp	r26, r5
    1d9e:	88 f0       	brcs	.+34     	; 0x1dc2 <vote_registration+0xb12>
    1da0:	b7 e0       	ldi	r27, 0x07	; 7
    1da2:	b7 15       	cp	r27, r7
    1da4:	88 f4       	brcc	.+34     	; 0x1dc8 <vote_registration+0xb18>
    1da6:	ff 20       	and	r15, r15
    1da8:	01 f1       	breq	.+64     	; 0x1dea <vote_registration+0xb3a>
			{
				//USART_putstring("8C3 ");
				vote_indicator_8 = 1;
    1daa:	80 91 63 05 	lds	r24, 0x0563
    1dae:	80 68       	ori	r24, 0x80	; 128
    1db0:	80 93 63 05 	sts	0x0563, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x08);
				deactivate_category_buttons_and_save(button8_addr, 8);
    1db4:	8e e0       	ldi	r24, 0x0E	; 14
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	68 e0       	ldi	r22, 0x08	; 8
    1dba:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    1dbe:	fa 94       	dec	r15
    1dc0:	42 c0       	rjmp	.+132    	; 0x1e46 <vote_registration+0xb96>
			}
			else if((8 > category_size_3) && (8 <= category_size_4) && (no_of_votes_cat4 != 0))
    1dc2:	e7 e0       	ldi	r30, 0x07	; 7
    1dc4:	e7 15       	cp	r30, r7
    1dc6:	88 f0       	brcs	.+34     	; 0x1dea <vote_registration+0xb3a>
    1dc8:	f7 e0       	ldi	r31, 0x07	; 7
    1dca:	f9 15       	cp	r31, r9
    1dcc:	88 f4       	brcc	.+34     	; 0x1df0 <vote_registration+0xb40>
    1dce:	22 20       	and	r2, r2
    1dd0:	01 f1       	breq	.+64     	; 0x1e12 <vote_registration+0xb62>
			{
				//USART_putstring("8C4 ");
				vote_indicator_8 = 1;
    1dd2:	80 91 63 05 	lds	r24, 0x0563
    1dd6:	80 68       	ori	r24, 0x80	; 128
    1dd8:	80 93 63 05 	sts	0x0563, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x08);
				deactivate_category_buttons_and_save(button8_addr, 8);
    1ddc:	8e e0       	ldi	r24, 0x0E	; 14
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	68 e0       	ldi	r22, 0x08	; 8
    1de2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    1de6:	2a 94       	dec	r2
    1de8:	2e c0       	rjmp	.+92     	; 0x1e46 <vote_registration+0xb96>
			}
			
			/// Added by Brendz on March 7th 2017. Btn 8 fell into category 5 and was not checked in any if Conditions
			else if((8 > category_size_4) && (8 <= category_size_5) && (no_of_votes_cat5 != 0))
    1dea:	87 e0       	ldi	r24, 0x07	; 7
    1dec:	89 15       	cp	r24, r9
    1dee:	88 f0       	brcs	.+34     	; 0x1e12 <vote_registration+0xb62>
    1df0:	97 e0       	ldi	r25, 0x07	; 7
    1df2:	9a 15       	cp	r25, r10
    1df4:	70 f4       	brcc	.+28     	; 0x1e12 <vote_registration+0xb62>
    1df6:	33 20       	and	r3, r3
    1df8:	61 f0       	breq	.+24     	; 0x1e12 <vote_registration+0xb62>
			{
				//USART_putstring("8C4 ");
				vote_indicator_8 = 1;
    1dfa:	80 91 63 05 	lds	r24, 0x0563
    1dfe:	80 68       	ori	r24, 0x80	; 128
    1e00:	80 93 63 05 	sts	0x0563, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x08);
				deactivate_category_buttons_and_save(button8_addr, 8);
    1e04:	8e e0       	ldi	r24, 0x0E	; 14
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	68 e0       	ldi	r22, 0x08	; 8
    1e0a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    1e0e:	3a 94       	dec	r3
    1e10:	1a c0       	rjmp	.+52     	; 0x1e46 <vote_registration+0xb96>
			}
			
			else if ((8 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    1e12:	80 91 64 05 	lds	r24, 0x0564
    1e16:	90 91 65 05 	lds	r25, 0x0565
    1e1a:	88 30       	cpi	r24, 0x08	; 8
    1e1c:	91 05       	cpc	r25, r1
    1e1e:	98 f4       	brcc	.+38     	; 0x1e46 <vote_registration+0xb96>
    1e20:	80 91 48 08 	lds	r24, 0x0848
    1e24:	88 23       	and	r24, r24
    1e26:	79 f0       	breq	.+30     	; 0x1e46 <vote_registration+0xb96>
			{
				//USART_putstring("8G ");		// comment this out in final product
				vote_indicator_8 = 1;			// Indicating button 1 was pressed
    1e28:	80 91 63 05 	lds	r24, 0x0563
    1e2c:	80 68       	ori	r24, 0x80	; 128
    1e2e:	80 93 63 05 	sts	0x0563, r24
				deactivate_category_buttons_and_save(button8_addr, 8);
    1e32:	8e e0       	ldi	r24, 0x0E	; 14
    1e34:	90 e0       	ldi	r25, 0x00	; 0
    1e36:	68 e0       	ldi	r22, 0x08	; 8
    1e38:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x08);
				gen_vote_count--;
    1e3c:	80 91 48 08 	lds	r24, 0x0848
    1e40:	81 50       	subi	r24, 0x01	; 1
    1e42:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x08) && (9 <= candidate_count) && vote_indicator_9==0)
    1e46:	86 b1       	in	r24, 0x06	; 6
    1e48:	80 ff       	sbrs	r24, 0
    1e4a:	8f c0       	rjmp	.+286    	; 0x1f6a <vote_registration+0xcba>
    1e4c:	86 b1       	in	r24, 0x06	; 6
    1e4e:	81 fd       	sbrc	r24, 1
    1e50:	8c c0       	rjmp	.+280    	; 0x1f6a <vote_registration+0xcba>
    1e52:	86 b1       	in	r24, 0x06	; 6
    1e54:	82 fd       	sbrc	r24, 2
    1e56:	89 c0       	rjmp	.+274    	; 0x1f6a <vote_registration+0xcba>
    1e58:	86 b1       	in	r24, 0x06	; 6
    1e5a:	83 fd       	sbrc	r24, 3
    1e5c:	86 c0       	rjmp	.+268    	; 0x1f6a <vote_registration+0xcba>
    1e5e:	83 b1       	in	r24, 0x03	; 3
    1e60:	8f 70       	andi	r24, 0x0F	; 15
    1e62:	88 30       	cpi	r24, 0x08	; 8
    1e64:	09 f0       	breq	.+2      	; 0x1e68 <vote_registration+0xbb8>
    1e66:	81 c0       	rjmp	.+258    	; 0x1f6a <vote_registration+0xcba>
    1e68:	80 91 f6 05 	lds	r24, 0x05F6
    1e6c:	89 30       	cpi	r24, 0x09	; 9
    1e6e:	08 f4       	brcc	.+2      	; 0x1e72 <vote_registration+0xbc2>
    1e70:	7c c0       	rjmp	.+248    	; 0x1f6a <vote_registration+0xcba>
    1e72:	80 91 47 06 	lds	r24, 0x0647
    1e76:	80 fd       	sbrc	r24, 0
    1e78:	78 c0       	rjmp	.+240    	; 0x1f6a <vote_registration+0xcba>
		{
			if((9 <= category_size_1) && (no_of_votes_cat1 != 0))
    1e7a:	a9 81       	ldd	r26, Y+1	; 0x01
    1e7c:	a9 30       	cpi	r26, 0x09	; 9
    1e7e:	70 f0       	brcs	.+28     	; 0x1e9c <vote_registration+0xbec>
    1e80:	bb 20       	and	r11, r11
    1e82:	e9 f0       	breq	.+58     	; 0x1ebe <vote_registration+0xc0e>
			{
				//USART_putstring("9C1 ");
				vote_indicator_9 = 1;	// Indicating button 9 was presses.
    1e84:	80 91 47 06 	lds	r24, 0x0647
    1e88:	81 60       	ori	r24, 0x01	; 1
    1e8a:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x09);
				deactivate_category_buttons_and_save(button9_addr, 9);
    1e8e:	80 e1       	ldi	r24, 0x10	; 16
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	69 e0       	ldi	r22, 0x09	; 9
    1e94:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat1--;
    1e98:	ba 94       	dec	r11
    1e9a:	67 c0       	rjmp	.+206    	; 0x1f6a <vote_registration+0xcba>
			}
			
			else if((9 > category_size_1) && (9 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    1e9c:	b8 e0       	ldi	r27, 0x08	; 8
    1e9e:	b5 15       	cp	r27, r5
    1ea0:	88 f4       	brcc	.+34     	; 0x1ec4 <vote_registration+0xc14>
    1ea2:	cc 20       	and	r12, r12
    1ea4:	01 f1       	breq	.+64     	; 0x1ee6 <vote_registration+0xc36>
			{
				//USART_putstring("9C2 ");
				vote_indicator_9 = 1;	// Indicating button 9 was presses.
    1ea6:	80 91 47 06 	lds	r24, 0x0647
    1eaa:	81 60       	ori	r24, 0x01	; 1
    1eac:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x09);
				deactivate_category_buttons_and_save(button9_addr, 9);
    1eb0:	80 e1       	ldi	r24, 0x10	; 16
    1eb2:	90 e0       	ldi	r25, 0x00	; 0
    1eb4:	69 e0       	ldi	r22, 0x09	; 9
    1eb6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    1eba:	ca 94       	dec	r12
    1ebc:	56 c0       	rjmp	.+172    	; 0x1f6a <vote_registration+0xcba>
			}
			else if((9 > category_size_2) && (9 <= category_size_3) && (no_of_votes_cat3 != 0))
    1ebe:	e8 e0       	ldi	r30, 0x08	; 8
    1ec0:	e5 15       	cp	r30, r5
    1ec2:	88 f0       	brcs	.+34     	; 0x1ee6 <vote_registration+0xc36>
    1ec4:	f8 e0       	ldi	r31, 0x08	; 8
    1ec6:	f7 15       	cp	r31, r7
    1ec8:	88 f4       	brcc	.+34     	; 0x1eec <vote_registration+0xc3c>
    1eca:	ff 20       	and	r15, r15
    1ecc:	01 f1       	breq	.+64     	; 0x1f0e <vote_registration+0xc5e>
			{
				//USART_putstring("9C3 ");
				vote_indicator_9 = 1;	// Indicating button 9 was presses.
    1ece:	80 91 47 06 	lds	r24, 0x0647
    1ed2:	81 60       	ori	r24, 0x01	; 1
    1ed4:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x09);
				deactivate_category_buttons_and_save(button9_addr, 9);
    1ed8:	80 e1       	ldi	r24, 0x10	; 16
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	69 e0       	ldi	r22, 0x09	; 9
    1ede:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    1ee2:	fa 94       	dec	r15
    1ee4:	42 c0       	rjmp	.+132    	; 0x1f6a <vote_registration+0xcba>
			}
			else if((9 > category_size_3) && (9 <= category_size_4) && (no_of_votes_cat4 != 0))
    1ee6:	88 e0       	ldi	r24, 0x08	; 8
    1ee8:	87 15       	cp	r24, r7
    1eea:	88 f0       	brcs	.+34     	; 0x1f0e <vote_registration+0xc5e>
    1eec:	98 e0       	ldi	r25, 0x08	; 8
    1eee:	99 15       	cp	r25, r9
    1ef0:	88 f4       	brcc	.+34     	; 0x1f14 <vote_registration+0xc64>
    1ef2:	22 20       	and	r2, r2
    1ef4:	01 f1       	breq	.+64     	; 0x1f36 <vote_registration+0xc86>
			{
				//USART_putstring("9C4 ");
				vote_indicator_9 = 1;	// Indicating button 9 was presses.
    1ef6:	80 91 47 06 	lds	r24, 0x0647
    1efa:	81 60       	ori	r24, 0x01	; 1
    1efc:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 0x09);
				deactivate_category_buttons_and_save(button9_addr, 9);
    1f00:	80 e1       	ldi	r24, 0x10	; 16
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	69 e0       	ldi	r22, 0x09	; 9
    1f06:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    1f0a:	2a 94       	dec	r2
    1f0c:	2e c0       	rjmp	.+92     	; 0x1f6a <vote_registration+0xcba>
			}
			else if((9 > category_size_4) && (9 <= category_size_5) && (no_of_votes_cat5 != 0))
    1f0e:	a8 e0       	ldi	r26, 0x08	; 8
    1f10:	a9 15       	cp	r26, r9
    1f12:	88 f0       	brcs	.+34     	; 0x1f36 <vote_registration+0xc86>
    1f14:	b8 e0       	ldi	r27, 0x08	; 8
    1f16:	ba 15       	cp	r27, r10
    1f18:	70 f4       	brcc	.+28     	; 0x1f36 <vote_registration+0xc86>
    1f1a:	33 20       	and	r3, r3
    1f1c:	61 f0       	breq	.+24     	; 0x1f36 <vote_registration+0xc86>
			{
				//USART_putstring("9C5 ");
				vote_indicator_9 = 1;	// Indicating button 9 was presses.
    1f1e:	80 91 47 06 	lds	r24, 0x0647
    1f22:	81 60       	ori	r24, 0x01	; 1
    1f24:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 9);
				deactivate_category_buttons_and_save(button9_addr, 9);
    1f28:	80 e1       	ldi	r24, 0x10	; 16
    1f2a:	90 e0       	ldi	r25, 0x00	; 0
    1f2c:	69 e0       	ldi	r22, 0x09	; 9
    1f2e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    1f32:	3a 94       	dec	r3
    1f34:	1a c0       	rjmp	.+52     	; 0x1f6a <vote_registration+0xcba>
			}
			else if ((9 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    1f36:	80 91 64 05 	lds	r24, 0x0564
    1f3a:	90 91 65 05 	lds	r25, 0x0565
    1f3e:	89 30       	cpi	r24, 0x09	; 9
    1f40:	91 05       	cpc	r25, r1
    1f42:	98 f4       	brcc	.+38     	; 0x1f6a <vote_registration+0xcba>
    1f44:	80 91 48 08 	lds	r24, 0x0848
    1f48:	88 23       	and	r24, r24
    1f4a:	79 f0       	breq	.+30     	; 0x1f6a <vote_registration+0xcba>
			{
				//USART_putstring("9G ");		// comment this out in final product
				vote_indicator_9 = 1;			// Indicating button 1 was pressed
    1f4c:	80 91 47 06 	lds	r24, 0x0647
    1f50:	81 60       	ori	r24, 0x01	; 1
    1f52:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button9_addr, 9);
    1f56:	80 e1       	ldi	r24, 0x10	; 16
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	69 e0       	ldi	r22, 0x09	; 9
    1f5c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 0x09);
				gen_vote_count--;
    1f60:	80 91 48 08 	lds	r24, 0x0848
    1f64:	81 50       	subi	r24, 0x01	; 1
    1f66:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x09) && (10 <= candidate_count) && vote_indicator_10==0)// && (gen_vote_count != 0))
    1f6a:	86 b1       	in	r24, 0x06	; 6
    1f6c:	80 ff       	sbrs	r24, 0
    1f6e:	8f c0       	rjmp	.+286    	; 0x208e <vote_registration+0xdde>
    1f70:	86 b1       	in	r24, 0x06	; 6
    1f72:	81 fd       	sbrc	r24, 1
    1f74:	8c c0       	rjmp	.+280    	; 0x208e <vote_registration+0xdde>
    1f76:	86 b1       	in	r24, 0x06	; 6
    1f78:	82 fd       	sbrc	r24, 2
    1f7a:	89 c0       	rjmp	.+274    	; 0x208e <vote_registration+0xdde>
    1f7c:	86 b1       	in	r24, 0x06	; 6
    1f7e:	83 fd       	sbrc	r24, 3
    1f80:	86 c0       	rjmp	.+268    	; 0x208e <vote_registration+0xdde>
    1f82:	83 b1       	in	r24, 0x03	; 3
    1f84:	8f 70       	andi	r24, 0x0F	; 15
    1f86:	89 30       	cpi	r24, 0x09	; 9
    1f88:	09 f0       	breq	.+2      	; 0x1f8c <vote_registration+0xcdc>
    1f8a:	81 c0       	rjmp	.+258    	; 0x208e <vote_registration+0xdde>
    1f8c:	80 91 f6 05 	lds	r24, 0x05F6
    1f90:	8a 30       	cpi	r24, 0x0A	; 10
    1f92:	08 f4       	brcc	.+2      	; 0x1f96 <vote_registration+0xce6>
    1f94:	7c c0       	rjmp	.+248    	; 0x208e <vote_registration+0xdde>
    1f96:	80 91 47 06 	lds	r24, 0x0647
    1f9a:	81 fd       	sbrc	r24, 1
    1f9c:	78 c0       	rjmp	.+240    	; 0x208e <vote_registration+0xdde>
		{
			if((10 <= category_size_1) && (no_of_votes_cat1 != 0))
    1f9e:	e9 81       	ldd	r30, Y+1	; 0x01
    1fa0:	ea 30       	cpi	r30, 0x0A	; 10
    1fa2:	70 f0       	brcs	.+28     	; 0x1fc0 <vote_registration+0xd10>
    1fa4:	bb 20       	and	r11, r11
    1fa6:	e9 f0       	breq	.+58     	; 0x1fe2 <vote_registration+0xd32>
			{
				//USART_putstring("10C1 ");
				vote_indicator_10 = 1;	// Indicating button 9 was presses.
    1fa8:	80 91 47 06 	lds	r24, 0x0647
    1fac:	82 60       	ori	r24, 0x02	; 2
    1fae:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 10);
				deactivate_category_buttons_and_save(button10_addr, 10);
    1fb2:	82 e1       	ldi	r24, 0x12	; 18
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	6a e0       	ldi	r22, 0x0A	; 10
    1fb8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat1--;
    1fbc:	ba 94       	dec	r11
    1fbe:	67 c0       	rjmp	.+206    	; 0x208e <vote_registration+0xdde>
			}
			else if((10 > category_size_1) && (10 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    1fc0:	f9 e0       	ldi	r31, 0x09	; 9
    1fc2:	f5 15       	cp	r31, r5
    1fc4:	88 f4       	brcc	.+34     	; 0x1fe8 <vote_registration+0xd38>
    1fc6:	cc 20       	and	r12, r12
    1fc8:	01 f1       	breq	.+64     	; 0x200a <vote_registration+0xd5a>
			{
				//USART_putstring("10C2 ");
				vote_indicator_10 = 1;	// Indicating button 10 was presses.
    1fca:	80 91 47 06 	lds	r24, 0x0647
    1fce:	82 60       	ori	r24, 0x02	; 2
    1fd0:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button10_addr, 10);
    1fd4:	82 e1       	ldi	r24, 0x12	; 18
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	6a e0       	ldi	r22, 0x0A	; 10
    1fda:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 10);
				no_of_votes_cat2--;
    1fde:	ca 94       	dec	r12
    1fe0:	56 c0       	rjmp	.+172    	; 0x208e <vote_registration+0xdde>
			}
			else if((10 > category_size_2) && (10 <= category_size_3) && (no_of_votes_cat3 != 0))
    1fe2:	89 e0       	ldi	r24, 0x09	; 9
    1fe4:	85 15       	cp	r24, r5
    1fe6:	88 f0       	brcs	.+34     	; 0x200a <vote_registration+0xd5a>
    1fe8:	99 e0       	ldi	r25, 0x09	; 9
    1fea:	97 15       	cp	r25, r7
    1fec:	88 f4       	brcc	.+34     	; 0x2010 <vote_registration+0xd60>
    1fee:	ff 20       	and	r15, r15
    1ff0:	01 f1       	breq	.+64     	; 0x2032 <vote_registration+0xd82>
			{
				//USART_putstring("10C3 ");
				vote_indicator_10 = 1;	// Indicating button 10 was presses.
    1ff2:	80 91 47 06 	lds	r24, 0x0647
    1ff6:	82 60       	ori	r24, 0x02	; 2
    1ff8:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button10_addr, 10);
    1ffc:	82 e1       	ldi	r24, 0x12	; 18
    1ffe:	90 e0       	ldi	r25, 0x00	; 0
    2000:	6a e0       	ldi	r22, 0x0A	; 10
    2002:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 10);
				no_of_votes_cat3--;
    2006:	fa 94       	dec	r15
    2008:	42 c0       	rjmp	.+132    	; 0x208e <vote_registration+0xdde>
			}
			else if((10 > category_size_3) && (10 <= category_size_4) && (no_of_votes_cat4 != 0))
    200a:	a9 e0       	ldi	r26, 0x09	; 9
    200c:	a7 15       	cp	r26, r7
    200e:	88 f0       	brcs	.+34     	; 0x2032 <vote_registration+0xd82>
    2010:	b9 e0       	ldi	r27, 0x09	; 9
    2012:	b9 15       	cp	r27, r9
    2014:	88 f4       	brcc	.+34     	; 0x2038 <vote_registration+0xd88>
    2016:	22 20       	and	r2, r2
    2018:	01 f1       	breq	.+64     	; 0x205a <vote_registration+0xdaa>
			{
				//USART_putstring("10C4 ");
				vote_indicator_10 = 1;	// Indicating button 10 was presses.
    201a:	80 91 47 06 	lds	r24, 0x0647
    201e:	82 60       	ori	r24, 0x02	; 2
    2020:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button10_addr, 10);
    2024:	82 e1       	ldi	r24, 0x12	; 18
    2026:	90 e0       	ldi	r25, 0x00	; 0
    2028:	6a e0       	ldi	r22, 0x0A	; 10
    202a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 10);
				no_of_votes_cat4--;
    202e:	2a 94       	dec	r2
    2030:	2e c0       	rjmp	.+92     	; 0x208e <vote_registration+0xdde>
			}
			else if((10 > category_size_4) && (10 <= category_size_5) && (no_of_votes_cat5 != 0))
    2032:	e9 e0       	ldi	r30, 0x09	; 9
    2034:	e9 15       	cp	r30, r9
    2036:	88 f0       	brcs	.+34     	; 0x205a <vote_registration+0xdaa>
    2038:	f9 e0       	ldi	r31, 0x09	; 9
    203a:	fa 15       	cp	r31, r10
    203c:	70 f4       	brcc	.+28     	; 0x205a <vote_registration+0xdaa>
    203e:	33 20       	and	r3, r3
    2040:	61 f0       	breq	.+24     	; 0x205a <vote_registration+0xdaa>
			{
				//USART_putstring("10 C 5");
				vote_indicator_10 = 1;	// Indicating button 10 was presses.
    2042:	80 91 47 06 	lds	r24, 0x0647
    2046:	82 60       	ori	r24, 0x02	; 2
    2048:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 10);
				deactivate_category_buttons_and_save(button10_addr, 10);
    204c:	82 e1       	ldi	r24, 0x12	; 18
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	6a e0       	ldi	r22, 0x0A	; 10
    2052:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2056:	3a 94       	dec	r3
    2058:	1a c0       	rjmp	.+52     	; 0x208e <vote_registration+0xdde>
			}
			else if ((10 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    205a:	80 91 64 05 	lds	r24, 0x0564
    205e:	90 91 65 05 	lds	r25, 0x0565
    2062:	8a 30       	cpi	r24, 0x0A	; 10
    2064:	91 05       	cpc	r25, r1
    2066:	98 f4       	brcc	.+38     	; 0x208e <vote_registration+0xdde>
    2068:	80 91 48 08 	lds	r24, 0x0848
    206c:	88 23       	and	r24, r24
    206e:	79 f0       	breq	.+30     	; 0x208e <vote_registration+0xdde>
			{
				//USART_putstring("10G ");		// comment this out in final product
				vote_indicator_10 = 1;			// Indicating button 1 was pressed
    2070:	80 91 47 06 	lds	r24, 0x0647
    2074:	82 60       	ori	r24, 0x02	; 2
    2076:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button10_addr, 10);
    207a:	82 e1       	ldi	r24, 0x12	; 18
    207c:	90 e0       	ldi	r25, 0x00	; 0
    207e:	6a e0       	ldi	r22, 0x0A	; 10
    2080:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 10);
				gen_vote_count--;
    2084:	80 91 48 08 	lds	r24, 0x0848
    2088:	81 50       	subi	r24, 0x01	; 1
    208a:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0A) && (11 <= candidate_count) && vote_indicator_11==0)// && (gen_vote_count != 0))
    208e:	86 b1       	in	r24, 0x06	; 6
    2090:	80 ff       	sbrs	r24, 0
    2092:	a3 c0       	rjmp	.+326    	; 0x21da <vote_registration+0xf2a>
    2094:	86 b1       	in	r24, 0x06	; 6
    2096:	81 fd       	sbrc	r24, 1
    2098:	a0 c0       	rjmp	.+320    	; 0x21da <vote_registration+0xf2a>
    209a:	86 b1       	in	r24, 0x06	; 6
    209c:	82 fd       	sbrc	r24, 2
    209e:	9d c0       	rjmp	.+314    	; 0x21da <vote_registration+0xf2a>
    20a0:	86 b1       	in	r24, 0x06	; 6
    20a2:	83 fd       	sbrc	r24, 3
    20a4:	9a c0       	rjmp	.+308    	; 0x21da <vote_registration+0xf2a>
    20a6:	83 b1       	in	r24, 0x03	; 3
    20a8:	8f 70       	andi	r24, 0x0F	; 15
    20aa:	8a 30       	cpi	r24, 0x0A	; 10
    20ac:	09 f0       	breq	.+2      	; 0x20b0 <vote_registration+0xe00>
    20ae:	95 c0       	rjmp	.+298    	; 0x21da <vote_registration+0xf2a>
    20b0:	80 91 f6 05 	lds	r24, 0x05F6
    20b4:	8b 30       	cpi	r24, 0x0B	; 11
    20b6:	08 f4       	brcc	.+2      	; 0x20ba <vote_registration+0xe0a>
    20b8:	90 c0       	rjmp	.+288    	; 0x21da <vote_registration+0xf2a>
    20ba:	80 91 47 06 	lds	r24, 0x0647
    20be:	82 fd       	sbrc	r24, 2
    20c0:	8c c0       	rjmp	.+280    	; 0x21da <vote_registration+0xf2a>
		{
			if((11 <= category_size_1) && (no_of_votes_cat1 != 0))
    20c2:	89 81       	ldd	r24, Y+1	; 0x01
    20c4:	8b 30       	cpi	r24, 0x0B	; 11
    20c6:	70 f0       	brcs	.+28     	; 0x20e4 <vote_registration+0xe34>
    20c8:	bb 20       	and	r11, r11
    20ca:	e9 f0       	breq	.+58     	; 0x2106 <vote_registration+0xe56>
			{
				//USART_putstring("11C1 ");
				vote_indicator_11 = 1;	// Indicating button 9 was presses.
    20cc:	80 91 47 06 	lds	r24, 0x0647
    20d0:	84 60       	ori	r24, 0x04	; 4
    20d2:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 11);
				deactivate_category_buttons_and_save(button11_addr, 11);
    20d6:	84 e1       	ldi	r24, 0x14	; 20
    20d8:	90 e0       	ldi	r25, 0x00	; 0
    20da:	6b e0       	ldi	r22, 0x0B	; 11
    20dc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat1--;
    20e0:	ba 94       	dec	r11
    20e2:	7b c0       	rjmp	.+246    	; 0x21da <vote_registration+0xf2a>
			}
			else if((11 > category_size_1) && (11 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    20e4:	9a e0       	ldi	r25, 0x0A	; 10
    20e6:	95 15       	cp	r25, r5
    20e8:	88 f4       	brcc	.+34     	; 0x210c <vote_registration+0xe5c>
    20ea:	cc 20       	and	r12, r12
    20ec:	01 f1       	breq	.+64     	; 0x212e <vote_registration+0xe7e>
			{
				//USART_putstring("11C2 ");
				vote_indicator_11 = 1;	// Indicating button 10 was presses.
    20ee:	80 91 47 06 	lds	r24, 0x0647
    20f2:	84 60       	ori	r24, 0x04	; 4
    20f4:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button11_addr, 11);
    20f8:	84 e1       	ldi	r24, 0x14	; 20
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	6b e0       	ldi	r22, 0x0B	; 11
    20fe:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 11);
				no_of_votes_cat2--;
    2102:	ca 94       	dec	r12
    2104:	6a c0       	rjmp	.+212    	; 0x21da <vote_registration+0xf2a>
			}
			else if((11 > category_size_2) && (11 <= category_size_3) && (no_of_votes_cat3 != 0))
    2106:	aa e0       	ldi	r26, 0x0A	; 10
    2108:	a5 15       	cp	r26, r5
    210a:	88 f0       	brcs	.+34     	; 0x212e <vote_registration+0xe7e>
    210c:	ba e0       	ldi	r27, 0x0A	; 10
    210e:	b7 15       	cp	r27, r7
    2110:	88 f4       	brcc	.+34     	; 0x2134 <vote_registration+0xe84>
    2112:	ff 20       	and	r15, r15
    2114:	01 f1       	breq	.+64     	; 0x2156 <vote_registration+0xea6>
			{
				//USART_putstring("11C3 ");
				vote_indicator_11 = 1;	// Indicating button 10 was presses.
    2116:	80 91 47 06 	lds	r24, 0x0647
    211a:	84 60       	ori	r24, 0x04	; 4
    211c:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button11_addr, 11);
    2120:	84 e1       	ldi	r24, 0x14	; 20
    2122:	90 e0       	ldi	r25, 0x00	; 0
    2124:	6b e0       	ldi	r22, 0x0B	; 11
    2126:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 11);
				no_of_votes_cat3--;
    212a:	fa 94       	dec	r15
    212c:	56 c0       	rjmp	.+172    	; 0x21da <vote_registration+0xf2a>
			}
			else if((11 > category_size_3) && (11 <= category_size_4) && (no_of_votes_cat4 != 0))
    212e:	ea e0       	ldi	r30, 0x0A	; 10
    2130:	e7 15       	cp	r30, r7
    2132:	88 f0       	brcs	.+34     	; 0x2156 <vote_registration+0xea6>
    2134:	fa e0       	ldi	r31, 0x0A	; 10
    2136:	f9 15       	cp	r31, r9
    2138:	88 f4       	brcc	.+34     	; 0x215c <vote_registration+0xeac>
    213a:	22 20       	and	r2, r2
    213c:	01 f1       	breq	.+64     	; 0x217e <vote_registration+0xece>
			{
				//USART_putstring("11C4 ");
				vote_indicator_11 = 1;	// Indicating button 10 was presses.
    213e:	80 91 47 06 	lds	r24, 0x0647
    2142:	84 60       	ori	r24, 0x04	; 4
    2144:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button11_addr, 11);
    2148:	84 e1       	ldi	r24, 0x14	; 20
    214a:	90 e0       	ldi	r25, 0x00	; 0
    214c:	6b e0       	ldi	r22, 0x0B	; 11
    214e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 11);
				no_of_votes_cat4--;
    2152:	2a 94       	dec	r2
    2154:	42 c0       	rjmp	.+132    	; 0x21da <vote_registration+0xf2a>
			}
			else if((11 > category_size_4) && (11 <= category_size_5) && (no_of_votes_cat5 != 0))
    2156:	8a e0       	ldi	r24, 0x0A	; 10
    2158:	89 15       	cp	r24, r9
    215a:	88 f0       	brcs	.+34     	; 0x217e <vote_registration+0xece>
    215c:	9a e0       	ldi	r25, 0x0A	; 10
    215e:	9a 15       	cp	r25, r10
    2160:	88 f4       	brcc	.+34     	; 0x2184 <vote_registration+0xed4>
    2162:	33 20       	and	r3, r3
    2164:	01 f1       	breq	.+64     	; 0x21a6 <vote_registration+0xef6>
			{
				//USART_putstring("11C5 ");
				vote_indicator_11 = 1;	// Indicating button 10 was presses.
    2166:	80 91 47 06 	lds	r24, 0x0647
    216a:	84 60       	ori	r24, 0x04	; 4
    216c:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 11);
				deactivate_category_buttons_and_save(button11_addr, 11);
    2170:	84 e1       	ldi	r24, 0x14	; 20
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	6b e0       	ldi	r22, 0x0B	; 11
    2176:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    217a:	3a 94       	dec	r3
    217c:	2e c0       	rjmp	.+92     	; 0x21da <vote_registration+0xf2a>
			}
			else if((11 > category_size_5) && (11 <= category_size_6) && (no_of_votes_cat6 != 0))
    217e:	aa e0       	ldi	r26, 0x0A	; 10
    2180:	aa 15       	cp	r26, r10
    2182:	88 f0       	brcs	.+34     	; 0x21a6 <vote_registration+0xef6>
    2184:	ba e0       	ldi	r27, 0x0A	; 10
    2186:	b8 15       	cp	r27, r8
    2188:	70 f4       	brcc	.+28     	; 0x21a6 <vote_registration+0xef6>
    218a:	11 23       	and	r17, r17
    218c:	61 f0       	breq	.+24     	; 0x21a6 <vote_registration+0xef6>
			{
				//USART_putstring("11C6 ");
				vote_indicator_11 = 1;	// Indicating button 11 was presses.
    218e:	80 91 47 06 	lds	r24, 0x0647
    2192:	84 60       	ori	r24, 0x04	; 4
    2194:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 11);
				deactivate_category_buttons_and_save(button11_addr, 11);
    2198:	84 e1       	ldi	r24, 0x14	; 20
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	6b e0       	ldi	r22, 0x0B	; 11
    219e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    21a2:	11 50       	subi	r17, 0x01	; 1
    21a4:	1a c0       	rjmp	.+52     	; 0x21da <vote_registration+0xf2a>
			}
			else if ((11 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    21a6:	80 91 64 05 	lds	r24, 0x0564
    21aa:	90 91 65 05 	lds	r25, 0x0565
    21ae:	8b 30       	cpi	r24, 0x0B	; 11
    21b0:	91 05       	cpc	r25, r1
    21b2:	98 f4       	brcc	.+38     	; 0x21da <vote_registration+0xf2a>
    21b4:	80 91 48 08 	lds	r24, 0x0848
    21b8:	88 23       	and	r24, r24
    21ba:	79 f0       	breq	.+30     	; 0x21da <vote_registration+0xf2a>
			{
				//USART_putstring("11G ");		// comment this out in final product
				vote_indicator_11 = 1;			// Indicating button 1 was pressed
    21bc:	80 91 47 06 	lds	r24, 0x0647
    21c0:	84 60       	ori	r24, 0x04	; 4
    21c2:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button11_addr, 11);
    21c6:	84 e1       	ldi	r24, 0x14	; 20
    21c8:	90 e0       	ldi	r25, 0x00	; 0
    21ca:	6b e0       	ldi	r22, 0x0B	; 11
    21cc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 11);
				gen_vote_count--;
    21d0:	80 91 48 08 	lds	r24, 0x0848
    21d4:	81 50       	subi	r24, 0x01	; 1
    21d6:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0B) && (12 <= candidate_count) && vote_indicator_12==0)// && (gen_vote_count != 10))
    21da:	86 b1       	in	r24, 0x06	; 6
    21dc:	80 ff       	sbrs	r24, 0
    21de:	a3 c0       	rjmp	.+326    	; 0x2326 <__stack+0x127>
    21e0:	86 b1       	in	r24, 0x06	; 6
    21e2:	81 fd       	sbrc	r24, 1
    21e4:	a0 c0       	rjmp	.+320    	; 0x2326 <__stack+0x127>
    21e6:	86 b1       	in	r24, 0x06	; 6
    21e8:	82 fd       	sbrc	r24, 2
    21ea:	9d c0       	rjmp	.+314    	; 0x2326 <__stack+0x127>
    21ec:	86 b1       	in	r24, 0x06	; 6
    21ee:	83 fd       	sbrc	r24, 3
    21f0:	9a c0       	rjmp	.+308    	; 0x2326 <__stack+0x127>
    21f2:	83 b1       	in	r24, 0x03	; 3
    21f4:	8f 70       	andi	r24, 0x0F	; 15
    21f6:	8b 30       	cpi	r24, 0x0B	; 11
    21f8:	09 f0       	breq	.+2      	; 0x21fc <vote_registration+0xf4c>
    21fa:	95 c0       	rjmp	.+298    	; 0x2326 <__stack+0x127>
    21fc:	80 91 f6 05 	lds	r24, 0x05F6
    2200:	8c 30       	cpi	r24, 0x0C	; 12
    2202:	08 f4       	brcc	.+2      	; 0x2206 <__stack+0x7>
    2204:	90 c0       	rjmp	.+288    	; 0x2326 <__stack+0x127>
    2206:	80 91 47 06 	lds	r24, 0x0647
    220a:	83 fd       	sbrc	r24, 3
    220c:	8c c0       	rjmp	.+280    	; 0x2326 <__stack+0x127>
		{
			if((12 <= category_size_1) && (no_of_votes_cat1 != 0))
    220e:	e9 81       	ldd	r30, Y+1	; 0x01
    2210:	ec 30       	cpi	r30, 0x0C	; 12
    2212:	70 f0       	brcs	.+28     	; 0x2230 <__stack+0x31>
    2214:	bb 20       	and	r11, r11
    2216:	e9 f0       	breq	.+58     	; 0x2252 <__stack+0x53>
			{
				//USART_putstring("12C1 ");
				vote_indicator_12 = 1;	// Indicating button 9 was presses.
    2218:	80 91 47 06 	lds	r24, 0x0647
    221c:	88 60       	ori	r24, 0x08	; 8
    221e:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 12);
				deactivate_category_buttons_and_save(button12_addr, 12);
    2222:	86 e1       	ldi	r24, 0x16	; 22
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	6c e0       	ldi	r22, 0x0C	; 12
    2228:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat1--;
    222c:	ba 94       	dec	r11
    222e:	7b c0       	rjmp	.+246    	; 0x2326 <__stack+0x127>
			}
			else if((12 > category_size_1) && (12 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    2230:	fb e0       	ldi	r31, 0x0B	; 11
    2232:	f5 15       	cp	r31, r5
    2234:	88 f4       	brcc	.+34     	; 0x2258 <__stack+0x59>
    2236:	cc 20       	and	r12, r12
    2238:	01 f1       	breq	.+64     	; 0x227a <__stack+0x7b>
			{
				//USART_putstring("12C2 ");
				vote_indicator_12 = 1;	// Indicating button 12 was presses.
    223a:	80 91 47 06 	lds	r24, 0x0647
    223e:	88 60       	ori	r24, 0x08	; 8
    2240:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button12_addr, 12);
    2244:	86 e1       	ldi	r24, 0x16	; 22
    2246:	90 e0       	ldi	r25, 0x00	; 0
    2248:	6c e0       	ldi	r22, 0x0C	; 12
    224a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 12);
				no_of_votes_cat2--;
    224e:	ca 94       	dec	r12
    2250:	6a c0       	rjmp	.+212    	; 0x2326 <__stack+0x127>
			}
			else if((12 > category_size_2) && (12 <= category_size_3) && (no_of_votes_cat3 != 0))
    2252:	8b e0       	ldi	r24, 0x0B	; 11
    2254:	85 15       	cp	r24, r5
    2256:	88 f0       	brcs	.+34     	; 0x227a <__stack+0x7b>
    2258:	9b e0       	ldi	r25, 0x0B	; 11
    225a:	97 15       	cp	r25, r7
    225c:	88 f4       	brcc	.+34     	; 0x2280 <__stack+0x81>
    225e:	ff 20       	and	r15, r15
    2260:	01 f1       	breq	.+64     	; 0x22a2 <__stack+0xa3>
			{
				//USART_putstring("12C3 ");
				vote_indicator_12 = 1;	// Indicating button 12 was presses.
    2262:	80 91 47 06 	lds	r24, 0x0647
    2266:	88 60       	ori	r24, 0x08	; 8
    2268:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button12_addr, 12);
    226c:	86 e1       	ldi	r24, 0x16	; 22
    226e:	90 e0       	ldi	r25, 0x00	; 0
    2270:	6c e0       	ldi	r22, 0x0C	; 12
    2272:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 12);
				no_of_votes_cat3--;
    2276:	fa 94       	dec	r15
    2278:	56 c0       	rjmp	.+172    	; 0x2326 <__stack+0x127>
			}
			else if((12 > category_size_3) && (12 <= category_size_4) && (no_of_votes_cat4 != 0))
    227a:	ab e0       	ldi	r26, 0x0B	; 11
    227c:	a7 15       	cp	r26, r7
    227e:	88 f0       	brcs	.+34     	; 0x22a2 <__stack+0xa3>
    2280:	bb e0       	ldi	r27, 0x0B	; 11
    2282:	b9 15       	cp	r27, r9
    2284:	88 f4       	brcc	.+34     	; 0x22a8 <__stack+0xa9>
    2286:	22 20       	and	r2, r2
    2288:	01 f1       	breq	.+64     	; 0x22ca <__stack+0xcb>
			{
				//USART_putstring("12C4 ");
				vote_indicator_12 = 1;	// Indicating button 12 was presses.
    228a:	80 91 47 06 	lds	r24, 0x0647
    228e:	88 60       	ori	r24, 0x08	; 8
    2290:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button12_addr, 12);
    2294:	86 e1       	ldi	r24, 0x16	; 22
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	6c e0       	ldi	r22, 0x0C	; 12
    229a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 12);
				no_of_votes_cat4--;
    229e:	2a 94       	dec	r2
    22a0:	42 c0       	rjmp	.+132    	; 0x2326 <__stack+0x127>
			}
			else if((12 > category_size_4) && (12 <= category_size_5) && (no_of_votes_cat5 != 0))
    22a2:	eb e0       	ldi	r30, 0x0B	; 11
    22a4:	e9 15       	cp	r30, r9
    22a6:	88 f0       	brcs	.+34     	; 0x22ca <__stack+0xcb>
    22a8:	fb e0       	ldi	r31, 0x0B	; 11
    22aa:	fa 15       	cp	r31, r10
    22ac:	88 f4       	brcc	.+34     	; 0x22d0 <__stack+0xd1>
    22ae:	33 20       	and	r3, r3
    22b0:	01 f1       	breq	.+64     	; 0x22f2 <__stack+0xf3>
			{
				//USART_putstring("12C5 ");
				vote_indicator_12 = 1;	// Indicating button 12 was presses.
    22b2:	80 91 47 06 	lds	r24, 0x0647
    22b6:	88 60       	ori	r24, 0x08	; 8
    22b8:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 12);
				deactivate_category_buttons_and_save(button12_addr, 12);
    22bc:	86 e1       	ldi	r24, 0x16	; 22
    22be:	90 e0       	ldi	r25, 0x00	; 0
    22c0:	6c e0       	ldi	r22, 0x0C	; 12
    22c2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    22c6:	3a 94       	dec	r3
    22c8:	2e c0       	rjmp	.+92     	; 0x2326 <__stack+0x127>
			}
			else if((12 > category_size_5) && (12 <= category_size_6) && (no_of_votes_cat6 != 0))
    22ca:	8b e0       	ldi	r24, 0x0B	; 11
    22cc:	8a 15       	cp	r24, r10
    22ce:	88 f0       	brcs	.+34     	; 0x22f2 <__stack+0xf3>
    22d0:	9b e0       	ldi	r25, 0x0B	; 11
    22d2:	98 15       	cp	r25, r8
    22d4:	70 f4       	brcc	.+28     	; 0x22f2 <__stack+0xf3>
    22d6:	11 23       	and	r17, r17
    22d8:	61 f0       	breq	.+24     	; 0x22f2 <__stack+0xf3>
			{
				//USART_putstring("12C6 ");
				vote_indicator_12 = 1;	// Indicating button 12 was presses.
    22da:	80 91 47 06 	lds	r24, 0x0647
    22de:	88 60       	ori	r24, 0x08	; 8
    22e0:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 12);
				deactivate_category_buttons_and_save(button12_addr, 12);
    22e4:	86 e1       	ldi	r24, 0x16	; 22
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	6c e0       	ldi	r22, 0x0C	; 12
    22ea:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    22ee:	11 50       	subi	r17, 0x01	; 1
    22f0:	1a c0       	rjmp	.+52     	; 0x2326 <__stack+0x127>
			}
			else if ((12 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    22f2:	80 91 64 05 	lds	r24, 0x0564
    22f6:	90 91 65 05 	lds	r25, 0x0565
    22fa:	8c 30       	cpi	r24, 0x0C	; 12
    22fc:	91 05       	cpc	r25, r1
    22fe:	98 f4       	brcc	.+38     	; 0x2326 <__stack+0x127>
    2300:	80 91 48 08 	lds	r24, 0x0848
    2304:	88 23       	and	r24, r24
    2306:	79 f0       	breq	.+30     	; 0x2326 <__stack+0x127>
			{
				//USART_putstring("12G ");		// comment this out in final product
				vote_indicator_12 = 1;			// Indicating button 1 was pressed
    2308:	80 91 47 06 	lds	r24, 0x0647
    230c:	88 60       	ori	r24, 0x08	; 8
    230e:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button12_addr, 12);
    2312:	86 e1       	ldi	r24, 0x16	; 22
    2314:	90 e0       	ldi	r25, 0x00	; 0
    2316:	6c e0       	ldi	r22, 0x0C	; 12
    2318:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 12);
				gen_vote_count--;
    231c:	80 91 48 08 	lds	r24, 0x0848
    2320:	81 50       	subi	r24, 0x01	; 1
    2322:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0C) && (13 <= candidate_count) && (vote_indicator_13 == 0))// && (gen_vote_count != 10))
    2326:	86 b1       	in	r24, 0x06	; 6
    2328:	80 ff       	sbrs	r24, 0
    232a:	b7 c0       	rjmp	.+366    	; 0x249a <__stack+0x29b>
    232c:	86 b1       	in	r24, 0x06	; 6
    232e:	81 fd       	sbrc	r24, 1
    2330:	b4 c0       	rjmp	.+360    	; 0x249a <__stack+0x29b>
    2332:	86 b1       	in	r24, 0x06	; 6
    2334:	82 fd       	sbrc	r24, 2
    2336:	b1 c0       	rjmp	.+354    	; 0x249a <__stack+0x29b>
    2338:	86 b1       	in	r24, 0x06	; 6
    233a:	83 fd       	sbrc	r24, 3
    233c:	ae c0       	rjmp	.+348    	; 0x249a <__stack+0x29b>
    233e:	83 b1       	in	r24, 0x03	; 3
    2340:	8f 70       	andi	r24, 0x0F	; 15
    2342:	8c 30       	cpi	r24, 0x0C	; 12
    2344:	09 f0       	breq	.+2      	; 0x2348 <__stack+0x149>
    2346:	a9 c0       	rjmp	.+338    	; 0x249a <__stack+0x29b>
    2348:	80 91 f6 05 	lds	r24, 0x05F6
    234c:	8d 30       	cpi	r24, 0x0D	; 13
    234e:	08 f4       	brcc	.+2      	; 0x2352 <__stack+0x153>
    2350:	a4 c0       	rjmp	.+328    	; 0x249a <__stack+0x29b>
    2352:	80 91 47 06 	lds	r24, 0x0647
    2356:	84 fd       	sbrc	r24, 4
    2358:	a0 c0       	rjmp	.+320    	; 0x249a <__stack+0x29b>
		{
			if((13 <= category_size_1) && (no_of_votes_cat1 != 0))
    235a:	a9 81       	ldd	r26, Y+1	; 0x01
    235c:	ad 30       	cpi	r26, 0x0D	; 13
    235e:	70 f0       	brcs	.+28     	; 0x237c <__stack+0x17d>
    2360:	bb 20       	and	r11, r11
    2362:	e9 f0       	breq	.+58     	; 0x239e <__stack+0x19f>
			{
				//USART_putstring("13C1 ");
				vote_indicator_13 = 1;	// Indicating button 9 was presses.
    2364:	80 91 47 06 	lds	r24, 0x0647
    2368:	80 61       	ori	r24, 0x10	; 16
    236a:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 13);
				deactivate_category_buttons_and_save(button13_addr, 13);
    236e:	88 e1       	ldi	r24, 0x18	; 24
    2370:	90 e0       	ldi	r25, 0x00	; 0
    2372:	6d e0       	ldi	r22, 0x0D	; 13
    2374:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat1--;
    2378:	ba 94       	dec	r11
    237a:	8f c0       	rjmp	.+286    	; 0x249a <__stack+0x29b>
			}
			else if((13 > category_size_1) && (13 <= category_size_2) && (no_of_votes_cat2 != 0))// check if this button in 2nd category combination of 1st and 2nd  category buttons.
    237c:	bc e0       	ldi	r27, 0x0C	; 12
    237e:	b5 15       	cp	r27, r5
    2380:	88 f4       	brcc	.+34     	; 0x23a4 <__stack+0x1a5>
    2382:	cc 20       	and	r12, r12
    2384:	01 f1       	breq	.+64     	; 0x23c6 <__stack+0x1c7>
			{
				//USART_putstring("13C2 ");
				vote_indicator_13 = 1;	// Indicating button 12 was presses.
    2386:	80 91 47 06 	lds	r24, 0x0647
    238a:	80 61       	ori	r24, 0x10	; 16
    238c:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 13);
				deactivate_category_buttons_and_save(button13_addr, 13);
    2390:	88 e1       	ldi	r24, 0x18	; 24
    2392:	90 e0       	ldi	r25, 0x00	; 0
    2394:	6d e0       	ldi	r22, 0x0D	; 13
    2396:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    239a:	ca 94       	dec	r12
    239c:	7e c0       	rjmp	.+252    	; 0x249a <__stack+0x29b>
			}
			else if((13 > category_size_2) && (13 <= category_size_3) && (no_of_votes_cat3 != 0))
    239e:	ec e0       	ldi	r30, 0x0C	; 12
    23a0:	e5 15       	cp	r30, r5
    23a2:	88 f0       	brcs	.+34     	; 0x23c6 <__stack+0x1c7>
    23a4:	fc e0       	ldi	r31, 0x0C	; 12
    23a6:	f7 15       	cp	r31, r7
    23a8:	88 f4       	brcc	.+34     	; 0x23cc <__stack+0x1cd>
    23aa:	ff 20       	and	r15, r15
    23ac:	01 f1       	breq	.+64     	; 0x23ee <__stack+0x1ef>
			{
				//USART_putstring("13C3 ");
				vote_indicator_13 = 1;	// Indicating button 12 was presses.
    23ae:	80 91 47 06 	lds	r24, 0x0647
    23b2:	80 61       	ori	r24, 0x10	; 16
    23b4:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 13);
				deactivate_category_buttons_and_save(button13_addr, 13);
    23b8:	88 e1       	ldi	r24, 0x18	; 24
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	6d e0       	ldi	r22, 0x0D	; 13
    23be:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;	
    23c2:	fa 94       	dec	r15
    23c4:	6a c0       	rjmp	.+212    	; 0x249a <__stack+0x29b>
			}
			else if((13 > category_size_3) && (13 <= category_size_4) && (no_of_votes_cat4 != 0))
    23c6:	8c e0       	ldi	r24, 0x0C	; 12
    23c8:	87 15       	cp	r24, r7
    23ca:	88 f0       	brcs	.+34     	; 0x23ee <__stack+0x1ef>
    23cc:	9c e0       	ldi	r25, 0x0C	; 12
    23ce:	99 15       	cp	r25, r9
    23d0:	88 f4       	brcc	.+34     	; 0x23f4 <__stack+0x1f5>
    23d2:	22 20       	and	r2, r2
    23d4:	01 f1       	breq	.+64     	; 0x2416 <__stack+0x217>
			{
				//USART_putstring("13C4 ");
				vote_indicator_13 = 1;	// Indicating button 12 was presses.
    23d6:	80 91 47 06 	lds	r24, 0x0647
    23da:	80 61       	ori	r24, 0x10	; 16
    23dc:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 13);
				deactivate_category_buttons_and_save(button13_addr, 13);
    23e0:	88 e1       	ldi	r24, 0x18	; 24
    23e2:	90 e0       	ldi	r25, 0x00	; 0
    23e4:	6d e0       	ldi	r22, 0x0D	; 13
    23e6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    23ea:	2a 94       	dec	r2
    23ec:	56 c0       	rjmp	.+172    	; 0x249a <__stack+0x29b>
			}
			else if((13 > category_size_4) && (13 <= category_size_5) && (no_of_votes_cat5 != 0))
    23ee:	ac e0       	ldi	r26, 0x0C	; 12
    23f0:	a9 15       	cp	r26, r9
    23f2:	88 f0       	brcs	.+34     	; 0x2416 <__stack+0x217>
    23f4:	bc e0       	ldi	r27, 0x0C	; 12
    23f6:	ba 15       	cp	r27, r10
    23f8:	88 f4       	brcc	.+34     	; 0x241c <__stack+0x21d>
    23fa:	33 20       	and	r3, r3
    23fc:	01 f1       	breq	.+64     	; 0x243e <__stack+0x23f>
			{
				//USART_putstring("13C5 ");
				vote_indicator_13 = 1;	// Indicating button 12 was presses.
    23fe:	80 91 47 06 	lds	r24, 0x0647
    2402:	80 61       	ori	r24, 0x10	; 16
    2404:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 13);
				deactivate_category_buttons_and_save(button13_addr, 13);
    2408:	88 e1       	ldi	r24, 0x18	; 24
    240a:	90 e0       	ldi	r25, 0x00	; 0
    240c:	6d e0       	ldi	r22, 0x0D	; 13
    240e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2412:	3a 94       	dec	r3
    2414:	42 c0       	rjmp	.+132    	; 0x249a <__stack+0x29b>
			}
			else if((13 > category_size_5) && (13 <= category_size_6) && (no_of_votes_cat6 != 0))
    2416:	ec e0       	ldi	r30, 0x0C	; 12
    2418:	ea 15       	cp	r30, r10
    241a:	88 f0       	brcs	.+34     	; 0x243e <__stack+0x23f>
    241c:	fc e0       	ldi	r31, 0x0C	; 12
    241e:	f8 15       	cp	r31, r8
    2420:	88 f4       	brcc	.+34     	; 0x2444 <__stack+0x245>
    2422:	11 23       	and	r17, r17
    2424:	01 f1       	breq	.+64     	; 0x2466 <__stack+0x267>
			{
				//USART_putstring("13C6 ");
				vote_indicator_13 = 1;	// Indicating button 12 was presses.
    2426:	80 91 47 06 	lds	r24, 0x0647
    242a:	80 61       	ori	r24, 0x10	; 16
    242c:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 13);
				deactivate_category_buttons_and_save(button13_addr, 13);
    2430:	88 e1       	ldi	r24, 0x18	; 24
    2432:	90 e0       	ldi	r25, 0x00	; 0
    2434:	6d e0       	ldi	r22, 0x0D	; 13
    2436:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    243a:	11 50       	subi	r17, 0x01	; 1
    243c:	2e c0       	rjmp	.+92     	; 0x249a <__stack+0x29b>
			}
			else if((13 > category_size_6) && (13 <= category_size_7) && (no_of_votes_cat7 != 0))
    243e:	8c e0       	ldi	r24, 0x0C	; 12
    2440:	88 15       	cp	r24, r8
    2442:	88 f0       	brcs	.+34     	; 0x2466 <__stack+0x267>
    2444:	9c e0       	ldi	r25, 0x0C	; 12
    2446:	96 15       	cp	r25, r6
    2448:	70 f4       	brcc	.+28     	; 0x2466 <__stack+0x267>
    244a:	00 23       	and	r16, r16
    244c:	61 f0       	breq	.+24     	; 0x2466 <__stack+0x267>
			{
				//USART_putstring("13C7 ");
				vote_indicator_13 = 1;	// Indicating button 12 was presses.
    244e:	80 91 47 06 	lds	r24, 0x0647
    2452:	80 61       	ori	r24, 0x10	; 16
    2454:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 13);
				deactivate_category_buttons_and_save(button13_addr, 13);
    2458:	88 e1       	ldi	r24, 0x18	; 24
    245a:	90 e0       	ldi	r25, 0x00	; 0
    245c:	6d e0       	ldi	r22, 0x0D	; 13
    245e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    2462:	01 50       	subi	r16, 0x01	; 1
    2464:	1a c0       	rjmp	.+52     	; 0x249a <__stack+0x29b>
				//vote_indicator_13 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 13);
				//deactivate_category_buttons_and_save(button13_addr, 13);
				//no_of_votes_cat8--;
			//}
			else if ((13 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    2466:	80 91 64 05 	lds	r24, 0x0564
    246a:	90 91 65 05 	lds	r25, 0x0565
    246e:	8d 30       	cpi	r24, 0x0D	; 13
    2470:	91 05       	cpc	r25, r1
    2472:	98 f4       	brcc	.+38     	; 0x249a <__stack+0x29b>
    2474:	80 91 48 08 	lds	r24, 0x0848
    2478:	88 23       	and	r24, r24
    247a:	79 f0       	breq	.+30     	; 0x249a <__stack+0x29b>
			{
				//USART_putstring("13G ");		// comment this out in final product
				vote_indicator_13 = 1;			// Indicating button 1 was pressed
    247c:	80 91 47 06 	lds	r24, 0x0647
    2480:	80 61       	ori	r24, 0x10	; 16
    2482:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button13_addr, 13);
    2486:	88 e1       	ldi	r24, 0x18	; 24
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	6d e0       	ldi	r22, 0x0D	; 13
    248c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 13);
				gen_vote_count--;
    2490:	80 91 48 08 	lds	r24, 0x0848
    2494:	81 50       	subi	r24, 0x01	; 1
    2496:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0D) && (14 <= candidate_count) && vote_indicator_14==0)
    249a:	86 b1       	in	r24, 0x06	; 6
    249c:	80 ff       	sbrs	r24, 0
    249e:	b7 c0       	rjmp	.+366    	; 0x260e <__stack+0x40f>
    24a0:	86 b1       	in	r24, 0x06	; 6
    24a2:	81 fd       	sbrc	r24, 1
    24a4:	b4 c0       	rjmp	.+360    	; 0x260e <__stack+0x40f>
    24a6:	86 b1       	in	r24, 0x06	; 6
    24a8:	82 fd       	sbrc	r24, 2
    24aa:	b1 c0       	rjmp	.+354    	; 0x260e <__stack+0x40f>
    24ac:	86 b1       	in	r24, 0x06	; 6
    24ae:	83 fd       	sbrc	r24, 3
    24b0:	ae c0       	rjmp	.+348    	; 0x260e <__stack+0x40f>
    24b2:	83 b1       	in	r24, 0x03	; 3
    24b4:	8f 70       	andi	r24, 0x0F	; 15
    24b6:	8d 30       	cpi	r24, 0x0D	; 13
    24b8:	09 f0       	breq	.+2      	; 0x24bc <__stack+0x2bd>
    24ba:	a9 c0       	rjmp	.+338    	; 0x260e <__stack+0x40f>
    24bc:	80 91 f6 05 	lds	r24, 0x05F6
    24c0:	8e 30       	cpi	r24, 0x0E	; 14
    24c2:	08 f4       	brcc	.+2      	; 0x24c6 <__stack+0x2c7>
    24c4:	a4 c0       	rjmp	.+328    	; 0x260e <__stack+0x40f>
    24c6:	80 91 47 06 	lds	r24, 0x0647
    24ca:	85 fd       	sbrc	r24, 5
    24cc:	a0 c0       	rjmp	.+320    	; 0x260e <__stack+0x40f>
		{
			if((14 <= category_size_1) && (no_of_votes_cat1 != 0))
    24ce:	a9 81       	ldd	r26, Y+1	; 0x01
    24d0:	ae 30       	cpi	r26, 0x0E	; 14
    24d2:	70 f0       	brcs	.+28     	; 0x24f0 <__stack+0x2f1>
    24d4:	bb 20       	and	r11, r11
    24d6:	e9 f0       	breq	.+58     	; 0x2512 <__stack+0x313>
			{
				//USART_putstring("14C1 ");
				vote_indicator_14 = 1;	// Indicating button 9 was presses.
    24d8:	80 91 47 06 	lds	r24, 0x0647
    24dc:	80 62       	ori	r24, 0x20	; 32
    24de:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 14);
				deactivate_category_buttons_and_save(button14_addr, 14);
    24e2:	8a e1       	ldi	r24, 0x1A	; 26
    24e4:	90 e0       	ldi	r25, 0x00	; 0
    24e6:	6e e0       	ldi	r22, 0x0E	; 14
    24e8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat1--;
    24ec:	ba 94       	dec	r11
    24ee:	8f c0       	rjmp	.+286    	; 0x260e <__stack+0x40f>
			}
			else if((14 > category_size_1) && (14 <= category_size_2) && (no_of_votes_cat2 != 0))
    24f0:	bd e0       	ldi	r27, 0x0D	; 13
    24f2:	b5 15       	cp	r27, r5
    24f4:	88 f4       	brcc	.+34     	; 0x2518 <__stack+0x319>
    24f6:	cc 20       	and	r12, r12
    24f8:	01 f1       	breq	.+64     	; 0x253a <__stack+0x33b>
			{
				//USART_putstring("14C2 ");
				vote_indicator_14 = 1;	// Indicating button 12 was presses.
    24fa:	80 91 47 06 	lds	r24, 0x0647
    24fe:	80 62       	ori	r24, 0x20	; 32
    2500:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 14);
				deactivate_category_buttons_and_save(button14_addr, 14);
    2504:	8a e1       	ldi	r24, 0x1A	; 26
    2506:	90 e0       	ldi	r25, 0x00	; 0
    2508:	6e e0       	ldi	r22, 0x0E	; 14
    250a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    250e:	ca 94       	dec	r12
    2510:	7e c0       	rjmp	.+252    	; 0x260e <__stack+0x40f>
			}
			else if((14 > category_size_2) && (14 <= category_size_3) && (no_of_votes_cat3 != 0))
    2512:	ed e0       	ldi	r30, 0x0D	; 13
    2514:	e5 15       	cp	r30, r5
    2516:	88 f0       	brcs	.+34     	; 0x253a <__stack+0x33b>
    2518:	fd e0       	ldi	r31, 0x0D	; 13
    251a:	f7 15       	cp	r31, r7
    251c:	88 f4       	brcc	.+34     	; 0x2540 <__stack+0x341>
    251e:	ff 20       	and	r15, r15
    2520:	01 f1       	breq	.+64     	; 0x2562 <__stack+0x363>
			{
				//USART_putstring("14C3 ");
				vote_indicator_14 = 1;	// Indicating button 12 was presses.
    2522:	80 91 47 06 	lds	r24, 0x0647
    2526:	80 62       	ori	r24, 0x20	; 32
    2528:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 14);
				deactivate_category_buttons_and_save(button14_addr, 14);
    252c:	8a e1       	ldi	r24, 0x1A	; 26
    252e:	90 e0       	ldi	r25, 0x00	; 0
    2530:	6e e0       	ldi	r22, 0x0E	; 14
    2532:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    2536:	fa 94       	dec	r15
    2538:	6a c0       	rjmp	.+212    	; 0x260e <__stack+0x40f>
			}
			else if((14 > category_size_3) && (14 <= category_size_4) && (no_of_votes_cat4 != 0))
    253a:	8d e0       	ldi	r24, 0x0D	; 13
    253c:	87 15       	cp	r24, r7
    253e:	88 f0       	brcs	.+34     	; 0x2562 <__stack+0x363>
    2540:	9d e0       	ldi	r25, 0x0D	; 13
    2542:	99 15       	cp	r25, r9
    2544:	88 f4       	brcc	.+34     	; 0x2568 <__stack+0x369>
    2546:	22 20       	and	r2, r2
    2548:	01 f1       	breq	.+64     	; 0x258a <__stack+0x38b>
			{
				//USART_putstring("14C4 ");
				vote_indicator_14 = 1;	// Indicating button 12 was presses.
    254a:	80 91 47 06 	lds	r24, 0x0647
    254e:	80 62       	ori	r24, 0x20	; 32
    2550:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 14);
				deactivate_category_buttons_and_save(button14_addr, 14);
    2554:	8a e1       	ldi	r24, 0x1A	; 26
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	6e e0       	ldi	r22, 0x0E	; 14
    255a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    255e:	2a 94       	dec	r2
    2560:	56 c0       	rjmp	.+172    	; 0x260e <__stack+0x40f>
			}
			else if((14 > category_size_4) && (14 <= category_size_5) && (no_of_votes_cat5 != 0))
    2562:	ad e0       	ldi	r26, 0x0D	; 13
    2564:	a9 15       	cp	r26, r9
    2566:	88 f0       	brcs	.+34     	; 0x258a <__stack+0x38b>
    2568:	bd e0       	ldi	r27, 0x0D	; 13
    256a:	ba 15       	cp	r27, r10
    256c:	88 f4       	brcc	.+34     	; 0x2590 <__stack+0x391>
    256e:	33 20       	and	r3, r3
    2570:	01 f1       	breq	.+64     	; 0x25b2 <__stack+0x3b3>
			{
				//USART_putstring("14C5 ");
				vote_indicator_14 = 1;	// Indicating button 12 was presses.
    2572:	80 91 47 06 	lds	r24, 0x0647
    2576:	80 62       	ori	r24, 0x20	; 32
    2578:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 14);
				deactivate_category_buttons_and_save(button14_addr, 14);
    257c:	8a e1       	ldi	r24, 0x1A	; 26
    257e:	90 e0       	ldi	r25, 0x00	; 0
    2580:	6e e0       	ldi	r22, 0x0E	; 14
    2582:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2586:	3a 94       	dec	r3
    2588:	42 c0       	rjmp	.+132    	; 0x260e <__stack+0x40f>
			}
			else if((14 > category_size_5) && (14 <= category_size_6) && (no_of_votes_cat6 != 0))
    258a:	ed e0       	ldi	r30, 0x0D	; 13
    258c:	ea 15       	cp	r30, r10
    258e:	88 f0       	brcs	.+34     	; 0x25b2 <__stack+0x3b3>
    2590:	fd e0       	ldi	r31, 0x0D	; 13
    2592:	f8 15       	cp	r31, r8
    2594:	88 f4       	brcc	.+34     	; 0x25b8 <__stack+0x3b9>
    2596:	11 23       	and	r17, r17
    2598:	01 f1       	breq	.+64     	; 0x25da <__stack+0x3db>
			{
				//USART_putstring("14C6 ");
				vote_indicator_14 = 1;	// Indicating button 12 was presses.
    259a:	80 91 47 06 	lds	r24, 0x0647
    259e:	80 62       	ori	r24, 0x20	; 32
    25a0:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 14);
				deactivate_category_buttons_and_save(button14_addr, 14);
    25a4:	8a e1       	ldi	r24, 0x1A	; 26
    25a6:	90 e0       	ldi	r25, 0x00	; 0
    25a8:	6e e0       	ldi	r22, 0x0E	; 14
    25aa:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    25ae:	11 50       	subi	r17, 0x01	; 1
    25b0:	2e c0       	rjmp	.+92     	; 0x260e <__stack+0x40f>
			}
			else if((14 > category_size_6) && (14 <= category_size_7) && (no_of_votes_cat7 != 0))
    25b2:	8d e0       	ldi	r24, 0x0D	; 13
    25b4:	88 15       	cp	r24, r8
    25b6:	88 f0       	brcs	.+34     	; 0x25da <__stack+0x3db>
    25b8:	9d e0       	ldi	r25, 0x0D	; 13
    25ba:	96 15       	cp	r25, r6
    25bc:	70 f4       	brcc	.+28     	; 0x25da <__stack+0x3db>
    25be:	00 23       	and	r16, r16
    25c0:	61 f0       	breq	.+24     	; 0x25da <__stack+0x3db>
			{
				//USART_putstring("14C7 ");
				vote_indicator_14 = 1;	// Indicating button 12 was presses.
    25c2:	80 91 47 06 	lds	r24, 0x0647
    25c6:	80 62       	ori	r24, 0x20	; 32
    25c8:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 14);
				deactivate_category_buttons_and_save(button14_addr, 14);
    25cc:	8a e1       	ldi	r24, 0x1A	; 26
    25ce:	90 e0       	ldi	r25, 0x00	; 0
    25d0:	6e e0       	ldi	r22, 0x0E	; 14
    25d2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    25d6:	01 50       	subi	r16, 0x01	; 1
    25d8:	1a c0       	rjmp	.+52     	; 0x260e <__stack+0x40f>
				//vote_indicator_14 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 14);
				//deactivate_category_buttons_and_save(button14_addr, 14);
				//no_of_votes_cat8--;
			//}
			else if ((14 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    25da:	80 91 64 05 	lds	r24, 0x0564
    25de:	90 91 65 05 	lds	r25, 0x0565
    25e2:	8e 30       	cpi	r24, 0x0E	; 14
    25e4:	91 05       	cpc	r25, r1
    25e6:	98 f4       	brcc	.+38     	; 0x260e <__stack+0x40f>
    25e8:	80 91 48 08 	lds	r24, 0x0848
    25ec:	88 23       	and	r24, r24
    25ee:	79 f0       	breq	.+30     	; 0x260e <__stack+0x40f>
			{
				//USART_putstring("14G ");		// comment this out in final product
				vote_indicator_14 = 1;			// Indicating button 1 was pressed
    25f0:	80 91 47 06 	lds	r24, 0x0647
    25f4:	80 62       	ori	r24, 0x20	; 32
    25f6:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button14_addr, 14);
    25fa:	8a e1       	ldi	r24, 0x1A	; 26
    25fc:	90 e0       	ldi	r25, 0x00	; 0
    25fe:	6e e0       	ldi	r22, 0x0E	; 14
    2600:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 14);
				gen_vote_count--;
    2604:	80 91 48 08 	lds	r24, 0x0848
    2608:	81 50       	subi	r24, 0x01	; 1
    260a:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0E) && (15 <= candidate_count) && (vote_indicator_15==0))
    260e:	86 b1       	in	r24, 0x06	; 6
    2610:	80 ff       	sbrs	r24, 0
    2612:	b7 c0       	rjmp	.+366    	; 0x2782 <__stack+0x583>
    2614:	86 b1       	in	r24, 0x06	; 6
    2616:	81 fd       	sbrc	r24, 1
    2618:	b4 c0       	rjmp	.+360    	; 0x2782 <__stack+0x583>
    261a:	86 b1       	in	r24, 0x06	; 6
    261c:	82 fd       	sbrc	r24, 2
    261e:	b1 c0       	rjmp	.+354    	; 0x2782 <__stack+0x583>
    2620:	86 b1       	in	r24, 0x06	; 6
    2622:	83 fd       	sbrc	r24, 3
    2624:	ae c0       	rjmp	.+348    	; 0x2782 <__stack+0x583>
    2626:	83 b1       	in	r24, 0x03	; 3
    2628:	8f 70       	andi	r24, 0x0F	; 15
    262a:	8e 30       	cpi	r24, 0x0E	; 14
    262c:	09 f0       	breq	.+2      	; 0x2630 <__stack+0x431>
    262e:	a9 c0       	rjmp	.+338    	; 0x2782 <__stack+0x583>
    2630:	80 91 f6 05 	lds	r24, 0x05F6
    2634:	8f 30       	cpi	r24, 0x0F	; 15
    2636:	08 f4       	brcc	.+2      	; 0x263a <__stack+0x43b>
    2638:	a4 c0       	rjmp	.+328    	; 0x2782 <__stack+0x583>
    263a:	80 91 47 06 	lds	r24, 0x0647
    263e:	86 fd       	sbrc	r24, 6
    2640:	a0 c0       	rjmp	.+320    	; 0x2782 <__stack+0x583>
		{
			if((15 <= category_size_1) && (no_of_votes_cat1 != 0))
    2642:	a9 81       	ldd	r26, Y+1	; 0x01
    2644:	af 30       	cpi	r26, 0x0F	; 15
    2646:	70 f0       	brcs	.+28     	; 0x2664 <__stack+0x465>
    2648:	bb 20       	and	r11, r11
    264a:	e9 f0       	breq	.+58     	; 0x2686 <__stack+0x487>
			{
				//USART_putstring("15C1 ");
				vote_indicator_15 = 1;	// Indicating button 9 was presses.
    264c:	80 91 47 06 	lds	r24, 0x0647
    2650:	80 64       	ori	r24, 0x40	; 64
    2652:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 15);
				deactivate_category_buttons_and_save(button15_addr, 15);
    2656:	8c e1       	ldi	r24, 0x1C	; 28
    2658:	90 e0       	ldi	r25, 0x00	; 0
    265a:	6f e0       	ldi	r22, 0x0F	; 15
    265c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat1--;
    2660:	ba 94       	dec	r11
    2662:	8f c0       	rjmp	.+286    	; 0x2782 <__stack+0x583>
			}
			else if((15 > category_size_1) && (15 <= category_size_2) && (no_of_votes_cat2 != 0))
    2664:	be e0       	ldi	r27, 0x0E	; 14
    2666:	b5 15       	cp	r27, r5
    2668:	88 f4       	brcc	.+34     	; 0x268c <__stack+0x48d>
    266a:	cc 20       	and	r12, r12
    266c:	01 f1       	breq	.+64     	; 0x26ae <__stack+0x4af>
			{
				//USART_putstring("15C2 ");
				vote_indicator_15 = 1;	// Indicating button 12 was presses.
    266e:	80 91 47 06 	lds	r24, 0x0647
    2672:	80 64       	ori	r24, 0x40	; 64
    2674:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 15);
				deactivate_category_buttons_and_save(button15_addr, 15);
    2678:	8c e1       	ldi	r24, 0x1C	; 28
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	6f e0       	ldi	r22, 0x0F	; 15
    267e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    2682:	ca 94       	dec	r12
    2684:	7e c0       	rjmp	.+252    	; 0x2782 <__stack+0x583>
			}
			else if((15 > category_size_2) && (15 <= category_size_3) && (no_of_votes_cat3 != 0))
    2686:	ee e0       	ldi	r30, 0x0E	; 14
    2688:	e5 15       	cp	r30, r5
    268a:	88 f0       	brcs	.+34     	; 0x26ae <__stack+0x4af>
    268c:	fe e0       	ldi	r31, 0x0E	; 14
    268e:	f7 15       	cp	r31, r7
    2690:	88 f4       	brcc	.+34     	; 0x26b4 <__stack+0x4b5>
    2692:	ff 20       	and	r15, r15
    2694:	01 f1       	breq	.+64     	; 0x26d6 <__stack+0x4d7>
			{
				//USART_putstring("15C3 ");
				vote_indicator_15 = 1;	// Indicating button 12 was presses.
    2696:	80 91 47 06 	lds	r24, 0x0647
    269a:	80 64       	ori	r24, 0x40	; 64
    269c:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 15);
				deactivate_category_buttons_and_save(button15_addr, 15);
    26a0:	8c e1       	ldi	r24, 0x1C	; 28
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	6f e0       	ldi	r22, 0x0F	; 15
    26a6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    26aa:	fa 94       	dec	r15
    26ac:	6a c0       	rjmp	.+212    	; 0x2782 <__stack+0x583>
			}
			else if((15 > category_size_3) && (15 <= category_size_4) && (no_of_votes_cat4 != 0))
    26ae:	8e e0       	ldi	r24, 0x0E	; 14
    26b0:	87 15       	cp	r24, r7
    26b2:	88 f0       	brcs	.+34     	; 0x26d6 <__stack+0x4d7>
    26b4:	9e e0       	ldi	r25, 0x0E	; 14
    26b6:	99 15       	cp	r25, r9
    26b8:	88 f4       	brcc	.+34     	; 0x26dc <__stack+0x4dd>
    26ba:	22 20       	and	r2, r2
    26bc:	01 f1       	breq	.+64     	; 0x26fe <__stack+0x4ff>
			{
				//USART_putstring("15C4 ");
				vote_indicator_15 = 1;	// Indicating button 12 was presses.
    26be:	80 91 47 06 	lds	r24, 0x0647
    26c2:	80 64       	ori	r24, 0x40	; 64
    26c4:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 15);
				deactivate_category_buttons_and_save(button15_addr, 15);
    26c8:	8c e1       	ldi	r24, 0x1C	; 28
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	6f e0       	ldi	r22, 0x0F	; 15
    26ce:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    26d2:	2a 94       	dec	r2
    26d4:	56 c0       	rjmp	.+172    	; 0x2782 <__stack+0x583>
			}
			else if((15 > category_size_4) && (15 <= category_size_5) && (no_of_votes_cat5 != 0))
    26d6:	ae e0       	ldi	r26, 0x0E	; 14
    26d8:	a9 15       	cp	r26, r9
    26da:	88 f0       	brcs	.+34     	; 0x26fe <__stack+0x4ff>
    26dc:	be e0       	ldi	r27, 0x0E	; 14
    26de:	ba 15       	cp	r27, r10
    26e0:	88 f4       	brcc	.+34     	; 0x2704 <__stack+0x505>
    26e2:	33 20       	and	r3, r3
    26e4:	01 f1       	breq	.+64     	; 0x2726 <__stack+0x527>
			{
				//USART_putstring("15C5 ");
				vote_indicator_15 = 1;	// Indicating button 12 was presses.
    26e6:	80 91 47 06 	lds	r24, 0x0647
    26ea:	80 64       	ori	r24, 0x40	; 64
    26ec:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 15);
				deactivate_category_buttons_and_save(button15_addr, 15);
    26f0:	8c e1       	ldi	r24, 0x1C	; 28
    26f2:	90 e0       	ldi	r25, 0x00	; 0
    26f4:	6f e0       	ldi	r22, 0x0F	; 15
    26f6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    26fa:	3a 94       	dec	r3
    26fc:	42 c0       	rjmp	.+132    	; 0x2782 <__stack+0x583>
			}
			else if((15 > category_size_5) && (15 <= category_size_6) && (no_of_votes_cat6 != 0))
    26fe:	ee e0       	ldi	r30, 0x0E	; 14
    2700:	ea 15       	cp	r30, r10
    2702:	88 f0       	brcs	.+34     	; 0x2726 <__stack+0x527>
    2704:	fe e0       	ldi	r31, 0x0E	; 14
    2706:	f8 15       	cp	r31, r8
    2708:	88 f4       	brcc	.+34     	; 0x272c <__stack+0x52d>
    270a:	11 23       	and	r17, r17
    270c:	01 f1       	breq	.+64     	; 0x274e <__stack+0x54f>
			{
				//USART_putstring("15C6 ");
				vote_indicator_15 = 1;	// Indicating button 12 was presses.
    270e:	80 91 47 06 	lds	r24, 0x0647
    2712:	80 64       	ori	r24, 0x40	; 64
    2714:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 15);
				deactivate_category_buttons_and_save(button15_addr, 15);
    2718:	8c e1       	ldi	r24, 0x1C	; 28
    271a:	90 e0       	ldi	r25, 0x00	; 0
    271c:	6f e0       	ldi	r22, 0x0F	; 15
    271e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    2722:	11 50       	subi	r17, 0x01	; 1
    2724:	2e c0       	rjmp	.+92     	; 0x2782 <__stack+0x583>
			}
			else if((15 > category_size_6) && (15 <= category_size_7) && (no_of_votes_cat7 != 0))
    2726:	8e e0       	ldi	r24, 0x0E	; 14
    2728:	88 15       	cp	r24, r8
    272a:	88 f0       	brcs	.+34     	; 0x274e <__stack+0x54f>
    272c:	9e e0       	ldi	r25, 0x0E	; 14
    272e:	96 15       	cp	r25, r6
    2730:	70 f4       	brcc	.+28     	; 0x274e <__stack+0x54f>
    2732:	00 23       	and	r16, r16
    2734:	61 f0       	breq	.+24     	; 0x274e <__stack+0x54f>
			{
				//USART_putstring("15C7 ");
				vote_indicator_15 = 1;	// Indicating button 12 was presses.
    2736:	80 91 47 06 	lds	r24, 0x0647
    273a:	80 64       	ori	r24, 0x40	; 64
    273c:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 15);
				deactivate_category_buttons_and_save(button15_addr, 15);
    2740:	8c e1       	ldi	r24, 0x1C	; 28
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	6f e0       	ldi	r22, 0x0F	; 15
    2746:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    274a:	01 50       	subi	r16, 0x01	; 1
    274c:	1a c0       	rjmp	.+52     	; 0x2782 <__stack+0x583>
				//vote_indicator_15 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 15);
				//deactivate_category_buttons_and_save(button15_addr, 15);
				//no_of_votes_cat8--;
			//}
			else if ((15 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    274e:	80 91 64 05 	lds	r24, 0x0564
    2752:	90 91 65 05 	lds	r25, 0x0565
    2756:	8f 30       	cpi	r24, 0x0F	; 15
    2758:	91 05       	cpc	r25, r1
    275a:	98 f4       	brcc	.+38     	; 0x2782 <__stack+0x583>
    275c:	80 91 48 08 	lds	r24, 0x0848
    2760:	88 23       	and	r24, r24
    2762:	79 f0       	breq	.+30     	; 0x2782 <__stack+0x583>
			{
				//USART_putstring("15G ");		// comment this out in final product
				vote_indicator_15 = 1;			// Indicating button 1 was pressed
    2764:	80 91 47 06 	lds	r24, 0x0647
    2768:	80 64       	ori	r24, 0x40	; 64
    276a:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button15_addr, 15);
    276e:	8c e1       	ldi	r24, 0x1C	; 28
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	6f e0       	ldi	r22, 0x0F	; 15
    2774:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 15);
				gen_vote_count--;
    2778:	80 91 48 08 	lds	r24, 0x0848
    277c:	81 50       	subi	r24, 0x01	; 1
    277e:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 1) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0F) && (16 <= candidate_count) && vote_indicator_16==0)
    2782:	86 b1       	in	r24, 0x06	; 6
    2784:	80 ff       	sbrs	r24, 0
    2786:	a4 c0       	rjmp	.+328    	; 0x28d0 <__stack+0x6d1>
    2788:	86 b1       	in	r24, 0x06	; 6
    278a:	81 fd       	sbrc	r24, 1
    278c:	a1 c0       	rjmp	.+322    	; 0x28d0 <__stack+0x6d1>
    278e:	86 b1       	in	r24, 0x06	; 6
    2790:	82 fd       	sbrc	r24, 2
    2792:	9e c0       	rjmp	.+316    	; 0x28d0 <__stack+0x6d1>
    2794:	86 b1       	in	r24, 0x06	; 6
    2796:	83 fd       	sbrc	r24, 3
    2798:	9b c0       	rjmp	.+310    	; 0x28d0 <__stack+0x6d1>
    279a:	83 b1       	in	r24, 0x03	; 3
    279c:	8f 70       	andi	r24, 0x0F	; 15
    279e:	8f 30       	cpi	r24, 0x0F	; 15
    27a0:	09 f0       	breq	.+2      	; 0x27a4 <__stack+0x5a5>
    27a2:	96 c0       	rjmp	.+300    	; 0x28d0 <__stack+0x6d1>
    27a4:	80 91 f6 05 	lds	r24, 0x05F6
    27a8:	80 31       	cpi	r24, 0x10	; 16
    27aa:	08 f4       	brcc	.+2      	; 0x27ae <__stack+0x5af>
    27ac:	91 c0       	rjmp	.+290    	; 0x28d0 <__stack+0x6d1>
    27ae:	80 91 47 06 	lds	r24, 0x0647
    27b2:	88 23       	and	r24, r24
    27b4:	0c f4       	brge	.+2      	; 0x27b8 <__stack+0x5b9>
    27b6:	8c c0       	rjmp	.+280    	; 0x28d0 <__stack+0x6d1>
		{
			if((16 > category_size_1) && (16 <= category_size_2) && (no_of_votes_cat2 != 0))
    27b8:	af e0       	ldi	r26, 0x0F	; 15
    27ba:	a5 15       	cp	r26, r5
    27bc:	70 f4       	brcc	.+28     	; 0x27da <__stack+0x5db>
    27be:	cc 20       	and	r12, r12
    27c0:	e9 f0       	breq	.+58     	; 0x27fc <__stack+0x5fd>
			{
				//USART_putstring("16C2 ");
				vote_indicator_16 = 1;	// Indicating button 12 was presses.
    27c2:	80 91 47 06 	lds	r24, 0x0647
    27c6:	80 68       	ori	r24, 0x80	; 128
    27c8:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 16);
				deactivate_category_buttons_and_save(button16_addr, 16);
    27cc:	8e e1       	ldi	r24, 0x1E	; 30
    27ce:	90 e0       	ldi	r25, 0x00	; 0
    27d0:	60 e1       	ldi	r22, 0x10	; 16
    27d2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    27d6:	ca 94       	dec	r12
    27d8:	7b c0       	rjmp	.+246    	; 0x28d0 <__stack+0x6d1>
			}
			else if((16 > category_size_2) && (16 <= category_size_3) && (no_of_votes_cat3 != 0))
    27da:	bf e0       	ldi	r27, 0x0F	; 15
    27dc:	b7 15       	cp	r27, r7
    27de:	88 f4       	brcc	.+34     	; 0x2802 <__stack+0x603>
    27e0:	ff 20       	and	r15, r15
    27e2:	01 f1       	breq	.+64     	; 0x2824 <__stack+0x625>
			{
				//USART_putstring("16C3 ");
				vote_indicator_16 = 1;	// Indicating button 12 was presses.
    27e4:	80 91 47 06 	lds	r24, 0x0647
    27e8:	80 68       	ori	r24, 0x80	; 128
    27ea:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 16);
				deactivate_category_buttons_and_save(button16_addr, 16);
    27ee:	8e e1       	ldi	r24, 0x1E	; 30
    27f0:	90 e0       	ldi	r25, 0x00	; 0
    27f2:	60 e1       	ldi	r22, 0x10	; 16
    27f4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    27f8:	fa 94       	dec	r15
    27fa:	6a c0       	rjmp	.+212    	; 0x28d0 <__stack+0x6d1>
			}
			else if((16 > category_size_3) && (16 <= category_size_4) && (no_of_votes_cat4 != 0))
    27fc:	ef e0       	ldi	r30, 0x0F	; 15
    27fe:	e7 15       	cp	r30, r7
    2800:	88 f0       	brcs	.+34     	; 0x2824 <__stack+0x625>
    2802:	ff e0       	ldi	r31, 0x0F	; 15
    2804:	f9 15       	cp	r31, r9
    2806:	88 f4       	brcc	.+34     	; 0x282a <__stack+0x62b>
    2808:	22 20       	and	r2, r2
    280a:	01 f1       	breq	.+64     	; 0x284c <__stack+0x64d>
			{
				//USART_putstring("16C4 ");
				vote_indicator_16 = 1;	// Indicating button 12 was presses.
    280c:	80 91 47 06 	lds	r24, 0x0647
    2810:	80 68       	ori	r24, 0x80	; 128
    2812:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 16);
				deactivate_category_buttons_and_save(button16_addr, 16);
    2816:	8e e1       	ldi	r24, 0x1E	; 30
    2818:	90 e0       	ldi	r25, 0x00	; 0
    281a:	60 e1       	ldi	r22, 0x10	; 16
    281c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    2820:	2a 94       	dec	r2
    2822:	56 c0       	rjmp	.+172    	; 0x28d0 <__stack+0x6d1>
			}
			else if((16 > category_size_4) && (16 <= category_size_5) && (no_of_votes_cat5 != 0))
    2824:	8f e0       	ldi	r24, 0x0F	; 15
    2826:	89 15       	cp	r24, r9
    2828:	88 f0       	brcs	.+34     	; 0x284c <__stack+0x64d>
    282a:	9f e0       	ldi	r25, 0x0F	; 15
    282c:	9a 15       	cp	r25, r10
    282e:	88 f4       	brcc	.+34     	; 0x2852 <__stack+0x653>
    2830:	33 20       	and	r3, r3
    2832:	01 f1       	breq	.+64     	; 0x2874 <__stack+0x675>
			{
				//USART_putstring("16C5 ");
				vote_indicator_16 = 1;	// Indicating button 12 was presses.
    2834:	80 91 47 06 	lds	r24, 0x0647
    2838:	80 68       	ori	r24, 0x80	; 128
    283a:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 16);
				deactivate_category_buttons_and_save(button16_addr, 16);
    283e:	8e e1       	ldi	r24, 0x1E	; 30
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	60 e1       	ldi	r22, 0x10	; 16
    2844:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2848:	3a 94       	dec	r3
    284a:	42 c0       	rjmp	.+132    	; 0x28d0 <__stack+0x6d1>
			}
			else if((16 > category_size_5) && (16 <= category_size_6) && (no_of_votes_cat6 != 0))
    284c:	af e0       	ldi	r26, 0x0F	; 15
    284e:	aa 15       	cp	r26, r10
    2850:	88 f0       	brcs	.+34     	; 0x2874 <__stack+0x675>
    2852:	bf e0       	ldi	r27, 0x0F	; 15
    2854:	b8 15       	cp	r27, r8
    2856:	88 f4       	brcc	.+34     	; 0x287a <__stack+0x67b>
    2858:	11 23       	and	r17, r17
    285a:	01 f1       	breq	.+64     	; 0x289c <__stack+0x69d>
			{
				//USART_putstring("16C6 ");
				vote_indicator_16 = 1;	// Indicating button 12 was presses.
    285c:	80 91 47 06 	lds	r24, 0x0647
    2860:	80 68       	ori	r24, 0x80	; 128
    2862:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 16);
				deactivate_category_buttons_and_save(button16_addr, 16);
    2866:	8e e1       	ldi	r24, 0x1E	; 30
    2868:	90 e0       	ldi	r25, 0x00	; 0
    286a:	60 e1       	ldi	r22, 0x10	; 16
    286c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    2870:	11 50       	subi	r17, 0x01	; 1
    2872:	2e c0       	rjmp	.+92     	; 0x28d0 <__stack+0x6d1>
			}
			else if((16 > category_size_6) && (16 <= category_size_7) && (no_of_votes_cat7 != 0))
    2874:	ef e0       	ldi	r30, 0x0F	; 15
    2876:	e8 15       	cp	r30, r8
    2878:	88 f0       	brcs	.+34     	; 0x289c <__stack+0x69d>
    287a:	ff e0       	ldi	r31, 0x0F	; 15
    287c:	f6 15       	cp	r31, r6
    287e:	70 f4       	brcc	.+28     	; 0x289c <__stack+0x69d>
    2880:	00 23       	and	r16, r16
    2882:	61 f0       	breq	.+24     	; 0x289c <__stack+0x69d>
			{
				//USART_putstring("16C7 ");
				vote_indicator_16 = 1;	// Indicating button 12 was presses.
    2884:	80 91 47 06 	lds	r24, 0x0647
    2888:	80 68       	ori	r24, 0x80	; 128
    288a:	80 93 47 06 	sts	0x0647, r24
				//i2c_send_byte(PIC_DEV_ADDR, 16);
				deactivate_category_buttons_and_save(button16_addr, 16);
    288e:	8e e1       	ldi	r24, 0x1E	; 30
    2890:	90 e0       	ldi	r25, 0x00	; 0
    2892:	60 e1       	ldi	r22, 0x10	; 16
    2894:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    2898:	01 50       	subi	r16, 0x01	; 1
    289a:	1a c0       	rjmp	.+52     	; 0x28d0 <__stack+0x6d1>
				//vote_indicator_16 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 16);
				//deactivate_category_buttons_and_save(button16_addr, 16);
				//no_of_votes_cat8--;
			//}
			else if ((16 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    289c:	80 91 64 05 	lds	r24, 0x0564
    28a0:	90 91 65 05 	lds	r25, 0x0565
    28a4:	80 31       	cpi	r24, 0x10	; 16
    28a6:	91 05       	cpc	r25, r1
    28a8:	98 f4       	brcc	.+38     	; 0x28d0 <__stack+0x6d1>
    28aa:	80 91 48 08 	lds	r24, 0x0848
    28ae:	88 23       	and	r24, r24
    28b0:	79 f0       	breq	.+30     	; 0x28d0 <__stack+0x6d1>
			{
				//USART_putstring("16G ");		// comment this out in final product
				vote_indicator_16 = 1;			// Indicating button 1 was pressed
    28b2:	80 91 47 06 	lds	r24, 0x0647
    28b6:	80 68       	ori	r24, 0x80	; 128
    28b8:	80 93 47 06 	sts	0x0647, r24
				deactivate_category_buttons_and_save(button16_addr, 16);
    28bc:	8e e1       	ldi	r24, 0x1E	; 30
    28be:	90 e0       	ldi	r25, 0x00	; 0
    28c0:	60 e1       	ldi	r22, 0x10	; 16
    28c2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 16);
				gen_vote_count--;
    28c6:	80 91 48 08 	lds	r24, 0x0848
    28ca:	81 50       	subi	r24, 0x01	; 1
    28cc:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x00) && (17 <= candidate_count) && vote_indicator_17==0)
    28d0:	86 b1       	in	r24, 0x06	; 6
    28d2:	81 ff       	sbrs	r24, 1
    28d4:	a5 c0       	rjmp	.+330    	; 0x2a20 <__stack+0x821>
    28d6:	86 b1       	in	r24, 0x06	; 6
    28d8:	80 fd       	sbrc	r24, 0
    28da:	a2 c0       	rjmp	.+324    	; 0x2a20 <__stack+0x821>
    28dc:	86 b1       	in	r24, 0x06	; 6
    28de:	82 fd       	sbrc	r24, 2
    28e0:	9f c0       	rjmp	.+318    	; 0x2a20 <__stack+0x821>
    28e2:	86 b1       	in	r24, 0x06	; 6
    28e4:	83 fd       	sbrc	r24, 3
    28e6:	9c c0       	rjmp	.+312    	; 0x2a20 <__stack+0x821>
    28e8:	83 b1       	in	r24, 0x03	; 3
    28ea:	90 e0       	ldi	r25, 0x00	; 0
    28ec:	8f 70       	andi	r24, 0x0F	; 15
    28ee:	90 70       	andi	r25, 0x00	; 0
    28f0:	00 97       	sbiw	r24, 0x00	; 0
    28f2:	09 f0       	breq	.+2      	; 0x28f6 <__stack+0x6f7>
    28f4:	95 c0       	rjmp	.+298    	; 0x2a20 <__stack+0x821>
    28f6:	80 91 f6 05 	lds	r24, 0x05F6
    28fa:	81 31       	cpi	r24, 0x11	; 17
    28fc:	08 f4       	brcc	.+2      	; 0x2900 <__stack+0x701>
    28fe:	90 c0       	rjmp	.+288    	; 0x2a20 <__stack+0x821>
    2900:	80 91 0d 06 	lds	r24, 0x060D
    2904:	80 fd       	sbrc	r24, 0
    2906:	8c c0       	rjmp	.+280    	; 0x2a20 <__stack+0x821>
		{
			if((17 > category_size_1) && (17 <= category_size_2) && (no_of_votes_cat2 != 0))
    2908:	80 e1       	ldi	r24, 0x10	; 16
    290a:	85 15       	cp	r24, r5
    290c:	70 f4       	brcc	.+28     	; 0x292a <__stack+0x72b>
    290e:	cc 20       	and	r12, r12
    2910:	e9 f0       	breq	.+58     	; 0x294c <__stack+0x74d>
			{
				//USART_putstring("17C2 ");
				vote_indicator_17 = 1;	// Indicating button 12 was presses.
    2912:	80 91 0d 06 	lds	r24, 0x060D
    2916:	81 60       	ori	r24, 0x01	; 1
    2918:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 17);
				deactivate_category_buttons_and_save(button17_addr, 17);
    291c:	80 e2       	ldi	r24, 0x20	; 32
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	61 e1       	ldi	r22, 0x11	; 17
    2922:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    2926:	ca 94       	dec	r12
    2928:	7b c0       	rjmp	.+246    	; 0x2a20 <__stack+0x821>
			}
			else if((17 > category_size_2) && (17 <= category_size_3) && (no_of_votes_cat3 != 0))
    292a:	90 e1       	ldi	r25, 0x10	; 16
    292c:	97 15       	cp	r25, r7
    292e:	88 f4       	brcc	.+34     	; 0x2952 <__stack+0x753>
    2930:	ff 20       	and	r15, r15
    2932:	01 f1       	breq	.+64     	; 0x2974 <__stack+0x775>
			{
				//USART_putstring("17C3 ");
				vote_indicator_17 = 1;	// Indicating button 12 was presses.
    2934:	80 91 0d 06 	lds	r24, 0x060D
    2938:	81 60       	ori	r24, 0x01	; 1
    293a:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 17);
				deactivate_category_buttons_and_save(button17_addr, 17);
    293e:	80 e2       	ldi	r24, 0x20	; 32
    2940:	90 e0       	ldi	r25, 0x00	; 0
    2942:	61 e1       	ldi	r22, 0x11	; 17
    2944:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    2948:	fa 94       	dec	r15
    294a:	6a c0       	rjmp	.+212    	; 0x2a20 <__stack+0x821>
			}
			else if((17 > category_size_3) && (17 <= category_size_4) && (no_of_votes_cat4 != 0))
    294c:	a0 e1       	ldi	r26, 0x10	; 16
    294e:	a7 15       	cp	r26, r7
    2950:	88 f0       	brcs	.+34     	; 0x2974 <__stack+0x775>
    2952:	b0 e1       	ldi	r27, 0x10	; 16
    2954:	b9 15       	cp	r27, r9
    2956:	88 f4       	brcc	.+34     	; 0x297a <__stack+0x77b>
    2958:	22 20       	and	r2, r2
    295a:	01 f1       	breq	.+64     	; 0x299c <__stack+0x79d>
			{
				//USART_putstring("17C4 ");
				vote_indicator_17 = 1;	// Indicating button 12 was presses.
    295c:	80 91 0d 06 	lds	r24, 0x060D
    2960:	81 60       	ori	r24, 0x01	; 1
    2962:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 17);
				deactivate_category_buttons_and_save(button17_addr, 17);
    2966:	80 e2       	ldi	r24, 0x20	; 32
    2968:	90 e0       	ldi	r25, 0x00	; 0
    296a:	61 e1       	ldi	r22, 0x11	; 17
    296c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    2970:	2a 94       	dec	r2
    2972:	56 c0       	rjmp	.+172    	; 0x2a20 <__stack+0x821>
			}
			else if((17 > category_size_4) && (17 <= category_size_5) && (no_of_votes_cat5 != 0))
    2974:	e0 e1       	ldi	r30, 0x10	; 16
    2976:	e9 15       	cp	r30, r9
    2978:	88 f0       	brcs	.+34     	; 0x299c <__stack+0x79d>
    297a:	f0 e1       	ldi	r31, 0x10	; 16
    297c:	fa 15       	cp	r31, r10
    297e:	88 f4       	brcc	.+34     	; 0x29a2 <__stack+0x7a3>
    2980:	33 20       	and	r3, r3
    2982:	01 f1       	breq	.+64     	; 0x29c4 <__stack+0x7c5>
			{
				//USART_putstring("17C5 ");
				vote_indicator_17 = 1;	// Indicating button 12 was presses.
    2984:	80 91 0d 06 	lds	r24, 0x060D
    2988:	81 60       	ori	r24, 0x01	; 1
    298a:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 17);
				deactivate_category_buttons_and_save(button17_addr, 17);
    298e:	80 e2       	ldi	r24, 0x20	; 32
    2990:	90 e0       	ldi	r25, 0x00	; 0
    2992:	61 e1       	ldi	r22, 0x11	; 17
    2994:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2998:	3a 94       	dec	r3
    299a:	42 c0       	rjmp	.+132    	; 0x2a20 <__stack+0x821>
			}
			else if((17 > category_size_5) && (17 <= category_size_6) && (no_of_votes_cat6 != 0))
    299c:	80 e1       	ldi	r24, 0x10	; 16
    299e:	8a 15       	cp	r24, r10
    29a0:	88 f0       	brcs	.+34     	; 0x29c4 <__stack+0x7c5>
    29a2:	90 e1       	ldi	r25, 0x10	; 16
    29a4:	98 15       	cp	r25, r8
    29a6:	88 f4       	brcc	.+34     	; 0x29ca <__stack+0x7cb>
    29a8:	11 23       	and	r17, r17
    29aa:	01 f1       	breq	.+64     	; 0x29ec <__stack+0x7ed>
			{
				//USART_putstring("17C6 ");
				vote_indicator_17 = 1;	// Indicating button 12 was presses.
    29ac:	80 91 0d 06 	lds	r24, 0x060D
    29b0:	81 60       	ori	r24, 0x01	; 1
    29b2:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 17);
				deactivate_category_buttons_and_save(button17_addr, 17);
    29b6:	80 e2       	ldi	r24, 0x20	; 32
    29b8:	90 e0       	ldi	r25, 0x00	; 0
    29ba:	61 e1       	ldi	r22, 0x11	; 17
    29bc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    29c0:	11 50       	subi	r17, 0x01	; 1
    29c2:	2e c0       	rjmp	.+92     	; 0x2a20 <__stack+0x821>
			}
			else if((17 > category_size_6) && (17 <= category_size_7) && (no_of_votes_cat7 != 0))
    29c4:	a0 e1       	ldi	r26, 0x10	; 16
    29c6:	a8 15       	cp	r26, r8
    29c8:	88 f0       	brcs	.+34     	; 0x29ec <__stack+0x7ed>
    29ca:	b0 e1       	ldi	r27, 0x10	; 16
    29cc:	b6 15       	cp	r27, r6
    29ce:	70 f4       	brcc	.+28     	; 0x29ec <__stack+0x7ed>
    29d0:	00 23       	and	r16, r16
    29d2:	61 f0       	breq	.+24     	; 0x29ec <__stack+0x7ed>
			{
				//USART_putstring("17C7 ");
				vote_indicator_17 = 1;	// Indicating button 12 was presses.
    29d4:	80 91 0d 06 	lds	r24, 0x060D
    29d8:	81 60       	ori	r24, 0x01	; 1
    29da:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 17);
				deactivate_category_buttons_and_save(button17_addr, 17);
    29de:	80 e2       	ldi	r24, 0x20	; 32
    29e0:	90 e0       	ldi	r25, 0x00	; 0
    29e2:	61 e1       	ldi	r22, 0x11	; 17
    29e4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    29e8:	01 50       	subi	r16, 0x01	; 1
    29ea:	1a c0       	rjmp	.+52     	; 0x2a20 <__stack+0x821>
				//vote_indicator_17 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 17);
				//deactivate_category_buttons_and_save(button17_addr, 17);
				//no_of_votes_cat8--;
			//}
			else if((17 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    29ec:	80 91 64 05 	lds	r24, 0x0564
    29f0:	90 91 65 05 	lds	r25, 0x0565
    29f4:	81 31       	cpi	r24, 0x11	; 17
    29f6:	91 05       	cpc	r25, r1
    29f8:	98 f4       	brcc	.+38     	; 0x2a20 <__stack+0x821>
    29fa:	80 91 48 08 	lds	r24, 0x0848
    29fe:	88 23       	and	r24, r24
    2a00:	79 f0       	breq	.+30     	; 0x2a20 <__stack+0x821>
			{
				//USART_putstring("17G ");		// comment this out in final product
				vote_indicator_17 = 1;			// Indicating button 1 was pressed
    2a02:	80 91 0d 06 	lds	r24, 0x060D
    2a06:	81 60       	ori	r24, 0x01	; 1
    2a08:	80 93 0d 06 	sts	0x060D, r24
				deactivate_category_buttons_and_save(button17_addr, 17);
    2a0c:	80 e2       	ldi	r24, 0x20	; 32
    2a0e:	90 e0       	ldi	r25, 0x00	; 0
    2a10:	61 e1       	ldi	r22, 0x11	; 17
    2a12:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 17);
				gen_vote_count--;
    2a16:	80 91 48 08 	lds	r24, 0x0848
    2a1a:	81 50       	subi	r24, 0x01	; 1
    2a1c:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x01) && (18 <= candidate_count) && vote_indicator_18==0)
    2a20:	86 b1       	in	r24, 0x06	; 6
    2a22:	81 ff       	sbrs	r24, 1
    2a24:	a3 c0       	rjmp	.+326    	; 0x2b6c <__stack+0x96d>
    2a26:	86 b1       	in	r24, 0x06	; 6
    2a28:	80 fd       	sbrc	r24, 0
    2a2a:	a0 c0       	rjmp	.+320    	; 0x2b6c <__stack+0x96d>
    2a2c:	86 b1       	in	r24, 0x06	; 6
    2a2e:	82 fd       	sbrc	r24, 2
    2a30:	9d c0       	rjmp	.+314    	; 0x2b6c <__stack+0x96d>
    2a32:	86 b1       	in	r24, 0x06	; 6
    2a34:	83 fd       	sbrc	r24, 3
    2a36:	9a c0       	rjmp	.+308    	; 0x2b6c <__stack+0x96d>
    2a38:	83 b1       	in	r24, 0x03	; 3
    2a3a:	8f 70       	andi	r24, 0x0F	; 15
    2a3c:	81 30       	cpi	r24, 0x01	; 1
    2a3e:	09 f0       	breq	.+2      	; 0x2a42 <__stack+0x843>
    2a40:	95 c0       	rjmp	.+298    	; 0x2b6c <__stack+0x96d>
    2a42:	80 91 f6 05 	lds	r24, 0x05F6
    2a46:	82 31       	cpi	r24, 0x12	; 18
    2a48:	08 f4       	brcc	.+2      	; 0x2a4c <__stack+0x84d>
    2a4a:	90 c0       	rjmp	.+288    	; 0x2b6c <__stack+0x96d>
    2a4c:	80 91 0d 06 	lds	r24, 0x060D
    2a50:	81 fd       	sbrc	r24, 1
    2a52:	8c c0       	rjmp	.+280    	; 0x2b6c <__stack+0x96d>
		{
			if((18 > category_size_1) && (18 <= category_size_2) && (no_of_votes_cat2 != 0))
    2a54:	e1 e1       	ldi	r30, 0x11	; 17
    2a56:	e5 15       	cp	r30, r5
    2a58:	70 f4       	brcc	.+28     	; 0x2a76 <__stack+0x877>
    2a5a:	cc 20       	and	r12, r12
    2a5c:	e9 f0       	breq	.+58     	; 0x2a98 <__stack+0x899>
			{
				//USART_putstring("18C2 ");
				vote_indicator_18 = 1;	// Indicating button 12 was presses.
    2a5e:	80 91 0d 06 	lds	r24, 0x060D
    2a62:	82 60       	ori	r24, 0x02	; 2
    2a64:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 18);
				deactivate_category_buttons_and_save(button18_addr, 18);
    2a68:	82 e2       	ldi	r24, 0x22	; 34
    2a6a:	90 e0       	ldi	r25, 0x00	; 0
    2a6c:	62 e1       	ldi	r22, 0x12	; 18
    2a6e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    2a72:	ca 94       	dec	r12
    2a74:	7b c0       	rjmp	.+246    	; 0x2b6c <__stack+0x96d>
			}
			else if((18 > category_size_2) && (18 <= category_size_3) && (no_of_votes_cat3 != 0))
    2a76:	f1 e1       	ldi	r31, 0x11	; 17
    2a78:	f7 15       	cp	r31, r7
    2a7a:	88 f4       	brcc	.+34     	; 0x2a9e <__stack+0x89f>
    2a7c:	ff 20       	and	r15, r15
    2a7e:	01 f1       	breq	.+64     	; 0x2ac0 <__stack+0x8c1>
			{
				//USART_putstring("18C3 ");
				vote_indicator_18 = 1;	// Indicating button 12 was presses.
    2a80:	80 91 0d 06 	lds	r24, 0x060D
    2a84:	82 60       	ori	r24, 0x02	; 2
    2a86:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 18);
				deactivate_category_buttons_and_save(button18_addr, 18);
    2a8a:	82 e2       	ldi	r24, 0x22	; 34
    2a8c:	90 e0       	ldi	r25, 0x00	; 0
    2a8e:	62 e1       	ldi	r22, 0x12	; 18
    2a90:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    2a94:	fa 94       	dec	r15
    2a96:	6a c0       	rjmp	.+212    	; 0x2b6c <__stack+0x96d>
			}
			else if((18 > category_size_3) && (18 <= category_size_4) && (no_of_votes_cat4 != 0))
    2a98:	81 e1       	ldi	r24, 0x11	; 17
    2a9a:	87 15       	cp	r24, r7
    2a9c:	88 f0       	brcs	.+34     	; 0x2ac0 <__stack+0x8c1>
    2a9e:	91 e1       	ldi	r25, 0x11	; 17
    2aa0:	99 15       	cp	r25, r9
    2aa2:	88 f4       	brcc	.+34     	; 0x2ac6 <__stack+0x8c7>
    2aa4:	22 20       	and	r2, r2
    2aa6:	01 f1       	breq	.+64     	; 0x2ae8 <__stack+0x8e9>
			{
				//USART_putstring("18C4 ");
				vote_indicator_18 = 1;	// Indicating button 12 was presses.
    2aa8:	80 91 0d 06 	lds	r24, 0x060D
    2aac:	82 60       	ori	r24, 0x02	; 2
    2aae:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 18);
				deactivate_category_buttons_and_save(button18_addr, 18);
    2ab2:	82 e2       	ldi	r24, 0x22	; 34
    2ab4:	90 e0       	ldi	r25, 0x00	; 0
    2ab6:	62 e1       	ldi	r22, 0x12	; 18
    2ab8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    2abc:	2a 94       	dec	r2
    2abe:	56 c0       	rjmp	.+172    	; 0x2b6c <__stack+0x96d>
			}
			else if((18 > category_size_4) && (18 <= category_size_5) && (no_of_votes_cat5 != 0))
    2ac0:	a1 e1       	ldi	r26, 0x11	; 17
    2ac2:	a9 15       	cp	r26, r9
    2ac4:	88 f0       	brcs	.+34     	; 0x2ae8 <__stack+0x8e9>
    2ac6:	b1 e1       	ldi	r27, 0x11	; 17
    2ac8:	ba 15       	cp	r27, r10
    2aca:	88 f4       	brcc	.+34     	; 0x2aee <__stack+0x8ef>
    2acc:	33 20       	and	r3, r3
    2ace:	01 f1       	breq	.+64     	; 0x2b10 <__stack+0x911>
			{
				//USART_putstring("18C5 ");
				vote_indicator_18 = 1;	// Indicating button 12 was presses.
    2ad0:	80 91 0d 06 	lds	r24, 0x060D
    2ad4:	82 60       	ori	r24, 0x02	; 2
    2ad6:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 18);
				deactivate_category_buttons_and_save(button18_addr, 18);
    2ada:	82 e2       	ldi	r24, 0x22	; 34
    2adc:	90 e0       	ldi	r25, 0x00	; 0
    2ade:	62 e1       	ldi	r22, 0x12	; 18
    2ae0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2ae4:	3a 94       	dec	r3
    2ae6:	42 c0       	rjmp	.+132    	; 0x2b6c <__stack+0x96d>
			}
			else if((18 > category_size_5) && (18 <= category_size_6) && (no_of_votes_cat6 != 0))
    2ae8:	e1 e1       	ldi	r30, 0x11	; 17
    2aea:	ea 15       	cp	r30, r10
    2aec:	88 f0       	brcs	.+34     	; 0x2b10 <__stack+0x911>
    2aee:	f1 e1       	ldi	r31, 0x11	; 17
    2af0:	f8 15       	cp	r31, r8
    2af2:	88 f4       	brcc	.+34     	; 0x2b16 <__stack+0x917>
    2af4:	11 23       	and	r17, r17
    2af6:	01 f1       	breq	.+64     	; 0x2b38 <__stack+0x939>
			{
				//USART_putstring("18C6 ");
				vote_indicator_18 = 1;	// Indicating button 12 was presses.
    2af8:	80 91 0d 06 	lds	r24, 0x060D
    2afc:	82 60       	ori	r24, 0x02	; 2
    2afe:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 18);
				deactivate_category_buttons_and_save(button18_addr, 18);
    2b02:	82 e2       	ldi	r24, 0x22	; 34
    2b04:	90 e0       	ldi	r25, 0x00	; 0
    2b06:	62 e1       	ldi	r22, 0x12	; 18
    2b08:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    2b0c:	11 50       	subi	r17, 0x01	; 1
    2b0e:	2e c0       	rjmp	.+92     	; 0x2b6c <__stack+0x96d>
			}
			else if((18 > category_size_6) && (18 <= category_size_7) && (no_of_votes_cat7 != 0))
    2b10:	81 e1       	ldi	r24, 0x11	; 17
    2b12:	88 15       	cp	r24, r8
    2b14:	88 f0       	brcs	.+34     	; 0x2b38 <__stack+0x939>
    2b16:	91 e1       	ldi	r25, 0x11	; 17
    2b18:	96 15       	cp	r25, r6
    2b1a:	70 f4       	brcc	.+28     	; 0x2b38 <__stack+0x939>
    2b1c:	00 23       	and	r16, r16
    2b1e:	61 f0       	breq	.+24     	; 0x2b38 <__stack+0x939>
			{
				//USART_putstring("18C7 ");
				vote_indicator_18 = 1;	// Indicating button 12 was presses.
    2b20:	80 91 0d 06 	lds	r24, 0x060D
    2b24:	82 60       	ori	r24, 0x02	; 2
    2b26:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 18);
				deactivate_category_buttons_and_save(button18_addr, 18);
    2b2a:	82 e2       	ldi	r24, 0x22	; 34
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	62 e1       	ldi	r22, 0x12	; 18
    2b30:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    2b34:	01 50       	subi	r16, 0x01	; 1
    2b36:	1a c0       	rjmp	.+52     	; 0x2b6c <__stack+0x96d>
				//vote_indicator_18 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 18);
				//deactivate_category_buttons_and_save(button18_addr, 18);
				//no_of_votes_cat8--;
			//}
			else if((18 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    2b38:	80 91 64 05 	lds	r24, 0x0564
    2b3c:	90 91 65 05 	lds	r25, 0x0565
    2b40:	82 31       	cpi	r24, 0x12	; 18
    2b42:	91 05       	cpc	r25, r1
    2b44:	98 f4       	brcc	.+38     	; 0x2b6c <__stack+0x96d>
    2b46:	80 91 48 08 	lds	r24, 0x0848
    2b4a:	88 23       	and	r24, r24
    2b4c:	79 f0       	breq	.+30     	; 0x2b6c <__stack+0x96d>
			{
				//USART_putstring("18G ");		// comment this out in final product
				vote_indicator_18 = 1;			// Indicating button 1 was pressed
    2b4e:	80 91 0d 06 	lds	r24, 0x060D
    2b52:	82 60       	ori	r24, 0x02	; 2
    2b54:	80 93 0d 06 	sts	0x060D, r24
				deactivate_category_buttons_and_save(button18_addr, 18);
    2b58:	82 e2       	ldi	r24, 0x22	; 34
    2b5a:	90 e0       	ldi	r25, 0x00	; 0
    2b5c:	62 e1       	ldi	r22, 0x12	; 18
    2b5e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 18);
				gen_vote_count--;
    2b62:	80 91 48 08 	lds	r24, 0x0848
    2b66:	81 50       	subi	r24, 0x01	; 1
    2b68:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x02) && (19 <= candidate_count) && vote_indicator_19==0)
    2b6c:	86 b1       	in	r24, 0x06	; 6
    2b6e:	81 ff       	sbrs	r24, 1
    2b70:	a3 c0       	rjmp	.+326    	; 0x2cb8 <__stack+0xab9>
    2b72:	86 b1       	in	r24, 0x06	; 6
    2b74:	80 fd       	sbrc	r24, 0
    2b76:	a0 c0       	rjmp	.+320    	; 0x2cb8 <__stack+0xab9>
    2b78:	86 b1       	in	r24, 0x06	; 6
    2b7a:	82 fd       	sbrc	r24, 2
    2b7c:	9d c0       	rjmp	.+314    	; 0x2cb8 <__stack+0xab9>
    2b7e:	86 b1       	in	r24, 0x06	; 6
    2b80:	83 fd       	sbrc	r24, 3
    2b82:	9a c0       	rjmp	.+308    	; 0x2cb8 <__stack+0xab9>
    2b84:	83 b1       	in	r24, 0x03	; 3
    2b86:	8f 70       	andi	r24, 0x0F	; 15
    2b88:	82 30       	cpi	r24, 0x02	; 2
    2b8a:	09 f0       	breq	.+2      	; 0x2b8e <__stack+0x98f>
    2b8c:	95 c0       	rjmp	.+298    	; 0x2cb8 <__stack+0xab9>
    2b8e:	80 91 f6 05 	lds	r24, 0x05F6
    2b92:	83 31       	cpi	r24, 0x13	; 19
    2b94:	08 f4       	brcc	.+2      	; 0x2b98 <__stack+0x999>
    2b96:	90 c0       	rjmp	.+288    	; 0x2cb8 <__stack+0xab9>
    2b98:	80 91 0d 06 	lds	r24, 0x060D
    2b9c:	82 fd       	sbrc	r24, 2
    2b9e:	8c c0       	rjmp	.+280    	; 0x2cb8 <__stack+0xab9>
		{
			if((19 > category_size_1) && (19 <= category_size_2) && (no_of_votes_cat2 != 0))
    2ba0:	a2 e1       	ldi	r26, 0x12	; 18
    2ba2:	a5 15       	cp	r26, r5
    2ba4:	70 f4       	brcc	.+28     	; 0x2bc2 <__stack+0x9c3>
    2ba6:	cc 20       	and	r12, r12
    2ba8:	e9 f0       	breq	.+58     	; 0x2be4 <__stack+0x9e5>
			{
				//USART_putstring("19C2 ");
				vote_indicator_19 = 1;	// Indicating button 12 was presses.
    2baa:	80 91 0d 06 	lds	r24, 0x060D
    2bae:	84 60       	ori	r24, 0x04	; 4
    2bb0:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 19);
				deactivate_category_buttons_and_save(button19_addr, 19);
    2bb4:	84 e2       	ldi	r24, 0x24	; 36
    2bb6:	90 e0       	ldi	r25, 0x00	; 0
    2bb8:	63 e1       	ldi	r22, 0x13	; 19
    2bba:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    2bbe:	ca 94       	dec	r12
    2bc0:	7b c0       	rjmp	.+246    	; 0x2cb8 <__stack+0xab9>
			}
			else if((19 > category_size_2) && (19 <= category_size_3) && (no_of_votes_cat3 != 0))
    2bc2:	b2 e1       	ldi	r27, 0x12	; 18
    2bc4:	b7 15       	cp	r27, r7
    2bc6:	88 f4       	brcc	.+34     	; 0x2bea <__stack+0x9eb>
    2bc8:	ff 20       	and	r15, r15
    2bca:	01 f1       	breq	.+64     	; 0x2c0c <__stack+0xa0d>
			{
				//USART_putstring("19C3 ");
				vote_indicator_19 = 1;	// Indicating button 12 was presses.
    2bcc:	80 91 0d 06 	lds	r24, 0x060D
    2bd0:	84 60       	ori	r24, 0x04	; 4
    2bd2:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 19);
				deactivate_category_buttons_and_save(button19_addr, 19);
    2bd6:	84 e2       	ldi	r24, 0x24	; 36
    2bd8:	90 e0       	ldi	r25, 0x00	; 0
    2bda:	63 e1       	ldi	r22, 0x13	; 19
    2bdc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    2be0:	fa 94       	dec	r15
    2be2:	6a c0       	rjmp	.+212    	; 0x2cb8 <__stack+0xab9>
			}
			else if((19 > category_size_3) && (19 <= category_size_4) && (no_of_votes_cat4 != 0))
    2be4:	e2 e1       	ldi	r30, 0x12	; 18
    2be6:	e7 15       	cp	r30, r7
    2be8:	88 f0       	brcs	.+34     	; 0x2c0c <__stack+0xa0d>
    2bea:	f2 e1       	ldi	r31, 0x12	; 18
    2bec:	f9 15       	cp	r31, r9
    2bee:	88 f4       	brcc	.+34     	; 0x2c12 <__stack+0xa13>
    2bf0:	22 20       	and	r2, r2
    2bf2:	01 f1       	breq	.+64     	; 0x2c34 <__stack+0xa35>
			{
				//USART_putstring("19C4 ");
				vote_indicator_19 = 1;	// Indicating button 12 was presses.
    2bf4:	80 91 0d 06 	lds	r24, 0x060D
    2bf8:	84 60       	ori	r24, 0x04	; 4
    2bfa:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 19);
				deactivate_category_buttons_and_save(button19_addr, 19);
    2bfe:	84 e2       	ldi	r24, 0x24	; 36
    2c00:	90 e0       	ldi	r25, 0x00	; 0
    2c02:	63 e1       	ldi	r22, 0x13	; 19
    2c04:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    2c08:	2a 94       	dec	r2
    2c0a:	56 c0       	rjmp	.+172    	; 0x2cb8 <__stack+0xab9>
			}
			else if((19 > category_size_4) && (19 <= category_size_5) && (no_of_votes_cat5 != 0))
    2c0c:	82 e1       	ldi	r24, 0x12	; 18
    2c0e:	89 15       	cp	r24, r9
    2c10:	88 f0       	brcs	.+34     	; 0x2c34 <__stack+0xa35>
    2c12:	92 e1       	ldi	r25, 0x12	; 18
    2c14:	9a 15       	cp	r25, r10
    2c16:	88 f4       	brcc	.+34     	; 0x2c3a <__stack+0xa3b>
    2c18:	33 20       	and	r3, r3
    2c1a:	01 f1       	breq	.+64     	; 0x2c5c <__stack+0xa5d>
			{
				//USART_putstring("19C5 ");
				vote_indicator_19 = 1;	// Indicating button 12 was presses.
    2c1c:	80 91 0d 06 	lds	r24, 0x060D
    2c20:	84 60       	ori	r24, 0x04	; 4
    2c22:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 19);
				deactivate_category_buttons_and_save(button19_addr, 19);
    2c26:	84 e2       	ldi	r24, 0x24	; 36
    2c28:	90 e0       	ldi	r25, 0x00	; 0
    2c2a:	63 e1       	ldi	r22, 0x13	; 19
    2c2c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2c30:	3a 94       	dec	r3
    2c32:	42 c0       	rjmp	.+132    	; 0x2cb8 <__stack+0xab9>
			}
			else if((19 > category_size_5) && (19 <= category_size_6) && (no_of_votes_cat6 != 0))
    2c34:	a2 e1       	ldi	r26, 0x12	; 18
    2c36:	aa 15       	cp	r26, r10
    2c38:	88 f0       	brcs	.+34     	; 0x2c5c <__stack+0xa5d>
    2c3a:	b2 e1       	ldi	r27, 0x12	; 18
    2c3c:	b8 15       	cp	r27, r8
    2c3e:	88 f4       	brcc	.+34     	; 0x2c62 <__stack+0xa63>
    2c40:	11 23       	and	r17, r17
    2c42:	01 f1       	breq	.+64     	; 0x2c84 <__stack+0xa85>
			{
				//USART_putstring("19C6 ");
				vote_indicator_19 = 1;	// Indicating button 12 was presses.
    2c44:	80 91 0d 06 	lds	r24, 0x060D
    2c48:	84 60       	ori	r24, 0x04	; 4
    2c4a:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 19);
				deactivate_category_buttons_and_save(button19_addr, 19);
    2c4e:	84 e2       	ldi	r24, 0x24	; 36
    2c50:	90 e0       	ldi	r25, 0x00	; 0
    2c52:	63 e1       	ldi	r22, 0x13	; 19
    2c54:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    2c58:	11 50       	subi	r17, 0x01	; 1
    2c5a:	2e c0       	rjmp	.+92     	; 0x2cb8 <__stack+0xab9>
			}
			else if((19 > category_size_6) && (19 <= category_size_7) && (no_of_votes_cat7 != 0))
    2c5c:	e2 e1       	ldi	r30, 0x12	; 18
    2c5e:	e8 15       	cp	r30, r8
    2c60:	88 f0       	brcs	.+34     	; 0x2c84 <__stack+0xa85>
    2c62:	f2 e1       	ldi	r31, 0x12	; 18
    2c64:	f6 15       	cp	r31, r6
    2c66:	70 f4       	brcc	.+28     	; 0x2c84 <__stack+0xa85>
    2c68:	00 23       	and	r16, r16
    2c6a:	61 f0       	breq	.+24     	; 0x2c84 <__stack+0xa85>
			{
				//USART_putstring("19C7 ");
				vote_indicator_19 = 1;	// Indicating button 12 was presses.
    2c6c:	80 91 0d 06 	lds	r24, 0x060D
    2c70:	84 60       	ori	r24, 0x04	; 4
    2c72:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 19);
				deactivate_category_buttons_and_save(button19_addr, 19);
    2c76:	84 e2       	ldi	r24, 0x24	; 36
    2c78:	90 e0       	ldi	r25, 0x00	; 0
    2c7a:	63 e1       	ldi	r22, 0x13	; 19
    2c7c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    2c80:	01 50       	subi	r16, 0x01	; 1
    2c82:	1a c0       	rjmp	.+52     	; 0x2cb8 <__stack+0xab9>
				//vote_indicator_19 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 19);
				//deactivate_category_buttons_and_save(button19_addr, 19);
				//no_of_votes_cat8--;
			//}
			else if((19 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    2c84:	80 91 64 05 	lds	r24, 0x0564
    2c88:	90 91 65 05 	lds	r25, 0x0565
    2c8c:	83 31       	cpi	r24, 0x13	; 19
    2c8e:	91 05       	cpc	r25, r1
    2c90:	98 f4       	brcc	.+38     	; 0x2cb8 <__stack+0xab9>
    2c92:	80 91 48 08 	lds	r24, 0x0848
    2c96:	88 23       	and	r24, r24
    2c98:	79 f0       	breq	.+30     	; 0x2cb8 <__stack+0xab9>
			{
				//USART_putstring("19G ");		// comment this out in final product
				vote_indicator_19 = 1;			// Indicating button 1 was pressed
    2c9a:	80 91 0d 06 	lds	r24, 0x060D
    2c9e:	84 60       	ori	r24, 0x04	; 4
    2ca0:	80 93 0d 06 	sts	0x060D, r24
				deactivate_category_buttons_and_save(button19_addr, 19);
    2ca4:	84 e2       	ldi	r24, 0x24	; 36
    2ca6:	90 e0       	ldi	r25, 0x00	; 0
    2ca8:	63 e1       	ldi	r22, 0x13	; 19
    2caa:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 19);
				gen_vote_count--;
    2cae:	80 91 48 08 	lds	r24, 0x0848
    2cb2:	81 50       	subi	r24, 0x01	; 1
    2cb4:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x03) && (20 <= candidate_count) && vote_indicator_20==0)
    2cb8:	86 b1       	in	r24, 0x06	; 6
    2cba:	81 ff       	sbrs	r24, 1
    2cbc:	a3 c0       	rjmp	.+326    	; 0x2e04 <__stack+0xc05>
    2cbe:	86 b1       	in	r24, 0x06	; 6
    2cc0:	80 fd       	sbrc	r24, 0
    2cc2:	a0 c0       	rjmp	.+320    	; 0x2e04 <__stack+0xc05>
    2cc4:	86 b1       	in	r24, 0x06	; 6
    2cc6:	82 fd       	sbrc	r24, 2
    2cc8:	9d c0       	rjmp	.+314    	; 0x2e04 <__stack+0xc05>
    2cca:	86 b1       	in	r24, 0x06	; 6
    2ccc:	83 fd       	sbrc	r24, 3
    2cce:	9a c0       	rjmp	.+308    	; 0x2e04 <__stack+0xc05>
    2cd0:	83 b1       	in	r24, 0x03	; 3
    2cd2:	8f 70       	andi	r24, 0x0F	; 15
    2cd4:	83 30       	cpi	r24, 0x03	; 3
    2cd6:	09 f0       	breq	.+2      	; 0x2cda <__stack+0xadb>
    2cd8:	95 c0       	rjmp	.+298    	; 0x2e04 <__stack+0xc05>
    2cda:	80 91 f6 05 	lds	r24, 0x05F6
    2cde:	84 31       	cpi	r24, 0x14	; 20
    2ce0:	08 f4       	brcc	.+2      	; 0x2ce4 <__stack+0xae5>
    2ce2:	90 c0       	rjmp	.+288    	; 0x2e04 <__stack+0xc05>
    2ce4:	80 91 0d 06 	lds	r24, 0x060D
    2ce8:	83 fd       	sbrc	r24, 3
    2cea:	8c c0       	rjmp	.+280    	; 0x2e04 <__stack+0xc05>
		{
			if((20 > category_size_1) && (20 <= category_size_2) && (no_of_votes_cat2 != 0))
    2cec:	83 e1       	ldi	r24, 0x13	; 19
    2cee:	85 15       	cp	r24, r5
    2cf0:	70 f4       	brcc	.+28     	; 0x2d0e <__stack+0xb0f>
    2cf2:	cc 20       	and	r12, r12
    2cf4:	e9 f0       	breq	.+58     	; 0x2d30 <__stack+0xb31>
			{
				//USART_putstring("20C2 ");
				vote_indicator_20 = 1;	// Indicating button 12 was presses.
    2cf6:	80 91 0d 06 	lds	r24, 0x060D
    2cfa:	88 60       	ori	r24, 0x08	; 8
    2cfc:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 20);
				deactivate_category_buttons_and_save(button20_addr, 20);
    2d00:	86 e2       	ldi	r24, 0x26	; 38
    2d02:	90 e0       	ldi	r25, 0x00	; 0
    2d04:	64 e1       	ldi	r22, 0x14	; 20
    2d06:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    2d0a:	ca 94       	dec	r12
    2d0c:	7b c0       	rjmp	.+246    	; 0x2e04 <__stack+0xc05>
			}
			else if((20 > category_size_2) && (20 <= category_size_3) && (no_of_votes_cat3 != 0))
    2d0e:	93 e1       	ldi	r25, 0x13	; 19
    2d10:	97 15       	cp	r25, r7
    2d12:	88 f4       	brcc	.+34     	; 0x2d36 <__stack+0xb37>
    2d14:	ff 20       	and	r15, r15
    2d16:	01 f1       	breq	.+64     	; 0x2d58 <__stack+0xb59>
			{
				//USART_putstring("20C3 ");
				vote_indicator_20 = 1;	// Indicating button 12 was presses.
    2d18:	80 91 0d 06 	lds	r24, 0x060D
    2d1c:	88 60       	ori	r24, 0x08	; 8
    2d1e:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 20);
				deactivate_category_buttons_and_save(button20_addr, 20);
    2d22:	86 e2       	ldi	r24, 0x26	; 38
    2d24:	90 e0       	ldi	r25, 0x00	; 0
    2d26:	64 e1       	ldi	r22, 0x14	; 20
    2d28:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    2d2c:	fa 94       	dec	r15
    2d2e:	6a c0       	rjmp	.+212    	; 0x2e04 <__stack+0xc05>
			}
			else if((20 > category_size_3) && (20 <= category_size_4) && (no_of_votes_cat4 != 0))
    2d30:	a3 e1       	ldi	r26, 0x13	; 19
    2d32:	a7 15       	cp	r26, r7
    2d34:	88 f0       	brcs	.+34     	; 0x2d58 <__stack+0xb59>
    2d36:	b3 e1       	ldi	r27, 0x13	; 19
    2d38:	b9 15       	cp	r27, r9
    2d3a:	88 f4       	brcc	.+34     	; 0x2d5e <__stack+0xb5f>
    2d3c:	22 20       	and	r2, r2
    2d3e:	01 f1       	breq	.+64     	; 0x2d80 <__stack+0xb81>
			{
				//USART_putstring("20C4 ");
				vote_indicator_20 = 1;	// Indicating button 12 was presses.
    2d40:	80 91 0d 06 	lds	r24, 0x060D
    2d44:	88 60       	ori	r24, 0x08	; 8
    2d46:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 20);
				deactivate_category_buttons_and_save(button20_addr, 20);
    2d4a:	86 e2       	ldi	r24, 0x26	; 38
    2d4c:	90 e0       	ldi	r25, 0x00	; 0
    2d4e:	64 e1       	ldi	r22, 0x14	; 20
    2d50:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    2d54:	2a 94       	dec	r2
    2d56:	56 c0       	rjmp	.+172    	; 0x2e04 <__stack+0xc05>
			}
			else if((20 > category_size_4) && (20 <= category_size_5) && (no_of_votes_cat5 != 0))
    2d58:	e3 e1       	ldi	r30, 0x13	; 19
    2d5a:	e9 15       	cp	r30, r9
    2d5c:	88 f0       	brcs	.+34     	; 0x2d80 <__stack+0xb81>
    2d5e:	f3 e1       	ldi	r31, 0x13	; 19
    2d60:	fa 15       	cp	r31, r10
    2d62:	88 f4       	brcc	.+34     	; 0x2d86 <__stack+0xb87>
    2d64:	33 20       	and	r3, r3
    2d66:	01 f1       	breq	.+64     	; 0x2da8 <__stack+0xba9>
			{
				//USART_putstring("20C5 ");
				vote_indicator_20 = 1;	// Indicating button 12 was presses.
    2d68:	80 91 0d 06 	lds	r24, 0x060D
    2d6c:	88 60       	ori	r24, 0x08	; 8
    2d6e:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 20);
				deactivate_category_buttons_and_save(button20_addr, 20);
    2d72:	86 e2       	ldi	r24, 0x26	; 38
    2d74:	90 e0       	ldi	r25, 0x00	; 0
    2d76:	64 e1       	ldi	r22, 0x14	; 20
    2d78:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2d7c:	3a 94       	dec	r3
    2d7e:	42 c0       	rjmp	.+132    	; 0x2e04 <__stack+0xc05>
			}
			else if((20 > category_size_5) && (20 <= category_size_6) && (no_of_votes_cat6 != 0))
    2d80:	83 e1       	ldi	r24, 0x13	; 19
    2d82:	8a 15       	cp	r24, r10
    2d84:	88 f0       	brcs	.+34     	; 0x2da8 <__stack+0xba9>
    2d86:	93 e1       	ldi	r25, 0x13	; 19
    2d88:	98 15       	cp	r25, r8
    2d8a:	88 f4       	brcc	.+34     	; 0x2dae <__stack+0xbaf>
    2d8c:	11 23       	and	r17, r17
    2d8e:	01 f1       	breq	.+64     	; 0x2dd0 <__stack+0xbd1>
			{
				//USART_putstring("20C6 ");
				vote_indicator_20 = 1;	// Indicating button 12 was presses.
    2d90:	80 91 0d 06 	lds	r24, 0x060D
    2d94:	88 60       	ori	r24, 0x08	; 8
    2d96:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 20);
				deactivate_category_buttons_and_save(button20_addr, 20);
    2d9a:	86 e2       	ldi	r24, 0x26	; 38
    2d9c:	90 e0       	ldi	r25, 0x00	; 0
    2d9e:	64 e1       	ldi	r22, 0x14	; 20
    2da0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    2da4:	11 50       	subi	r17, 0x01	; 1
    2da6:	2e c0       	rjmp	.+92     	; 0x2e04 <__stack+0xc05>
			}
			else if((20 > category_size_6) && (20 <= category_size_7) && (no_of_votes_cat7 != 0))
    2da8:	a3 e1       	ldi	r26, 0x13	; 19
    2daa:	a8 15       	cp	r26, r8
    2dac:	88 f0       	brcs	.+34     	; 0x2dd0 <__stack+0xbd1>
    2dae:	b3 e1       	ldi	r27, 0x13	; 19
    2db0:	b6 15       	cp	r27, r6
    2db2:	70 f4       	brcc	.+28     	; 0x2dd0 <__stack+0xbd1>
    2db4:	00 23       	and	r16, r16
    2db6:	61 f0       	breq	.+24     	; 0x2dd0 <__stack+0xbd1>
			{
				//USART_putstring("20C7 ");
				vote_indicator_20 = 1;	// Indicating button 12 was presses.
    2db8:	80 91 0d 06 	lds	r24, 0x060D
    2dbc:	88 60       	ori	r24, 0x08	; 8
    2dbe:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 20);
				deactivate_category_buttons_and_save(button20_addr, 20);
    2dc2:	86 e2       	ldi	r24, 0x26	; 38
    2dc4:	90 e0       	ldi	r25, 0x00	; 0
    2dc6:	64 e1       	ldi	r22, 0x14	; 20
    2dc8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    2dcc:	01 50       	subi	r16, 0x01	; 1
    2dce:	1a c0       	rjmp	.+52     	; 0x2e04 <__stack+0xc05>
				//vote_indicator_20 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 20);
				//deactivate_category_buttons_and_save(button20_addr, 20);
				//no_of_votes_cat8--;
			//}
			else if((20 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    2dd0:	80 91 64 05 	lds	r24, 0x0564
    2dd4:	90 91 65 05 	lds	r25, 0x0565
    2dd8:	84 31       	cpi	r24, 0x14	; 20
    2dda:	91 05       	cpc	r25, r1
    2ddc:	98 f4       	brcc	.+38     	; 0x2e04 <__stack+0xc05>
    2dde:	80 91 48 08 	lds	r24, 0x0848
    2de2:	88 23       	and	r24, r24
    2de4:	79 f0       	breq	.+30     	; 0x2e04 <__stack+0xc05>
			{
				//USART_putstring("20G ");		// comment this out in final product
				vote_indicator_20 = 1;			// Indicating button 1 was pressed
    2de6:	80 91 0d 06 	lds	r24, 0x060D
    2dea:	88 60       	ori	r24, 0x08	; 8
    2dec:	80 93 0d 06 	sts	0x060D, r24
				deactivate_category_buttons_and_save(button20_addr, 20);
    2df0:	86 e2       	ldi	r24, 0x26	; 38
    2df2:	90 e0       	ldi	r25, 0x00	; 0
    2df4:	64 e1       	ldi	r22, 0x14	; 20
    2df6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 20);
				gen_vote_count--;
    2dfa:	80 91 48 08 	lds	r24, 0x0848
    2dfe:	81 50       	subi	r24, 0x01	; 1
    2e00:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x04) && (21 <= candidate_count) && vote_indicator_21==0)
    2e04:	86 b1       	in	r24, 0x06	; 6
    2e06:	81 ff       	sbrs	r24, 1
    2e08:	a3 c0       	rjmp	.+326    	; 0x2f50 <__stack+0xd51>
    2e0a:	86 b1       	in	r24, 0x06	; 6
    2e0c:	80 fd       	sbrc	r24, 0
    2e0e:	a0 c0       	rjmp	.+320    	; 0x2f50 <__stack+0xd51>
    2e10:	86 b1       	in	r24, 0x06	; 6
    2e12:	82 fd       	sbrc	r24, 2
    2e14:	9d c0       	rjmp	.+314    	; 0x2f50 <__stack+0xd51>
    2e16:	86 b1       	in	r24, 0x06	; 6
    2e18:	83 fd       	sbrc	r24, 3
    2e1a:	9a c0       	rjmp	.+308    	; 0x2f50 <__stack+0xd51>
    2e1c:	83 b1       	in	r24, 0x03	; 3
    2e1e:	8f 70       	andi	r24, 0x0F	; 15
    2e20:	84 30       	cpi	r24, 0x04	; 4
    2e22:	09 f0       	breq	.+2      	; 0x2e26 <__stack+0xc27>
    2e24:	95 c0       	rjmp	.+298    	; 0x2f50 <__stack+0xd51>
    2e26:	80 91 f6 05 	lds	r24, 0x05F6
    2e2a:	85 31       	cpi	r24, 0x15	; 21
    2e2c:	08 f4       	brcc	.+2      	; 0x2e30 <__stack+0xc31>
    2e2e:	90 c0       	rjmp	.+288    	; 0x2f50 <__stack+0xd51>
    2e30:	80 91 0d 06 	lds	r24, 0x060D
    2e34:	84 fd       	sbrc	r24, 4
    2e36:	8c c0       	rjmp	.+280    	; 0x2f50 <__stack+0xd51>
		{
			if((21 > category_size_1) && (21 <= category_size_2) && (no_of_votes_cat2 != 0))
    2e38:	e4 e1       	ldi	r30, 0x14	; 20
    2e3a:	e5 15       	cp	r30, r5
    2e3c:	70 f4       	brcc	.+28     	; 0x2e5a <__stack+0xc5b>
    2e3e:	cc 20       	and	r12, r12
    2e40:	e9 f0       	breq	.+58     	; 0x2e7c <__stack+0xc7d>
			{
				//USART_putstring("21C2 ");
				vote_indicator_21 = 1;	// Indicating button 12 was presses.
    2e42:	80 91 0d 06 	lds	r24, 0x060D
    2e46:	80 61       	ori	r24, 0x10	; 16
    2e48:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 21);
				deactivate_category_buttons_and_save(button21_addr, 21);
    2e4c:	88 e2       	ldi	r24, 0x28	; 40
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	65 e1       	ldi	r22, 0x15	; 21
    2e52:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    2e56:	ca 94       	dec	r12
    2e58:	7b c0       	rjmp	.+246    	; 0x2f50 <__stack+0xd51>
			}
			else if((21 > category_size_2) && (21 <= category_size_3) && (no_of_votes_cat3 != 0))
    2e5a:	f4 e1       	ldi	r31, 0x14	; 20
    2e5c:	f7 15       	cp	r31, r7
    2e5e:	88 f4       	brcc	.+34     	; 0x2e82 <__stack+0xc83>
    2e60:	ff 20       	and	r15, r15
    2e62:	01 f1       	breq	.+64     	; 0x2ea4 <__stack+0xca5>
			{
				//USART_putstring("21C3 ");
				vote_indicator_21 = 1;	// Indicating button 12 was presses.
    2e64:	80 91 0d 06 	lds	r24, 0x060D
    2e68:	80 61       	ori	r24, 0x10	; 16
    2e6a:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 21);
				deactivate_category_buttons_and_save(button21_addr, 21);
    2e6e:	88 e2       	ldi	r24, 0x28	; 40
    2e70:	90 e0       	ldi	r25, 0x00	; 0
    2e72:	65 e1       	ldi	r22, 0x15	; 21
    2e74:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    2e78:	fa 94       	dec	r15
    2e7a:	6a c0       	rjmp	.+212    	; 0x2f50 <__stack+0xd51>
			}
			else if((21 > category_size_3) && (21 <= category_size_4) && (no_of_votes_cat4 != 0))
    2e7c:	84 e1       	ldi	r24, 0x14	; 20
    2e7e:	87 15       	cp	r24, r7
    2e80:	88 f0       	brcs	.+34     	; 0x2ea4 <__stack+0xca5>
    2e82:	94 e1       	ldi	r25, 0x14	; 20
    2e84:	99 15       	cp	r25, r9
    2e86:	88 f4       	brcc	.+34     	; 0x2eaa <__stack+0xcab>
    2e88:	22 20       	and	r2, r2
    2e8a:	01 f1       	breq	.+64     	; 0x2ecc <__stack+0xccd>
			{
				//USART_putstring("21C4 ");
				vote_indicator_21 = 1;	// Indicating button 12 was presses.
    2e8c:	80 91 0d 06 	lds	r24, 0x060D
    2e90:	80 61       	ori	r24, 0x10	; 16
    2e92:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 21);
				deactivate_category_buttons_and_save(button21_addr, 21);
    2e96:	88 e2       	ldi	r24, 0x28	; 40
    2e98:	90 e0       	ldi	r25, 0x00	; 0
    2e9a:	65 e1       	ldi	r22, 0x15	; 21
    2e9c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    2ea0:	2a 94       	dec	r2
    2ea2:	56 c0       	rjmp	.+172    	; 0x2f50 <__stack+0xd51>
			}
			else if((21 > category_size_4) && (21 <= category_size_5) && (no_of_votes_cat5 != 0))
    2ea4:	a4 e1       	ldi	r26, 0x14	; 20
    2ea6:	a9 15       	cp	r26, r9
    2ea8:	88 f0       	brcs	.+34     	; 0x2ecc <__stack+0xccd>
    2eaa:	b4 e1       	ldi	r27, 0x14	; 20
    2eac:	ba 15       	cp	r27, r10
    2eae:	88 f4       	brcc	.+34     	; 0x2ed2 <__stack+0xcd3>
    2eb0:	33 20       	and	r3, r3
    2eb2:	01 f1       	breq	.+64     	; 0x2ef4 <__stack+0xcf5>
			{
				//USART_putstring("21C5 ");
				vote_indicator_21 = 1;	// Indicating button 12 was presses.
    2eb4:	80 91 0d 06 	lds	r24, 0x060D
    2eb8:	80 61       	ori	r24, 0x10	; 16
    2eba:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 21);
				deactivate_category_buttons_and_save(button21_addr, 21);
    2ebe:	88 e2       	ldi	r24, 0x28	; 40
    2ec0:	90 e0       	ldi	r25, 0x00	; 0
    2ec2:	65 e1       	ldi	r22, 0x15	; 21
    2ec4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    2ec8:	3a 94       	dec	r3
    2eca:	42 c0       	rjmp	.+132    	; 0x2f50 <__stack+0xd51>
			}
			else if((21 > category_size_5) && (21 <= category_size_6) && (no_of_votes_cat6 != 0))
    2ecc:	e4 e1       	ldi	r30, 0x14	; 20
    2ece:	ea 15       	cp	r30, r10
    2ed0:	88 f0       	brcs	.+34     	; 0x2ef4 <__stack+0xcf5>
    2ed2:	f4 e1       	ldi	r31, 0x14	; 20
    2ed4:	f8 15       	cp	r31, r8
    2ed6:	88 f4       	brcc	.+34     	; 0x2efa <__stack+0xcfb>
    2ed8:	11 23       	and	r17, r17
    2eda:	01 f1       	breq	.+64     	; 0x2f1c <__stack+0xd1d>
			{
				//USART_putstring("21C6 ");
				vote_indicator_21 = 1;	// Indicating button 12 was presses.
    2edc:	80 91 0d 06 	lds	r24, 0x060D
    2ee0:	80 61       	ori	r24, 0x10	; 16
    2ee2:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 21);
				deactivate_category_buttons_and_save(button21_addr, 21);
    2ee6:	88 e2       	ldi	r24, 0x28	; 40
    2ee8:	90 e0       	ldi	r25, 0x00	; 0
    2eea:	65 e1       	ldi	r22, 0x15	; 21
    2eec:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    2ef0:	11 50       	subi	r17, 0x01	; 1
    2ef2:	2e c0       	rjmp	.+92     	; 0x2f50 <__stack+0xd51>
			}
			else if((21 > category_size_6) && (21 <= category_size_7) && (no_of_votes_cat7 != 0))
    2ef4:	84 e1       	ldi	r24, 0x14	; 20
    2ef6:	88 15       	cp	r24, r8
    2ef8:	88 f0       	brcs	.+34     	; 0x2f1c <__stack+0xd1d>
    2efa:	94 e1       	ldi	r25, 0x14	; 20
    2efc:	96 15       	cp	r25, r6
    2efe:	70 f4       	brcc	.+28     	; 0x2f1c <__stack+0xd1d>
    2f00:	00 23       	and	r16, r16
    2f02:	61 f0       	breq	.+24     	; 0x2f1c <__stack+0xd1d>
			{
				//USART_putstring("21C7 ");
				vote_indicator_21 = 1;	// Indicating button 12 was presses.
    2f04:	80 91 0d 06 	lds	r24, 0x060D
    2f08:	80 61       	ori	r24, 0x10	; 16
    2f0a:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 21);
				deactivate_category_buttons_and_save(button21_addr, 21);
    2f0e:	88 e2       	ldi	r24, 0x28	; 40
    2f10:	90 e0       	ldi	r25, 0x00	; 0
    2f12:	65 e1       	ldi	r22, 0x15	; 21
    2f14:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    2f18:	01 50       	subi	r16, 0x01	; 1
    2f1a:	1a c0       	rjmp	.+52     	; 0x2f50 <__stack+0xd51>
				//vote_indicator_21 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 21);
				//deactivate_category_buttons_and_save(button21_addr, 21);
				//no_of_votes_cat8--;
			//}
			else if((21 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    2f1c:	80 91 64 05 	lds	r24, 0x0564
    2f20:	90 91 65 05 	lds	r25, 0x0565
    2f24:	85 31       	cpi	r24, 0x15	; 21
    2f26:	91 05       	cpc	r25, r1
    2f28:	98 f4       	brcc	.+38     	; 0x2f50 <__stack+0xd51>
    2f2a:	80 91 48 08 	lds	r24, 0x0848
    2f2e:	88 23       	and	r24, r24
    2f30:	79 f0       	breq	.+30     	; 0x2f50 <__stack+0xd51>
			{
				//USART_putstring("21G ");		// comment this out in final product
				vote_indicator_21 = 1;			// Indicating button 1 was pressed
    2f32:	80 91 0d 06 	lds	r24, 0x060D
    2f36:	80 61       	ori	r24, 0x10	; 16
    2f38:	80 93 0d 06 	sts	0x060D, r24
				deactivate_category_buttons_and_save(button21_addr, 21);
    2f3c:	88 e2       	ldi	r24, 0x28	; 40
    2f3e:	90 e0       	ldi	r25, 0x00	; 0
    2f40:	65 e1       	ldi	r22, 0x15	; 21
    2f42:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 21);
				gen_vote_count--;
    2f46:	80 91 48 08 	lds	r24, 0x0848
    2f4a:	81 50       	subi	r24, 0x01	; 1
    2f4c:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x05) && (22 <= candidate_count) && vote_indicator_22==0)
    2f50:	86 b1       	in	r24, 0x06	; 6
    2f52:	81 ff       	sbrs	r24, 1
    2f54:	a3 c0       	rjmp	.+326    	; 0x309c <__stack+0xe9d>
    2f56:	86 b1       	in	r24, 0x06	; 6
    2f58:	80 fd       	sbrc	r24, 0
    2f5a:	a0 c0       	rjmp	.+320    	; 0x309c <__stack+0xe9d>
    2f5c:	86 b1       	in	r24, 0x06	; 6
    2f5e:	82 fd       	sbrc	r24, 2
    2f60:	9d c0       	rjmp	.+314    	; 0x309c <__stack+0xe9d>
    2f62:	86 b1       	in	r24, 0x06	; 6
    2f64:	83 fd       	sbrc	r24, 3
    2f66:	9a c0       	rjmp	.+308    	; 0x309c <__stack+0xe9d>
    2f68:	83 b1       	in	r24, 0x03	; 3
    2f6a:	8f 70       	andi	r24, 0x0F	; 15
    2f6c:	85 30       	cpi	r24, 0x05	; 5
    2f6e:	09 f0       	breq	.+2      	; 0x2f72 <__stack+0xd73>
    2f70:	95 c0       	rjmp	.+298    	; 0x309c <__stack+0xe9d>
    2f72:	80 91 f6 05 	lds	r24, 0x05F6
    2f76:	86 31       	cpi	r24, 0x16	; 22
    2f78:	08 f4       	brcc	.+2      	; 0x2f7c <__stack+0xd7d>
    2f7a:	90 c0       	rjmp	.+288    	; 0x309c <__stack+0xe9d>
    2f7c:	80 91 0d 06 	lds	r24, 0x060D
    2f80:	85 fd       	sbrc	r24, 5
    2f82:	8c c0       	rjmp	.+280    	; 0x309c <__stack+0xe9d>
		{
			if((22 > category_size_1) && (22 <= category_size_2) && (no_of_votes_cat2 != 0))
    2f84:	a5 e1       	ldi	r26, 0x15	; 21
    2f86:	a5 15       	cp	r26, r5
    2f88:	70 f4       	brcc	.+28     	; 0x2fa6 <__stack+0xda7>
    2f8a:	cc 20       	and	r12, r12
    2f8c:	e9 f0       	breq	.+58     	; 0x2fc8 <__stack+0xdc9>
			{
				//USART_putstring("22C2 ");
				vote_indicator_22 = 1;	// Indicating button 12 was presses.
    2f8e:	80 91 0d 06 	lds	r24, 0x060D
    2f92:	80 62       	ori	r24, 0x20	; 32
    2f94:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 22);
				deactivate_category_buttons_and_save(button22_addr, 22);
    2f98:	8a e2       	ldi	r24, 0x2A	; 42
    2f9a:	90 e0       	ldi	r25, 0x00	; 0
    2f9c:	66 e1       	ldi	r22, 0x16	; 22
    2f9e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    2fa2:	ca 94       	dec	r12
    2fa4:	7b c0       	rjmp	.+246    	; 0x309c <__stack+0xe9d>
			}
			else if((22 > category_size_2) && (21 <= category_size_3) && (no_of_votes_cat3 != 0))
    2fa6:	b4 e1       	ldi	r27, 0x14	; 20
    2fa8:	b7 15       	cp	r27, r7
    2faa:	70 f4       	brcc	.+28     	; 0x2fc8 <__stack+0xdc9>
    2fac:	ff 20       	and	r15, r15
    2fae:	61 f0       	breq	.+24     	; 0x2fc8 <__stack+0xdc9>
			{
				//USART_putstring("22C3 ");
				vote_indicator_22 = 1;	// Indicating button 12 was presses.
    2fb0:	80 91 0d 06 	lds	r24, 0x060D
    2fb4:	80 62       	ori	r24, 0x20	; 32
    2fb6:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 22);
				deactivate_category_buttons_and_save(button22_addr, 22);
    2fba:	8a e2       	ldi	r24, 0x2A	; 42
    2fbc:	90 e0       	ldi	r25, 0x00	; 0
    2fbe:	66 e1       	ldi	r22, 0x16	; 22
    2fc0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    2fc4:	fa 94       	dec	r15
    2fc6:	6a c0       	rjmp	.+212    	; 0x309c <__stack+0xe9d>
			}
			else if((22 > category_size_3) && (21 <= category_size_4) && (no_of_votes_cat4 != 0))
    2fc8:	e5 e1       	ldi	r30, 0x15	; 21
    2fca:	e7 15       	cp	r30, r7
    2fcc:	88 f0       	brcs	.+34     	; 0x2ff0 <__stack+0xdf1>
    2fce:	f4 e1       	ldi	r31, 0x14	; 20
    2fd0:	f9 15       	cp	r31, r9
    2fd2:	70 f4       	brcc	.+28     	; 0x2ff0 <__stack+0xdf1>
    2fd4:	22 20       	and	r2, r2
    2fd6:	61 f0       	breq	.+24     	; 0x2ff0 <__stack+0xdf1>
			{
				//USART_putstring("22C4 ");
				vote_indicator_22 = 1;	// Indicating button 12 was presses.
    2fd8:	80 91 0d 06 	lds	r24, 0x060D
    2fdc:	80 62       	ori	r24, 0x20	; 32
    2fde:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 22);
				deactivate_category_buttons_and_save(button22_addr, 22);
    2fe2:	8a e2       	ldi	r24, 0x2A	; 42
    2fe4:	90 e0       	ldi	r25, 0x00	; 0
    2fe6:	66 e1       	ldi	r22, 0x16	; 22
    2fe8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    2fec:	2a 94       	dec	r2
    2fee:	56 c0       	rjmp	.+172    	; 0x309c <__stack+0xe9d>
			}
			else if((22 > category_size_4) && (21 <= category_size_5) && (no_of_votes_cat5 != 0))
    2ff0:	85 e1       	ldi	r24, 0x15	; 21
    2ff2:	89 15       	cp	r24, r9
    2ff4:	88 f0       	brcs	.+34     	; 0x3018 <__stack+0xe19>
    2ff6:	94 e1       	ldi	r25, 0x14	; 20
    2ff8:	9a 15       	cp	r25, r10
    2ffa:	70 f4       	brcc	.+28     	; 0x3018 <__stack+0xe19>
    2ffc:	33 20       	and	r3, r3
    2ffe:	61 f0       	breq	.+24     	; 0x3018 <__stack+0xe19>
			{
				//USART_putstring("22C5 ");
				vote_indicator_22 = 1;	// Indicating button 12 was presses.
    3000:	80 91 0d 06 	lds	r24, 0x060D
    3004:	80 62       	ori	r24, 0x20	; 32
    3006:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 22);
				deactivate_category_buttons_and_save(button22_addr, 22);
    300a:	8a e2       	ldi	r24, 0x2A	; 42
    300c:	90 e0       	ldi	r25, 0x00	; 0
    300e:	66 e1       	ldi	r22, 0x16	; 22
    3010:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    3014:	3a 94       	dec	r3
    3016:	42 c0       	rjmp	.+132    	; 0x309c <__stack+0xe9d>
			}
			else if((22 > category_size_5) && (21 <= category_size_6) && (no_of_votes_cat6 != 0))
    3018:	a5 e1       	ldi	r26, 0x15	; 21
    301a:	aa 15       	cp	r26, r10
    301c:	88 f0       	brcs	.+34     	; 0x3040 <__stack+0xe41>
    301e:	b4 e1       	ldi	r27, 0x14	; 20
    3020:	b8 15       	cp	r27, r8
    3022:	70 f4       	brcc	.+28     	; 0x3040 <__stack+0xe41>
    3024:	11 23       	and	r17, r17
    3026:	61 f0       	breq	.+24     	; 0x3040 <__stack+0xe41>
			{
				//USART_putstring("22C6");
				vote_indicator_22 = 1;	// Indicating button 12 was presses.
    3028:	80 91 0d 06 	lds	r24, 0x060D
    302c:	80 62       	ori	r24, 0x20	; 32
    302e:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 22);
				deactivate_category_buttons_and_save(button22_addr, 22);
    3032:	8a e2       	ldi	r24, 0x2A	; 42
    3034:	90 e0       	ldi	r25, 0x00	; 0
    3036:	66 e1       	ldi	r22, 0x16	; 22
    3038:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    303c:	11 50       	subi	r17, 0x01	; 1
    303e:	2e c0       	rjmp	.+92     	; 0x309c <__stack+0xe9d>
			}
			else if((22 > category_size_6) && (21 <= category_size_7) && (no_of_votes_cat7 != 0))
    3040:	e5 e1       	ldi	r30, 0x15	; 21
    3042:	e8 15       	cp	r30, r8
    3044:	88 f0       	brcs	.+34     	; 0x3068 <__stack+0xe69>
    3046:	f4 e1       	ldi	r31, 0x14	; 20
    3048:	f6 15       	cp	r31, r6
    304a:	70 f4       	brcc	.+28     	; 0x3068 <__stack+0xe69>
    304c:	00 23       	and	r16, r16
    304e:	61 f0       	breq	.+24     	; 0x3068 <__stack+0xe69>
			{
				//USART_putstring("22C7");
				vote_indicator_22 = 1;	// Indicating button 12 was presses.
    3050:	80 91 0d 06 	lds	r24, 0x060D
    3054:	80 62       	ori	r24, 0x20	; 32
    3056:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 22);
				deactivate_category_buttons_and_save(button22_addr, 22);
    305a:	8a e2       	ldi	r24, 0x2A	; 42
    305c:	90 e0       	ldi	r25, 0x00	; 0
    305e:	66 e1       	ldi	r22, 0x16	; 22
    3060:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    3064:	01 50       	subi	r16, 0x01	; 1
    3066:	1a c0       	rjmp	.+52     	; 0x309c <__stack+0xe9d>
				//vote_indicator_22 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 22);
				//deactivate_category_buttons_and_save(button22_addr, 22);
				//no_of_votes_cat8--;
			//}
			else if((22 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3068:	80 91 64 05 	lds	r24, 0x0564
    306c:	90 91 65 05 	lds	r25, 0x0565
    3070:	86 31       	cpi	r24, 0x16	; 22
    3072:	91 05       	cpc	r25, r1
    3074:	98 f4       	brcc	.+38     	; 0x309c <__stack+0xe9d>
    3076:	80 91 48 08 	lds	r24, 0x0848
    307a:	88 23       	and	r24, r24
    307c:	79 f0       	breq	.+30     	; 0x309c <__stack+0xe9d>
			{
				//USART_putstring("22G ");		// comment this out in final product
				vote_indicator_22 = 1;			// Indicating button 1 was pressed
    307e:	80 91 0d 06 	lds	r24, 0x060D
    3082:	80 62       	ori	r24, 0x20	; 32
    3084:	80 93 0d 06 	sts	0x060D, r24
				deactivate_category_buttons_and_save(button22_addr, 22);
    3088:	8a e2       	ldi	r24, 0x2A	; 42
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	66 e1       	ldi	r22, 0x16	; 22
    308e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 22);
				gen_vote_count--;
    3092:	80 91 48 08 	lds	r24, 0x0848
    3096:	81 50       	subi	r24, 0x01	; 1
    3098:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x06) && (23 <= candidate_count) && vote_indicator_23==0)
    309c:	86 b1       	in	r24, 0x06	; 6
    309e:	81 ff       	sbrs	r24, 1
    30a0:	b7 c0       	rjmp	.+366    	; 0x3210 <__stack+0x1011>
    30a2:	86 b1       	in	r24, 0x06	; 6
    30a4:	80 fd       	sbrc	r24, 0
    30a6:	b4 c0       	rjmp	.+360    	; 0x3210 <__stack+0x1011>
    30a8:	86 b1       	in	r24, 0x06	; 6
    30aa:	82 fd       	sbrc	r24, 2
    30ac:	b1 c0       	rjmp	.+354    	; 0x3210 <__stack+0x1011>
    30ae:	86 b1       	in	r24, 0x06	; 6
    30b0:	83 fd       	sbrc	r24, 3
    30b2:	ae c0       	rjmp	.+348    	; 0x3210 <__stack+0x1011>
    30b4:	83 b1       	in	r24, 0x03	; 3
    30b6:	8f 70       	andi	r24, 0x0F	; 15
    30b8:	86 30       	cpi	r24, 0x06	; 6
    30ba:	09 f0       	breq	.+2      	; 0x30be <__stack+0xebf>
    30bc:	a9 c0       	rjmp	.+338    	; 0x3210 <__stack+0x1011>
    30be:	80 91 f6 05 	lds	r24, 0x05F6
    30c2:	87 31       	cpi	r24, 0x17	; 23
    30c4:	08 f4       	brcc	.+2      	; 0x30c8 <__stack+0xec9>
    30c6:	a4 c0       	rjmp	.+328    	; 0x3210 <__stack+0x1011>
    30c8:	80 91 0d 06 	lds	r24, 0x060D
    30cc:	86 fd       	sbrc	r24, 6
    30ce:	a0 c0       	rjmp	.+320    	; 0x3210 <__stack+0x1011>
		{
			if((23 > category_size_1) && (23 <= category_size_2) && (no_of_votes_cat2 != 0))
    30d0:	86 e1       	ldi	r24, 0x16	; 22
    30d2:	85 15       	cp	r24, r5
    30d4:	70 f4       	brcc	.+28     	; 0x30f2 <__stack+0xef3>
    30d6:	cc 20       	and	r12, r12
    30d8:	e9 f0       	breq	.+58     	; 0x3114 <__stack+0xf15>
			{
				//USART_putstring("23C2 ");
				vote_indicator_23 = 1;	// Indicating button 12 was presses.
    30da:	80 91 0d 06 	lds	r24, 0x060D
    30de:	80 64       	ori	r24, 0x40	; 64
    30e0:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 23);
				deactivate_category_buttons_and_save(button23_addr, 23);
    30e4:	8c e2       	ldi	r24, 0x2C	; 44
    30e6:	90 e0       	ldi	r25, 0x00	; 0
    30e8:	67 e1       	ldi	r22, 0x17	; 23
    30ea:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    30ee:	ca 94       	dec	r12
    30f0:	8f c0       	rjmp	.+286    	; 0x3210 <__stack+0x1011>
			}
			else if((23 > category_size_2) && (23 <= category_size_3) && (no_of_votes_cat3 != 0))
    30f2:	96 e1       	ldi	r25, 0x16	; 22
    30f4:	97 15       	cp	r25, r7
    30f6:	88 f4       	brcc	.+34     	; 0x311a <__stack+0xf1b>
    30f8:	ff 20       	and	r15, r15
    30fa:	01 f1       	breq	.+64     	; 0x313c <__stack+0xf3d>
			{
				//USART_putstring("23C3 ");
				vote_indicator_23 = 1;	// Indicating button 12 was presses.
    30fc:	80 91 0d 06 	lds	r24, 0x060D
    3100:	80 64       	ori	r24, 0x40	; 64
    3102:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 23);
				deactivate_category_buttons_and_save(button23_addr, 23);
    3106:	8c e2       	ldi	r24, 0x2C	; 44
    3108:	90 e0       	ldi	r25, 0x00	; 0
    310a:	67 e1       	ldi	r22, 0x17	; 23
    310c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    3110:	fa 94       	dec	r15
    3112:	7e c0       	rjmp	.+252    	; 0x3210 <__stack+0x1011>
			}
			else if((23 > category_size_3) && (23 <= category_size_4) && (no_of_votes_cat4 != 0))
    3114:	a6 e1       	ldi	r26, 0x16	; 22
    3116:	a7 15       	cp	r26, r7
    3118:	88 f0       	brcs	.+34     	; 0x313c <__stack+0xf3d>
    311a:	b6 e1       	ldi	r27, 0x16	; 22
    311c:	b9 15       	cp	r27, r9
    311e:	88 f4       	brcc	.+34     	; 0x3142 <__stack+0xf43>
    3120:	22 20       	and	r2, r2
    3122:	01 f1       	breq	.+64     	; 0x3164 <__stack+0xf65>
			{
				//USART_putstring("23C4 ");
				vote_indicator_23 = 1;	// Indicating button 12 was presses.
    3124:	80 91 0d 06 	lds	r24, 0x060D
    3128:	80 64       	ori	r24, 0x40	; 64
    312a:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 23);
				deactivate_category_buttons_and_save(button23_addr, 23);
    312e:	8c e2       	ldi	r24, 0x2C	; 44
    3130:	90 e0       	ldi	r25, 0x00	; 0
    3132:	67 e1       	ldi	r22, 0x17	; 23
    3134:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    3138:	2a 94       	dec	r2
    313a:	6a c0       	rjmp	.+212    	; 0x3210 <__stack+0x1011>
			}
			else if((23 > category_size_4) && (23 <= category_size_5) && (no_of_votes_cat5 != 0))
    313c:	e6 e1       	ldi	r30, 0x16	; 22
    313e:	e9 15       	cp	r30, r9
    3140:	88 f0       	brcs	.+34     	; 0x3164 <__stack+0xf65>
    3142:	f6 e1       	ldi	r31, 0x16	; 22
    3144:	fa 15       	cp	r31, r10
    3146:	88 f4       	brcc	.+34     	; 0x316a <__stack+0xf6b>
    3148:	33 20       	and	r3, r3
    314a:	01 f1       	breq	.+64     	; 0x318c <__stack+0xf8d>
			{
				//USART_putstring("23C5 ");
				vote_indicator_23 = 1;	// Indicating button 12 was presses.
    314c:	80 91 0d 06 	lds	r24, 0x060D
    3150:	80 64       	ori	r24, 0x40	; 64
    3152:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 23);
				deactivate_category_buttons_and_save(button23_addr, 23);
    3156:	8c e2       	ldi	r24, 0x2C	; 44
    3158:	90 e0       	ldi	r25, 0x00	; 0
    315a:	67 e1       	ldi	r22, 0x17	; 23
    315c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    3160:	3a 94       	dec	r3
    3162:	56 c0       	rjmp	.+172    	; 0x3210 <__stack+0x1011>
			}
			else if((23 > category_size_5) && (23 <= category_size_6) && (no_of_votes_cat6 != 0))
    3164:	86 e1       	ldi	r24, 0x16	; 22
    3166:	8a 15       	cp	r24, r10
    3168:	88 f0       	brcs	.+34     	; 0x318c <__stack+0xf8d>
    316a:	96 e1       	ldi	r25, 0x16	; 22
    316c:	98 15       	cp	r25, r8
    316e:	88 f4       	brcc	.+34     	; 0x3192 <__stack+0xf93>
    3170:	11 23       	and	r17, r17
    3172:	01 f1       	breq	.+64     	; 0x31b4 <__stack+0xfb5>
			{
				//USART_putstring("23C6 ");
				vote_indicator_23 = 1;	// Indicating button 12 was presses.
    3174:	80 91 0d 06 	lds	r24, 0x060D
    3178:	80 64       	ori	r24, 0x40	; 64
    317a:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 23);
				deactivate_category_buttons_and_save(button23_addr, 23);
    317e:	8c e2       	ldi	r24, 0x2C	; 44
    3180:	90 e0       	ldi	r25, 0x00	; 0
    3182:	67 e1       	ldi	r22, 0x17	; 23
    3184:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    3188:	11 50       	subi	r17, 0x01	; 1
    318a:	42 c0       	rjmp	.+132    	; 0x3210 <__stack+0x1011>
			}
			else if((23 > category_size_6) && (23 <= category_size_7) && (no_of_votes_cat7 != 0))
    318c:	a6 e1       	ldi	r26, 0x16	; 22
    318e:	a8 15       	cp	r26, r8
    3190:	88 f0       	brcs	.+34     	; 0x31b4 <__stack+0xfb5>
    3192:	b6 e1       	ldi	r27, 0x16	; 22
    3194:	b6 15       	cp	r27, r6
    3196:	88 f4       	brcc	.+34     	; 0x31ba <__stack+0xfbb>
    3198:	00 23       	and	r16, r16
    319a:	01 f1       	breq	.+64     	; 0x31dc <__stack+0xfdd>
			{
				//USART_putstring("23C7 ");
				vote_indicator_23 = 1;	// Indicating button 12 was presses.
    319c:	80 91 0d 06 	lds	r24, 0x060D
    31a0:	80 64       	ori	r24, 0x40	; 64
    31a2:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 23);
				deactivate_category_buttons_and_save(button23_addr, 23);
    31a6:	8c e2       	ldi	r24, 0x2C	; 44
    31a8:	90 e0       	ldi	r25, 0x00	; 0
    31aa:	67 e1       	ldi	r22, 0x17	; 23
    31ac:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    31b0:	01 50       	subi	r16, 0x01	; 1
    31b2:	2e c0       	rjmp	.+92     	; 0x3210 <__stack+0x1011>
			}
			else if((23 > category_size_7) && (23 <= category_size_8) && (no_of_votes_cat8 != 0))
    31b4:	e6 e1       	ldi	r30, 0x16	; 22
    31b6:	e6 15       	cp	r30, r6
    31b8:	88 f0       	brcs	.+34     	; 0x31dc <__stack+0xfdd>
    31ba:	f6 e1       	ldi	r31, 0x16	; 22
    31bc:	fe 15       	cp	r31, r14
    31be:	70 f4       	brcc	.+28     	; 0x31dc <__stack+0xfdd>
    31c0:	44 20       	and	r4, r4
    31c2:	61 f0       	breq	.+24     	; 0x31dc <__stack+0xfdd>
			{
				//USART_putstring("23C8 ");
				vote_indicator_23 = 1;	// Indicating button 12 was presses.
    31c4:	80 91 0d 06 	lds	r24, 0x060D
    31c8:	80 64       	ori	r24, 0x40	; 64
    31ca:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 23);
				deactivate_category_buttons_and_save(button23_addr, 23);
    31ce:	8c e2       	ldi	r24, 0x2C	; 44
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	67 e1       	ldi	r22, 0x17	; 23
    31d4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat8--;
    31d8:	4a 94       	dec	r4
    31da:	1a c0       	rjmp	.+52     	; 0x3210 <__stack+0x1011>
			}
			else if((23 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    31dc:	80 91 64 05 	lds	r24, 0x0564
    31e0:	90 91 65 05 	lds	r25, 0x0565
    31e4:	87 31       	cpi	r24, 0x17	; 23
    31e6:	91 05       	cpc	r25, r1
    31e8:	98 f4       	brcc	.+38     	; 0x3210 <__stack+0x1011>
    31ea:	80 91 48 08 	lds	r24, 0x0848
    31ee:	88 23       	and	r24, r24
    31f0:	79 f0       	breq	.+30     	; 0x3210 <__stack+0x1011>
			{
				//USART_putstring("23G ");		// comment this out in final product
				vote_indicator_23 = 1;			// Indicating button 1 was pressed
    31f2:	80 91 0d 06 	lds	r24, 0x060D
    31f6:	80 64       	ori	r24, 0x40	; 64
    31f8:	80 93 0d 06 	sts	0x060D, r24
				deactivate_category_buttons_and_save(button23_addr, 23);
    31fc:	8c e2       	ldi	r24, 0x2C	; 44
    31fe:	90 e0       	ldi	r25, 0x00	; 0
    3200:	67 e1       	ldi	r22, 0x17	; 23
    3202:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 23);
				gen_vote_count--;
    3206:	80 91 48 08 	lds	r24, 0x0848
    320a:	81 50       	subi	r24, 0x01	; 1
    320c:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x07) && (24 <= candidate_count) && vote_indicator_24==0)
    3210:	86 b1       	in	r24, 0x06	; 6
    3212:	81 ff       	sbrs	r24, 1
    3214:	a4 c0       	rjmp	.+328    	; 0x335e <__stack+0x115f>
    3216:	86 b1       	in	r24, 0x06	; 6
    3218:	80 fd       	sbrc	r24, 0
    321a:	a1 c0       	rjmp	.+322    	; 0x335e <__stack+0x115f>
    321c:	86 b1       	in	r24, 0x06	; 6
    321e:	82 fd       	sbrc	r24, 2
    3220:	9e c0       	rjmp	.+316    	; 0x335e <__stack+0x115f>
    3222:	86 b1       	in	r24, 0x06	; 6
    3224:	83 fd       	sbrc	r24, 3
    3226:	9b c0       	rjmp	.+310    	; 0x335e <__stack+0x115f>
    3228:	83 b1       	in	r24, 0x03	; 3
    322a:	8f 70       	andi	r24, 0x0F	; 15
    322c:	87 30       	cpi	r24, 0x07	; 7
    322e:	09 f0       	breq	.+2      	; 0x3232 <__stack+0x1033>
    3230:	96 c0       	rjmp	.+300    	; 0x335e <__stack+0x115f>
    3232:	80 91 f6 05 	lds	r24, 0x05F6
    3236:	88 31       	cpi	r24, 0x18	; 24
    3238:	08 f4       	brcc	.+2      	; 0x323c <__stack+0x103d>
    323a:	91 c0       	rjmp	.+290    	; 0x335e <__stack+0x115f>
    323c:	80 91 0d 06 	lds	r24, 0x060D
    3240:	88 23       	and	r24, r24
    3242:	0c f4       	brge	.+2      	; 0x3246 <__stack+0x1047>
    3244:	8c c0       	rjmp	.+280    	; 0x335e <__stack+0x115f>
		{
			if((24 > category_size_1) && (24 <= category_size_2) && (no_of_votes_cat2 != 0))
    3246:	87 e1       	ldi	r24, 0x17	; 23
    3248:	85 15       	cp	r24, r5
    324a:	70 f4       	brcc	.+28     	; 0x3268 <__stack+0x1069>
    324c:	cc 20       	and	r12, r12
    324e:	e9 f0       	breq	.+58     	; 0x328a <__stack+0x108b>
			{
				//USART_putstring("24C2 ");
				vote_indicator_24 = 1;	// Indicating button 12 was presses.
    3250:	80 91 0d 06 	lds	r24, 0x060D
    3254:	80 68       	ori	r24, 0x80	; 128
    3256:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 24);
				deactivate_category_buttons_and_save(button24_addr, 24);
    325a:	8e e2       	ldi	r24, 0x2E	; 46
    325c:	90 e0       	ldi	r25, 0x00	; 0
    325e:	68 e1       	ldi	r22, 0x18	; 24
    3260:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    3264:	ca 94       	dec	r12
    3266:	7b c0       	rjmp	.+246    	; 0x335e <__stack+0x115f>
			}
			else if((24 > category_size_2) && (24 <= category_size_3) && (no_of_votes_cat3 != 0))
    3268:	97 e1       	ldi	r25, 0x17	; 23
    326a:	97 15       	cp	r25, r7
    326c:	88 f4       	brcc	.+34     	; 0x3290 <__stack+0x1091>
    326e:	ff 20       	and	r15, r15
    3270:	01 f1       	breq	.+64     	; 0x32b2 <__stack+0x10b3>
			{
				//USART_putstring("24C3 ");
				vote_indicator_24 = 1;	// Indicating button 12 was presses.
    3272:	80 91 0d 06 	lds	r24, 0x060D
    3276:	80 68       	ori	r24, 0x80	; 128
    3278:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 24);
				deactivate_category_buttons_and_save(button24_addr, 24);
    327c:	8e e2       	ldi	r24, 0x2E	; 46
    327e:	90 e0       	ldi	r25, 0x00	; 0
    3280:	68 e1       	ldi	r22, 0x18	; 24
    3282:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    3286:	fa 94       	dec	r15
    3288:	6a c0       	rjmp	.+212    	; 0x335e <__stack+0x115f>
			}
			else if((24 > category_size_3) && (24 <= category_size_4) && (no_of_votes_cat4 != 0))
    328a:	a7 e1       	ldi	r26, 0x17	; 23
    328c:	a7 15       	cp	r26, r7
    328e:	88 f0       	brcs	.+34     	; 0x32b2 <__stack+0x10b3>
    3290:	b7 e1       	ldi	r27, 0x17	; 23
    3292:	b9 15       	cp	r27, r9
    3294:	88 f4       	brcc	.+34     	; 0x32b8 <__stack+0x10b9>
    3296:	22 20       	and	r2, r2
    3298:	01 f1       	breq	.+64     	; 0x32da <__stack+0x10db>
			{
				//USART_putstring("24C4 ");
				vote_indicator_24 = 1;	// Indicating button 12 was presses.
    329a:	80 91 0d 06 	lds	r24, 0x060D
    329e:	80 68       	ori	r24, 0x80	; 128
    32a0:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 24);
				deactivate_category_buttons_and_save(button24_addr, 24);
    32a4:	8e e2       	ldi	r24, 0x2E	; 46
    32a6:	90 e0       	ldi	r25, 0x00	; 0
    32a8:	68 e1       	ldi	r22, 0x18	; 24
    32aa:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    32ae:	2a 94       	dec	r2
    32b0:	56 c0       	rjmp	.+172    	; 0x335e <__stack+0x115f>
			}
			else if((24 > category_size_4) && (24 <= category_size_5) && (no_of_votes_cat5 != 0))
    32b2:	e7 e1       	ldi	r30, 0x17	; 23
    32b4:	e9 15       	cp	r30, r9
    32b6:	88 f0       	brcs	.+34     	; 0x32da <__stack+0x10db>
    32b8:	f7 e1       	ldi	r31, 0x17	; 23
    32ba:	fa 15       	cp	r31, r10
    32bc:	88 f4       	brcc	.+34     	; 0x32e0 <__stack+0x10e1>
    32be:	33 20       	and	r3, r3
    32c0:	01 f1       	breq	.+64     	; 0x3302 <__stack+0x1103>
			{
				//USART_putstring("24C5 ");
				vote_indicator_24 = 1;	// Indicating button 12 was presses.
    32c2:	80 91 0d 06 	lds	r24, 0x060D
    32c6:	80 68       	ori	r24, 0x80	; 128
    32c8:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 24);
				deactivate_category_buttons_and_save(button24_addr, 24);
    32cc:	8e e2       	ldi	r24, 0x2E	; 46
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	68 e1       	ldi	r22, 0x18	; 24
    32d2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    32d6:	3a 94       	dec	r3
    32d8:	42 c0       	rjmp	.+132    	; 0x335e <__stack+0x115f>
			}
			else if((24 > category_size_5) && (24 <= category_size_6) && (no_of_votes_cat6 != 0))
    32da:	87 e1       	ldi	r24, 0x17	; 23
    32dc:	8a 15       	cp	r24, r10
    32de:	88 f0       	brcs	.+34     	; 0x3302 <__stack+0x1103>
    32e0:	97 e1       	ldi	r25, 0x17	; 23
    32e2:	98 15       	cp	r25, r8
    32e4:	88 f4       	brcc	.+34     	; 0x3308 <__stack+0x1109>
    32e6:	11 23       	and	r17, r17
    32e8:	01 f1       	breq	.+64     	; 0x332a <__stack+0x112b>
			{
				//USART_putstring("24C6 ");
				vote_indicator_24 = 1;	// Indicating button 12 was presses.
    32ea:	80 91 0d 06 	lds	r24, 0x060D
    32ee:	80 68       	ori	r24, 0x80	; 128
    32f0:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 24);
				deactivate_category_buttons_and_save(button24_addr, 24);
    32f4:	8e e2       	ldi	r24, 0x2E	; 46
    32f6:	90 e0       	ldi	r25, 0x00	; 0
    32f8:	68 e1       	ldi	r22, 0x18	; 24
    32fa:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    32fe:	11 50       	subi	r17, 0x01	; 1
    3300:	2e c0       	rjmp	.+92     	; 0x335e <__stack+0x115f>
			}
			else if((24 > category_size_6) && (24 <= category_size_7) && (no_of_votes_cat7 != 0))
    3302:	a7 e1       	ldi	r26, 0x17	; 23
    3304:	a8 15       	cp	r26, r8
    3306:	88 f0       	brcs	.+34     	; 0x332a <__stack+0x112b>
    3308:	b7 e1       	ldi	r27, 0x17	; 23
    330a:	b6 15       	cp	r27, r6
    330c:	70 f4       	brcc	.+28     	; 0x332a <__stack+0x112b>
    330e:	00 23       	and	r16, r16
    3310:	61 f0       	breq	.+24     	; 0x332a <__stack+0x112b>
			{
				//USART_putstring("24C7 ");
				vote_indicator_24 = 1;	// Indicating button 12 was presses.
    3312:	80 91 0d 06 	lds	r24, 0x060D
    3316:	80 68       	ori	r24, 0x80	; 128
    3318:	80 93 0d 06 	sts	0x060D, r24
				//i2c_send_byte(PIC_DEV_ADDR, 24);
				deactivate_category_buttons_and_save(button24_addr, 24);
    331c:	8e e2       	ldi	r24, 0x2E	; 46
    331e:	90 e0       	ldi	r25, 0x00	; 0
    3320:	68 e1       	ldi	r22, 0x18	; 24
    3322:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    3326:	01 50       	subi	r16, 0x01	; 1
    3328:	1a c0       	rjmp	.+52     	; 0x335e <__stack+0x115f>
				//vote_indicator_24 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 24);
				//deactivate_category_buttons_and_save(button24_addr, 24);
				//no_of_votes_cat8--;
			//}
			else if((24 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    332a:	80 91 64 05 	lds	r24, 0x0564
    332e:	90 91 65 05 	lds	r25, 0x0565
    3332:	88 31       	cpi	r24, 0x18	; 24
    3334:	91 05       	cpc	r25, r1
    3336:	98 f4       	brcc	.+38     	; 0x335e <__stack+0x115f>
    3338:	80 91 48 08 	lds	r24, 0x0848
    333c:	88 23       	and	r24, r24
    333e:	79 f0       	breq	.+30     	; 0x335e <__stack+0x115f>
			{
				//USART_putstring("24G ");		// comment this out in final product
				vote_indicator_24 = 1;			// Indicating button 1 was pressed
    3340:	80 91 0d 06 	lds	r24, 0x060D
    3344:	80 68       	ori	r24, 0x80	; 128
    3346:	80 93 0d 06 	sts	0x060D, r24
				deactivate_category_buttons_and_save(button24_addr, 24);
    334a:	8e e2       	ldi	r24, 0x2E	; 46
    334c:	90 e0       	ldi	r25, 0x00	; 0
    334e:	68 e1       	ldi	r22, 0x18	; 24
    3350:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 24);
				gen_vote_count--;
    3354:	80 91 48 08 	lds	r24, 0x0848
    3358:	81 50       	subi	r24, 0x01	; 1
    335a:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x08) && (25 <= candidate_count) && vote_indicator_25==0)
    335e:	86 b1       	in	r24, 0x06	; 6
    3360:	81 ff       	sbrs	r24, 1
    3362:	a3 c0       	rjmp	.+326    	; 0x34aa <__stack+0x12ab>
    3364:	86 b1       	in	r24, 0x06	; 6
    3366:	80 fd       	sbrc	r24, 0
    3368:	a0 c0       	rjmp	.+320    	; 0x34aa <__stack+0x12ab>
    336a:	86 b1       	in	r24, 0x06	; 6
    336c:	82 fd       	sbrc	r24, 2
    336e:	9d c0       	rjmp	.+314    	; 0x34aa <__stack+0x12ab>
    3370:	86 b1       	in	r24, 0x06	; 6
    3372:	83 fd       	sbrc	r24, 3
    3374:	9a c0       	rjmp	.+308    	; 0x34aa <__stack+0x12ab>
    3376:	83 b1       	in	r24, 0x03	; 3
    3378:	8f 70       	andi	r24, 0x0F	; 15
    337a:	88 30       	cpi	r24, 0x08	; 8
    337c:	09 f0       	breq	.+2      	; 0x3380 <__stack+0x1181>
    337e:	95 c0       	rjmp	.+298    	; 0x34aa <__stack+0x12ab>
    3380:	80 91 f6 05 	lds	r24, 0x05F6
    3384:	89 31       	cpi	r24, 0x19	; 25
    3386:	08 f4       	brcc	.+2      	; 0x338a <__stack+0x118b>
    3388:	90 c0       	rjmp	.+288    	; 0x34aa <__stack+0x12ab>
    338a:	80 91 60 05 	lds	r24, 0x0560
    338e:	80 fd       	sbrc	r24, 0
    3390:	8c c0       	rjmp	.+280    	; 0x34aa <__stack+0x12ab>
		{
			if((25 > category_size_1) && (25 <= category_size_2) && (no_of_votes_cat2 != 0))
    3392:	e8 e1       	ldi	r30, 0x18	; 24
    3394:	e5 15       	cp	r30, r5
    3396:	70 f4       	brcc	.+28     	; 0x33b4 <__stack+0x11b5>
    3398:	cc 20       	and	r12, r12
    339a:	e9 f0       	breq	.+58     	; 0x33d6 <__stack+0x11d7>
			{
				//USART_putstring("25C2 ");
				vote_indicator_25 = 1;	// Indicating button 12 was presses.
    339c:	80 91 60 05 	lds	r24, 0x0560
    33a0:	81 60       	ori	r24, 0x01	; 1
    33a2:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 25);
				deactivate_category_buttons_and_save(button25_addr, 25);
    33a6:	80 e3       	ldi	r24, 0x30	; 48
    33a8:	90 e0       	ldi	r25, 0x00	; 0
    33aa:	69 e1       	ldi	r22, 0x19	; 25
    33ac:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    33b0:	ca 94       	dec	r12
    33b2:	7b c0       	rjmp	.+246    	; 0x34aa <__stack+0x12ab>
			}
			else if((25 > category_size_2) && (25 <= category_size_3) && (no_of_votes_cat3 != 0))
    33b4:	f8 e1       	ldi	r31, 0x18	; 24
    33b6:	f7 15       	cp	r31, r7
    33b8:	88 f4       	brcc	.+34     	; 0x33dc <__stack+0x11dd>
    33ba:	ff 20       	and	r15, r15
    33bc:	01 f1       	breq	.+64     	; 0x33fe <__stack+0x11ff>
			{
				//USART_putstring("25C3 ");
				vote_indicator_25 = 1;	// Indicating button 12 was presses.
    33be:	80 91 60 05 	lds	r24, 0x0560
    33c2:	81 60       	ori	r24, 0x01	; 1
    33c4:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 25);
				deactivate_category_buttons_and_save(button25_addr, 25);
    33c8:	80 e3       	ldi	r24, 0x30	; 48
    33ca:	90 e0       	ldi	r25, 0x00	; 0
    33cc:	69 e1       	ldi	r22, 0x19	; 25
    33ce:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    33d2:	fa 94       	dec	r15
    33d4:	6a c0       	rjmp	.+212    	; 0x34aa <__stack+0x12ab>
			}
			else if((25 > category_size_3) && (25 <= category_size_4) && (no_of_votes_cat4 != 0))
    33d6:	88 e1       	ldi	r24, 0x18	; 24
    33d8:	87 15       	cp	r24, r7
    33da:	88 f0       	brcs	.+34     	; 0x33fe <__stack+0x11ff>
    33dc:	98 e1       	ldi	r25, 0x18	; 24
    33de:	99 15       	cp	r25, r9
    33e0:	88 f4       	brcc	.+34     	; 0x3404 <__stack+0x1205>
    33e2:	22 20       	and	r2, r2
    33e4:	01 f1       	breq	.+64     	; 0x3426 <__stack+0x1227>
			{
				//USART_putstring("25C4 ");
				vote_indicator_25 = 1;	// Indicating button 12 was presses.
    33e6:	80 91 60 05 	lds	r24, 0x0560
    33ea:	81 60       	ori	r24, 0x01	; 1
    33ec:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 25);
				deactivate_category_buttons_and_save(button25_addr, 25);
    33f0:	80 e3       	ldi	r24, 0x30	; 48
    33f2:	90 e0       	ldi	r25, 0x00	; 0
    33f4:	69 e1       	ldi	r22, 0x19	; 25
    33f6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    33fa:	2a 94       	dec	r2
    33fc:	56 c0       	rjmp	.+172    	; 0x34aa <__stack+0x12ab>
			}
			else if((25 > category_size_4) && (25 <= category_size_5) && (no_of_votes_cat5 != 0))
    33fe:	a8 e1       	ldi	r26, 0x18	; 24
    3400:	a9 15       	cp	r26, r9
    3402:	88 f0       	brcs	.+34     	; 0x3426 <__stack+0x1227>
    3404:	b8 e1       	ldi	r27, 0x18	; 24
    3406:	ba 15       	cp	r27, r10
    3408:	88 f4       	brcc	.+34     	; 0x342c <__stack+0x122d>
    340a:	33 20       	and	r3, r3
    340c:	01 f1       	breq	.+64     	; 0x344e <__stack+0x124f>
			{
				//USART_putstring("25C5 ");
				vote_indicator_25 = 1;	// Indicating button 12 was presses.
    340e:	80 91 60 05 	lds	r24, 0x0560
    3412:	81 60       	ori	r24, 0x01	; 1
    3414:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 25);
				deactivate_category_buttons_and_save(button25_addr, 25);
    3418:	80 e3       	ldi	r24, 0x30	; 48
    341a:	90 e0       	ldi	r25, 0x00	; 0
    341c:	69 e1       	ldi	r22, 0x19	; 25
    341e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    3422:	3a 94       	dec	r3
    3424:	42 c0       	rjmp	.+132    	; 0x34aa <__stack+0x12ab>
			}
			else if((25 > category_size_5) && (25 <= category_size_6) && (no_of_votes_cat6 != 0))
    3426:	e8 e1       	ldi	r30, 0x18	; 24
    3428:	ea 15       	cp	r30, r10
    342a:	88 f0       	brcs	.+34     	; 0x344e <__stack+0x124f>
    342c:	f8 e1       	ldi	r31, 0x18	; 24
    342e:	f8 15       	cp	r31, r8
    3430:	88 f4       	brcc	.+34     	; 0x3454 <__stack+0x1255>
    3432:	11 23       	and	r17, r17
    3434:	01 f1       	breq	.+64     	; 0x3476 <__stack+0x1277>
			{
				//USART_putstring("25C6 ");
				vote_indicator_25 = 1;	// Indicating button 12 was presses.
    3436:	80 91 60 05 	lds	r24, 0x0560
    343a:	81 60       	ori	r24, 0x01	; 1
    343c:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 25);
				deactivate_category_buttons_and_save(button25_addr, 25);
    3440:	80 e3       	ldi	r24, 0x30	; 48
    3442:	90 e0       	ldi	r25, 0x00	; 0
    3444:	69 e1       	ldi	r22, 0x19	; 25
    3446:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    344a:	11 50       	subi	r17, 0x01	; 1
    344c:	2e c0       	rjmp	.+92     	; 0x34aa <__stack+0x12ab>
			}
			else if((25 > category_size_6) && (25 <= category_size_7) && (no_of_votes_cat7 != 0))
    344e:	88 e1       	ldi	r24, 0x18	; 24
    3450:	88 15       	cp	r24, r8
    3452:	88 f0       	brcs	.+34     	; 0x3476 <__stack+0x1277>
    3454:	98 e1       	ldi	r25, 0x18	; 24
    3456:	96 15       	cp	r25, r6
    3458:	70 f4       	brcc	.+28     	; 0x3476 <__stack+0x1277>
    345a:	00 23       	and	r16, r16
    345c:	61 f0       	breq	.+24     	; 0x3476 <__stack+0x1277>
			{
				//USART_putstring("25C7 ");
				vote_indicator_25 = 1;	// Indicating button 12 was presses.
    345e:	80 91 60 05 	lds	r24, 0x0560
    3462:	81 60       	ori	r24, 0x01	; 1
    3464:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 25);
				deactivate_category_buttons_and_save(button25_addr, 25);
    3468:	80 e3       	ldi	r24, 0x30	; 48
    346a:	90 e0       	ldi	r25, 0x00	; 0
    346c:	69 e1       	ldi	r22, 0x19	; 25
    346e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    3472:	01 50       	subi	r16, 0x01	; 1
    3474:	1a c0       	rjmp	.+52     	; 0x34aa <__stack+0x12ab>
				//vote_indicator_25 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 25);
				//deactivate_category_buttons_and_save(button25_addr, 25);
				//no_of_votes_cat8--;
			//}
			else if((25 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3476:	80 91 64 05 	lds	r24, 0x0564
    347a:	90 91 65 05 	lds	r25, 0x0565
    347e:	89 31       	cpi	r24, 0x19	; 25
    3480:	91 05       	cpc	r25, r1
    3482:	98 f4       	brcc	.+38     	; 0x34aa <__stack+0x12ab>
    3484:	80 91 48 08 	lds	r24, 0x0848
    3488:	88 23       	and	r24, r24
    348a:	79 f0       	breq	.+30     	; 0x34aa <__stack+0x12ab>
			{
				//USART_putstring("25G ");		// comment this out in final product
				vote_indicator_25 = 1;			// Indicating button 1 was pressed
    348c:	80 91 60 05 	lds	r24, 0x0560
    3490:	81 60       	ori	r24, 0x01	; 1
    3492:	80 93 60 05 	sts	0x0560, r24
				deactivate_category_buttons_and_save(button25_addr, 25);
    3496:	80 e3       	ldi	r24, 0x30	; 48
    3498:	90 e0       	ldi	r25, 0x00	; 0
    349a:	69 e1       	ldi	r22, 0x19	; 25
    349c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 25);
				gen_vote_count--;
    34a0:	80 91 48 08 	lds	r24, 0x0848
    34a4:	81 50       	subi	r24, 0x01	; 1
    34a6:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x09) && (26 <= candidate_count) && vote_indicator_26 == 0)
    34aa:	86 b1       	in	r24, 0x06	; 6
    34ac:	81 ff       	sbrs	r24, 1
    34ae:	b7 c0       	rjmp	.+366    	; 0x361e <__stack+0x141f>
    34b0:	86 b1       	in	r24, 0x06	; 6
    34b2:	80 fd       	sbrc	r24, 0
    34b4:	b4 c0       	rjmp	.+360    	; 0x361e <__stack+0x141f>
    34b6:	86 b1       	in	r24, 0x06	; 6
    34b8:	82 fd       	sbrc	r24, 2
    34ba:	b1 c0       	rjmp	.+354    	; 0x361e <__stack+0x141f>
    34bc:	86 b1       	in	r24, 0x06	; 6
    34be:	83 fd       	sbrc	r24, 3
    34c0:	ae c0       	rjmp	.+348    	; 0x361e <__stack+0x141f>
    34c2:	83 b1       	in	r24, 0x03	; 3
    34c4:	8f 70       	andi	r24, 0x0F	; 15
    34c6:	89 30       	cpi	r24, 0x09	; 9
    34c8:	09 f0       	breq	.+2      	; 0x34cc <__stack+0x12cd>
    34ca:	a9 c0       	rjmp	.+338    	; 0x361e <__stack+0x141f>
    34cc:	80 91 f6 05 	lds	r24, 0x05F6
    34d0:	8a 31       	cpi	r24, 0x1A	; 26
    34d2:	08 f4       	brcc	.+2      	; 0x34d6 <__stack+0x12d7>
    34d4:	a4 c0       	rjmp	.+328    	; 0x361e <__stack+0x141f>
    34d6:	80 91 60 05 	lds	r24, 0x0560
    34da:	81 fd       	sbrc	r24, 1
    34dc:	a0 c0       	rjmp	.+320    	; 0x361e <__stack+0x141f>
		{
			if((26 > category_size_1) && (26 <= category_size_2) && (no_of_votes_cat2 != 0))
    34de:	a9 e1       	ldi	r26, 0x19	; 25
    34e0:	a5 15       	cp	r26, r5
    34e2:	70 f4       	brcc	.+28     	; 0x3500 <__stack+0x1301>
    34e4:	cc 20       	and	r12, r12
    34e6:	e9 f0       	breq	.+58     	; 0x3522 <__stack+0x1323>
			{
				//USART_putstring("26C2 ");
				vote_indicator_26 = 1;	// Indicating button 12 was presses.
    34e8:	80 91 60 05 	lds	r24, 0x0560
    34ec:	82 60       	ori	r24, 0x02	; 2
    34ee:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 26);
				deactivate_category_buttons_and_save(button26_addr, 26);
    34f2:	82 e3       	ldi	r24, 0x32	; 50
    34f4:	90 e0       	ldi	r25, 0x00	; 0
    34f6:	6a e1       	ldi	r22, 0x1A	; 26
    34f8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    34fc:	ca 94       	dec	r12
    34fe:	8f c0       	rjmp	.+286    	; 0x361e <__stack+0x141f>
			}
			else if((26 > category_size_2) && (26 <= category_size_3) && (no_of_votes_cat3 != 0))
    3500:	b9 e1       	ldi	r27, 0x19	; 25
    3502:	b7 15       	cp	r27, r7
    3504:	88 f4       	brcc	.+34     	; 0x3528 <__stack+0x1329>
    3506:	ff 20       	and	r15, r15
    3508:	01 f1       	breq	.+64     	; 0x354a <__stack+0x134b>
			{
				//USART_putstring("26C3 ");
				vote_indicator_26 = 1;	// Indicating button 12 was presses.
    350a:	80 91 60 05 	lds	r24, 0x0560
    350e:	82 60       	ori	r24, 0x02	; 2
    3510:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 26);
				deactivate_category_buttons_and_save(button26_addr, 26);
    3514:	82 e3       	ldi	r24, 0x32	; 50
    3516:	90 e0       	ldi	r25, 0x00	; 0
    3518:	6a e1       	ldi	r22, 0x1A	; 26
    351a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    351e:	fa 94       	dec	r15
    3520:	7e c0       	rjmp	.+252    	; 0x361e <__stack+0x141f>
			}
			else if((26 > category_size_3) && (26 <= category_size_4) && (no_of_votes_cat4 != 0))
    3522:	e9 e1       	ldi	r30, 0x19	; 25
    3524:	e7 15       	cp	r30, r7
    3526:	88 f0       	brcs	.+34     	; 0x354a <__stack+0x134b>
    3528:	f9 e1       	ldi	r31, 0x19	; 25
    352a:	f9 15       	cp	r31, r9
    352c:	88 f4       	brcc	.+34     	; 0x3550 <__stack+0x1351>
    352e:	22 20       	and	r2, r2
    3530:	01 f1       	breq	.+64     	; 0x3572 <__stack+0x1373>
			{
				//USART_putstring("26C4 ");
				vote_indicator_26 = 1;	// Indicating button 12 was presses.
    3532:	80 91 60 05 	lds	r24, 0x0560
    3536:	82 60       	ori	r24, 0x02	; 2
    3538:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 26);
				deactivate_category_buttons_and_save(button26_addr, 26);
    353c:	82 e3       	ldi	r24, 0x32	; 50
    353e:	90 e0       	ldi	r25, 0x00	; 0
    3540:	6a e1       	ldi	r22, 0x1A	; 26
    3542:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    3546:	2a 94       	dec	r2
    3548:	6a c0       	rjmp	.+212    	; 0x361e <__stack+0x141f>
			}
			else if((26 > category_size_4) && (26 <= category_size_5) && (no_of_votes_cat5 != 0))
    354a:	89 e1       	ldi	r24, 0x19	; 25
    354c:	89 15       	cp	r24, r9
    354e:	88 f0       	brcs	.+34     	; 0x3572 <__stack+0x1373>
    3550:	99 e1       	ldi	r25, 0x19	; 25
    3552:	9a 15       	cp	r25, r10
    3554:	88 f4       	brcc	.+34     	; 0x3578 <__stack+0x1379>
    3556:	33 20       	and	r3, r3
    3558:	01 f1       	breq	.+64     	; 0x359a <__stack+0x139b>
			{
				//USART_putstring("26C5 ");
				vote_indicator_26 = 1;	// Indicating button 12 was presses.
    355a:	80 91 60 05 	lds	r24, 0x0560
    355e:	82 60       	ori	r24, 0x02	; 2
    3560:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 26);
				deactivate_category_buttons_and_save(button26_addr, 26);
    3564:	82 e3       	ldi	r24, 0x32	; 50
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	6a e1       	ldi	r22, 0x1A	; 26
    356a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    356e:	3a 94       	dec	r3
    3570:	56 c0       	rjmp	.+172    	; 0x361e <__stack+0x141f>
			}
			else if((26 > category_size_5) && (26 <= category_size_6) && (no_of_votes_cat6 != 0))
    3572:	a9 e1       	ldi	r26, 0x19	; 25
    3574:	aa 15       	cp	r26, r10
    3576:	88 f0       	brcs	.+34     	; 0x359a <__stack+0x139b>
    3578:	b9 e1       	ldi	r27, 0x19	; 25
    357a:	b8 15       	cp	r27, r8
    357c:	88 f4       	brcc	.+34     	; 0x35a0 <__stack+0x13a1>
    357e:	11 23       	and	r17, r17
    3580:	01 f1       	breq	.+64     	; 0x35c2 <__stack+0x13c3>
			{
				//USART_putstring("26C6 ");
				vote_indicator_26 = 1;	// Indicating button 12 was presses.
    3582:	80 91 60 05 	lds	r24, 0x0560
    3586:	82 60       	ori	r24, 0x02	; 2
    3588:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 26);
				deactivate_category_buttons_and_save(button26_addr, 26);
    358c:	82 e3       	ldi	r24, 0x32	; 50
    358e:	90 e0       	ldi	r25, 0x00	; 0
    3590:	6a e1       	ldi	r22, 0x1A	; 26
    3592:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    3596:	11 50       	subi	r17, 0x01	; 1
    3598:	42 c0       	rjmp	.+132    	; 0x361e <__stack+0x141f>
			}
			else if((26 > category_size_6) && (26 <= category_size_7) && (no_of_votes_cat7 != 0))
    359a:	e9 e1       	ldi	r30, 0x19	; 25
    359c:	e8 15       	cp	r30, r8
    359e:	88 f0       	brcs	.+34     	; 0x35c2 <__stack+0x13c3>
    35a0:	f9 e1       	ldi	r31, 0x19	; 25
    35a2:	f6 15       	cp	r31, r6
    35a4:	88 f4       	brcc	.+34     	; 0x35c8 <__stack+0x13c9>
    35a6:	00 23       	and	r16, r16
    35a8:	01 f1       	breq	.+64     	; 0x35ea <__stack+0x13eb>
			{
				//USART_putstring("26C7 ");
				vote_indicator_26 = 1;	// Indicating button 12 was presses.
    35aa:	80 91 60 05 	lds	r24, 0x0560
    35ae:	82 60       	ori	r24, 0x02	; 2
    35b0:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 26);
				deactivate_category_buttons_and_save(button26_addr, 26);
    35b4:	82 e3       	ldi	r24, 0x32	; 50
    35b6:	90 e0       	ldi	r25, 0x00	; 0
    35b8:	6a e1       	ldi	r22, 0x1A	; 26
    35ba:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    35be:	01 50       	subi	r16, 0x01	; 1
    35c0:	2e c0       	rjmp	.+92     	; 0x361e <__stack+0x141f>
			}
			else if((26 > category_size_7) && (26 <= category_size_8) && (no_of_votes_cat8 != 0))
    35c2:	89 e1       	ldi	r24, 0x19	; 25
    35c4:	86 15       	cp	r24, r6
    35c6:	88 f0       	brcs	.+34     	; 0x35ea <__stack+0x13eb>
    35c8:	99 e1       	ldi	r25, 0x19	; 25
    35ca:	9e 15       	cp	r25, r14
    35cc:	70 f4       	brcc	.+28     	; 0x35ea <__stack+0x13eb>
    35ce:	44 20       	and	r4, r4
    35d0:	61 f0       	breq	.+24     	; 0x35ea <__stack+0x13eb>
			{
				//USART_putstring("26C8 ");
				vote_indicator_26 = 1;	// Indicating button 12 was presses.
    35d2:	80 91 60 05 	lds	r24, 0x0560
    35d6:	82 60       	ori	r24, 0x02	; 2
    35d8:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 26);
				deactivate_category_buttons_and_save(button26_addr, 26);
    35dc:	82 e3       	ldi	r24, 0x32	; 50
    35de:	90 e0       	ldi	r25, 0x00	; 0
    35e0:	6a e1       	ldi	r22, 0x1A	; 26
    35e2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat8--;
    35e6:	4a 94       	dec	r4
    35e8:	1a c0       	rjmp	.+52     	; 0x361e <__stack+0x141f>
			}
			else if((26 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    35ea:	80 91 64 05 	lds	r24, 0x0564
    35ee:	90 91 65 05 	lds	r25, 0x0565
    35f2:	8a 31       	cpi	r24, 0x1A	; 26
    35f4:	91 05       	cpc	r25, r1
    35f6:	98 f4       	brcc	.+38     	; 0x361e <__stack+0x141f>
    35f8:	80 91 48 08 	lds	r24, 0x0848
    35fc:	88 23       	and	r24, r24
    35fe:	79 f0       	breq	.+30     	; 0x361e <__stack+0x141f>
			{
				//USART_putstring("26G ");		// comment this out in final product
				vote_indicator_26 = 1;			// Indicating button 1 was pressed
    3600:	80 91 60 05 	lds	r24, 0x0560
    3604:	82 60       	ori	r24, 0x02	; 2
    3606:	80 93 60 05 	sts	0x0560, r24
				deactivate_category_buttons_and_save(button26_addr, 26);
    360a:	82 e3       	ldi	r24, 0x32	; 50
    360c:	90 e0       	ldi	r25, 0x00	; 0
    360e:	6a e1       	ldi	r22, 0x1A	; 26
    3610:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 26);
				gen_vote_count--;
    3614:	80 91 48 08 	lds	r24, 0x0848
    3618:	81 50       	subi	r24, 0x01	; 1
    361a:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0A) && (27 <= candidate_count) && vote_indicator_27==0)
    361e:	86 b1       	in	r24, 0x06	; 6
    3620:	81 ff       	sbrs	r24, 1
    3622:	a3 c0       	rjmp	.+326    	; 0x376a <__stack+0x156b>
    3624:	86 b1       	in	r24, 0x06	; 6
    3626:	80 fd       	sbrc	r24, 0
    3628:	a0 c0       	rjmp	.+320    	; 0x376a <__stack+0x156b>
    362a:	86 b1       	in	r24, 0x06	; 6
    362c:	82 fd       	sbrc	r24, 2
    362e:	9d c0       	rjmp	.+314    	; 0x376a <__stack+0x156b>
    3630:	86 b1       	in	r24, 0x06	; 6
    3632:	83 fd       	sbrc	r24, 3
    3634:	9a c0       	rjmp	.+308    	; 0x376a <__stack+0x156b>
    3636:	83 b1       	in	r24, 0x03	; 3
    3638:	8f 70       	andi	r24, 0x0F	; 15
    363a:	8a 30       	cpi	r24, 0x0A	; 10
    363c:	09 f0       	breq	.+2      	; 0x3640 <__stack+0x1441>
    363e:	95 c0       	rjmp	.+298    	; 0x376a <__stack+0x156b>
    3640:	80 91 f6 05 	lds	r24, 0x05F6
    3644:	8b 31       	cpi	r24, 0x1B	; 27
    3646:	08 f4       	brcc	.+2      	; 0x364a <__stack+0x144b>
    3648:	90 c0       	rjmp	.+288    	; 0x376a <__stack+0x156b>
    364a:	80 91 60 05 	lds	r24, 0x0560
    364e:	82 fd       	sbrc	r24, 2
    3650:	8c c0       	rjmp	.+280    	; 0x376a <__stack+0x156b>
		{
			if((27 > category_size_1) && (27 <= category_size_2) && (no_of_votes_cat2 != 0))
    3652:	aa e1       	ldi	r26, 0x1A	; 26
    3654:	a5 15       	cp	r26, r5
    3656:	70 f4       	brcc	.+28     	; 0x3674 <__stack+0x1475>
    3658:	cc 20       	and	r12, r12
    365a:	e9 f0       	breq	.+58     	; 0x3696 <__stack+0x1497>
			{
				//USART_putstring("27C2 ");
				vote_indicator_27 = 1;	// Indicating button 12 was presses.
    365c:	80 91 60 05 	lds	r24, 0x0560
    3660:	84 60       	ori	r24, 0x04	; 4
    3662:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 27);
				deactivate_category_buttons_and_save(button27_addr, 27);
    3666:	84 e3       	ldi	r24, 0x34	; 52
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	6b e1       	ldi	r22, 0x1B	; 27
    366c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    3670:	ca 94       	dec	r12
    3672:	7b c0       	rjmp	.+246    	; 0x376a <__stack+0x156b>
			}
			else if((27 > category_size_2) && (27 <= category_size_3) && (no_of_votes_cat3 != 0))
    3674:	ba e1       	ldi	r27, 0x1A	; 26
    3676:	b7 15       	cp	r27, r7
    3678:	88 f4       	brcc	.+34     	; 0x369c <__stack+0x149d>
    367a:	ff 20       	and	r15, r15
    367c:	01 f1       	breq	.+64     	; 0x36be <__stack+0x14bf>
			{
				//USART_putstring("27C3 ");
				vote_indicator_27 = 1;	// Indicating button 12 was presses.
    367e:	80 91 60 05 	lds	r24, 0x0560
    3682:	84 60       	ori	r24, 0x04	; 4
    3684:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 27);
				deactivate_category_buttons_and_save(button27_addr, 27);
    3688:	84 e3       	ldi	r24, 0x34	; 52
    368a:	90 e0       	ldi	r25, 0x00	; 0
    368c:	6b e1       	ldi	r22, 0x1B	; 27
    368e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    3692:	fa 94       	dec	r15
    3694:	6a c0       	rjmp	.+212    	; 0x376a <__stack+0x156b>
			}
			else if((27 > category_size_3) && (27 <= category_size_4) && (no_of_votes_cat4 != 0))
    3696:	ea e1       	ldi	r30, 0x1A	; 26
    3698:	e7 15       	cp	r30, r7
    369a:	88 f0       	brcs	.+34     	; 0x36be <__stack+0x14bf>
    369c:	fa e1       	ldi	r31, 0x1A	; 26
    369e:	f9 15       	cp	r31, r9
    36a0:	88 f4       	brcc	.+34     	; 0x36c4 <__stack+0x14c5>
    36a2:	22 20       	and	r2, r2
    36a4:	01 f1       	breq	.+64     	; 0x36e6 <__stack+0x14e7>
			{
				//USART_putstring("27C4 ");
				vote_indicator_27 = 1;	// Indicating button 12 was presses.
    36a6:	80 91 60 05 	lds	r24, 0x0560
    36aa:	84 60       	ori	r24, 0x04	; 4
    36ac:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 27);
				deactivate_category_buttons_and_save(button27_addr, 27);
    36b0:	84 e3       	ldi	r24, 0x34	; 52
    36b2:	90 e0       	ldi	r25, 0x00	; 0
    36b4:	6b e1       	ldi	r22, 0x1B	; 27
    36b6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    36ba:	2a 94       	dec	r2
    36bc:	56 c0       	rjmp	.+172    	; 0x376a <__stack+0x156b>
			}
			else if((27 > category_size_4) && (27 <= category_size_5) && (no_of_votes_cat5 != 0))
    36be:	8a e1       	ldi	r24, 0x1A	; 26
    36c0:	89 15       	cp	r24, r9
    36c2:	88 f0       	brcs	.+34     	; 0x36e6 <__stack+0x14e7>
    36c4:	9a e1       	ldi	r25, 0x1A	; 26
    36c6:	9a 15       	cp	r25, r10
    36c8:	88 f4       	brcc	.+34     	; 0x36ec <__stack+0x14ed>
    36ca:	33 20       	and	r3, r3
    36cc:	01 f1       	breq	.+64     	; 0x370e <__stack+0x150f>
			{
				//USART_putstring("27C5 ");
				vote_indicator_27 = 1;	// Indicating button 12 was presses.
    36ce:	80 91 60 05 	lds	r24, 0x0560
    36d2:	84 60       	ori	r24, 0x04	; 4
    36d4:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 27);
				deactivate_category_buttons_and_save(button27_addr, 27);
    36d8:	84 e3       	ldi	r24, 0x34	; 52
    36da:	90 e0       	ldi	r25, 0x00	; 0
    36dc:	6b e1       	ldi	r22, 0x1B	; 27
    36de:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    36e2:	3a 94       	dec	r3
    36e4:	42 c0       	rjmp	.+132    	; 0x376a <__stack+0x156b>
			}
			else if((27 > category_size_5) && (27 <= category_size_6) && (no_of_votes_cat6 != 0))
    36e6:	aa e1       	ldi	r26, 0x1A	; 26
    36e8:	aa 15       	cp	r26, r10
    36ea:	88 f0       	brcs	.+34     	; 0x370e <__stack+0x150f>
    36ec:	ba e1       	ldi	r27, 0x1A	; 26
    36ee:	b8 15       	cp	r27, r8
    36f0:	88 f4       	brcc	.+34     	; 0x3714 <__stack+0x1515>
    36f2:	11 23       	and	r17, r17
    36f4:	01 f1       	breq	.+64     	; 0x3736 <__stack+0x1537>
			{
				//USART_putstring("27C6 ");
				vote_indicator_27 = 1;	// Indicating button 12 was presses.
    36f6:	80 91 60 05 	lds	r24, 0x0560
    36fa:	84 60       	ori	r24, 0x04	; 4
    36fc:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 27);
				deactivate_category_buttons_and_save(button27_addr, 27);
    3700:	84 e3       	ldi	r24, 0x34	; 52
    3702:	90 e0       	ldi	r25, 0x00	; 0
    3704:	6b e1       	ldi	r22, 0x1B	; 27
    3706:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    370a:	11 50       	subi	r17, 0x01	; 1
    370c:	2e c0       	rjmp	.+92     	; 0x376a <__stack+0x156b>
			}
			else if((27 > category_size_6) && (27 <= category_size_7) && (no_of_votes_cat7 != 0))
    370e:	ea e1       	ldi	r30, 0x1A	; 26
    3710:	e8 15       	cp	r30, r8
    3712:	88 f0       	brcs	.+34     	; 0x3736 <__stack+0x1537>
    3714:	fa e1       	ldi	r31, 0x1A	; 26
    3716:	f6 15       	cp	r31, r6
    3718:	70 f4       	brcc	.+28     	; 0x3736 <__stack+0x1537>
    371a:	00 23       	and	r16, r16
    371c:	61 f0       	breq	.+24     	; 0x3736 <__stack+0x1537>
			{
				//USART_putstring("27C7 ");
				vote_indicator_27 = 1;	// Indicating button 12 was presses.
    371e:	80 91 60 05 	lds	r24, 0x0560
    3722:	84 60       	ori	r24, 0x04	; 4
    3724:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 27);
				deactivate_category_buttons_and_save(button27_addr, 27);
    3728:	84 e3       	ldi	r24, 0x34	; 52
    372a:	90 e0       	ldi	r25, 0x00	; 0
    372c:	6b e1       	ldi	r22, 0x1B	; 27
    372e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    3732:	01 50       	subi	r16, 0x01	; 1
    3734:	1a c0       	rjmp	.+52     	; 0x376a <__stack+0x156b>
				//vote_indicator_27 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 27);
				//deactivate_category_buttons_and_save(button27_addr, 27);
				//no_of_votes_cat8--;
			//}
			else if((27 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3736:	80 91 64 05 	lds	r24, 0x0564
    373a:	90 91 65 05 	lds	r25, 0x0565
    373e:	8b 31       	cpi	r24, 0x1B	; 27
    3740:	91 05       	cpc	r25, r1
    3742:	98 f4       	brcc	.+38     	; 0x376a <__stack+0x156b>
    3744:	80 91 48 08 	lds	r24, 0x0848
    3748:	88 23       	and	r24, r24
    374a:	79 f0       	breq	.+30     	; 0x376a <__stack+0x156b>
			{
				//USART_putstring("27G ");		// comment this out in final product
				vote_indicator_27 = 1;			// Indicating button 1 was pressed
    374c:	80 91 60 05 	lds	r24, 0x0560
    3750:	84 60       	ori	r24, 0x04	; 4
    3752:	80 93 60 05 	sts	0x0560, r24
				deactivate_category_buttons_and_save(button27_addr, 27);
    3756:	84 e3       	ldi	r24, 0x34	; 52
    3758:	90 e0       	ldi	r25, 0x00	; 0
    375a:	6b e1       	ldi	r22, 0x1B	; 27
    375c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 27);
				gen_vote_count--;
    3760:	80 91 48 08 	lds	r24, 0x0848
    3764:	81 50       	subi	r24, 0x01	; 1
    3766:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0B) && (28 <= candidate_count) && vote_indicator_28==0)
    376a:	86 b1       	in	r24, 0x06	; 6
    376c:	81 ff       	sbrs	r24, 1
    376e:	a3 c0       	rjmp	.+326    	; 0x38b6 <__stack+0x16b7>
    3770:	86 b1       	in	r24, 0x06	; 6
    3772:	80 fd       	sbrc	r24, 0
    3774:	a0 c0       	rjmp	.+320    	; 0x38b6 <__stack+0x16b7>
    3776:	86 b1       	in	r24, 0x06	; 6
    3778:	82 fd       	sbrc	r24, 2
    377a:	9d c0       	rjmp	.+314    	; 0x38b6 <__stack+0x16b7>
    377c:	86 b1       	in	r24, 0x06	; 6
    377e:	83 fd       	sbrc	r24, 3
    3780:	9a c0       	rjmp	.+308    	; 0x38b6 <__stack+0x16b7>
    3782:	83 b1       	in	r24, 0x03	; 3
    3784:	8f 70       	andi	r24, 0x0F	; 15
    3786:	8b 30       	cpi	r24, 0x0B	; 11
    3788:	09 f0       	breq	.+2      	; 0x378c <__stack+0x158d>
    378a:	95 c0       	rjmp	.+298    	; 0x38b6 <__stack+0x16b7>
    378c:	80 91 f6 05 	lds	r24, 0x05F6
    3790:	8c 31       	cpi	r24, 0x1C	; 28
    3792:	08 f4       	brcc	.+2      	; 0x3796 <__stack+0x1597>
    3794:	90 c0       	rjmp	.+288    	; 0x38b6 <__stack+0x16b7>
    3796:	80 91 60 05 	lds	r24, 0x0560
    379a:	83 fd       	sbrc	r24, 3
    379c:	8c c0       	rjmp	.+280    	; 0x38b6 <__stack+0x16b7>
		{
			if((28 > category_size_1) && (28 <= category_size_2) && (no_of_votes_cat2 != 0))
    379e:	8b e1       	ldi	r24, 0x1B	; 27
    37a0:	85 15       	cp	r24, r5
    37a2:	70 f4       	brcc	.+28     	; 0x37c0 <__stack+0x15c1>
    37a4:	cc 20       	and	r12, r12
    37a6:	e9 f0       	breq	.+58     	; 0x37e2 <__stack+0x15e3>
			{
				//USART_putstring("28C2 ");
				vote_indicator_28 = 1;	// Indicating button 12 was presses.
    37a8:	80 91 60 05 	lds	r24, 0x0560
    37ac:	88 60       	ori	r24, 0x08	; 8
    37ae:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 28);
				deactivate_category_buttons_and_save(button28_addr, 28);
    37b2:	86 e3       	ldi	r24, 0x36	; 54
    37b4:	90 e0       	ldi	r25, 0x00	; 0
    37b6:	6c e1       	ldi	r22, 0x1C	; 28
    37b8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    37bc:	ca 94       	dec	r12
    37be:	7b c0       	rjmp	.+246    	; 0x38b6 <__stack+0x16b7>
			}
			else if((28 > category_size_2) && (28 <= category_size_3) && (no_of_votes_cat3 != 0))
    37c0:	9b e1       	ldi	r25, 0x1B	; 27
    37c2:	97 15       	cp	r25, r7
    37c4:	88 f4       	brcc	.+34     	; 0x37e8 <__stack+0x15e9>
    37c6:	ff 20       	and	r15, r15
    37c8:	01 f1       	breq	.+64     	; 0x380a <__stack+0x160b>
			{
				//USART_putstring("28C3 ");
				vote_indicator_28 = 1;	// Indicating button 12 was presses.
    37ca:	80 91 60 05 	lds	r24, 0x0560
    37ce:	88 60       	ori	r24, 0x08	; 8
    37d0:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 28);
				deactivate_category_buttons_and_save(button28_addr, 28);
    37d4:	86 e3       	ldi	r24, 0x36	; 54
    37d6:	90 e0       	ldi	r25, 0x00	; 0
    37d8:	6c e1       	ldi	r22, 0x1C	; 28
    37da:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    37de:	fa 94       	dec	r15
    37e0:	6a c0       	rjmp	.+212    	; 0x38b6 <__stack+0x16b7>
			}
			else if((28 > category_size_3) && (28 <= category_size_4) && (no_of_votes_cat4 != 0))
    37e2:	ab e1       	ldi	r26, 0x1B	; 27
    37e4:	a7 15       	cp	r26, r7
    37e6:	88 f0       	brcs	.+34     	; 0x380a <__stack+0x160b>
    37e8:	bb e1       	ldi	r27, 0x1B	; 27
    37ea:	b9 15       	cp	r27, r9
    37ec:	88 f4       	brcc	.+34     	; 0x3810 <__stack+0x1611>
    37ee:	22 20       	and	r2, r2
    37f0:	01 f1       	breq	.+64     	; 0x3832 <__stack+0x1633>
			{
				//USART_putstring("28C4 ");
				vote_indicator_28 = 1;	// Indicating button 12 was presses.
    37f2:	80 91 60 05 	lds	r24, 0x0560
    37f6:	88 60       	ori	r24, 0x08	; 8
    37f8:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 28);
				deactivate_category_buttons_and_save(button28_addr, 28);
    37fc:	86 e3       	ldi	r24, 0x36	; 54
    37fe:	90 e0       	ldi	r25, 0x00	; 0
    3800:	6c e1       	ldi	r22, 0x1C	; 28
    3802:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    3806:	2a 94       	dec	r2
    3808:	56 c0       	rjmp	.+172    	; 0x38b6 <__stack+0x16b7>
			}
			else if((28 > category_size_4) && (28 <= category_size_5) && (no_of_votes_cat5 != 0))
    380a:	eb e1       	ldi	r30, 0x1B	; 27
    380c:	e9 15       	cp	r30, r9
    380e:	88 f0       	brcs	.+34     	; 0x3832 <__stack+0x1633>
    3810:	fb e1       	ldi	r31, 0x1B	; 27
    3812:	fa 15       	cp	r31, r10
    3814:	88 f4       	brcc	.+34     	; 0x3838 <__stack+0x1639>
    3816:	33 20       	and	r3, r3
    3818:	01 f1       	breq	.+64     	; 0x385a <__stack+0x165b>
			{
				//USART_putstring("28C5 ");
				vote_indicator_28 = 1;	// Indicating button 12 was presses.
    381a:	80 91 60 05 	lds	r24, 0x0560
    381e:	88 60       	ori	r24, 0x08	; 8
    3820:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 28);
				deactivate_category_buttons_and_save(button28_addr, 28);
    3824:	86 e3       	ldi	r24, 0x36	; 54
    3826:	90 e0       	ldi	r25, 0x00	; 0
    3828:	6c e1       	ldi	r22, 0x1C	; 28
    382a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    382e:	3a 94       	dec	r3
    3830:	42 c0       	rjmp	.+132    	; 0x38b6 <__stack+0x16b7>
			}
			else if((28 > category_size_5) && (28 <= category_size_6) && (no_of_votes_cat6 != 0))
    3832:	8b e1       	ldi	r24, 0x1B	; 27
    3834:	8a 15       	cp	r24, r10
    3836:	88 f0       	brcs	.+34     	; 0x385a <__stack+0x165b>
    3838:	9b e1       	ldi	r25, 0x1B	; 27
    383a:	98 15       	cp	r25, r8
    383c:	88 f4       	brcc	.+34     	; 0x3860 <__stack+0x1661>
    383e:	11 23       	and	r17, r17
    3840:	01 f1       	breq	.+64     	; 0x3882 <__stack+0x1683>
			{
				//USART_putstring("28C6");
				vote_indicator_28 = 1;	// Indicating button 12 was presses.
    3842:	80 91 60 05 	lds	r24, 0x0560
    3846:	88 60       	ori	r24, 0x08	; 8
    3848:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 28);
				deactivate_category_buttons_and_save(button28_addr, 28);
    384c:	86 e3       	ldi	r24, 0x36	; 54
    384e:	90 e0       	ldi	r25, 0x00	; 0
    3850:	6c e1       	ldi	r22, 0x1C	; 28
    3852:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    3856:	11 50       	subi	r17, 0x01	; 1
    3858:	2e c0       	rjmp	.+92     	; 0x38b6 <__stack+0x16b7>
			}
			else if((28 > category_size_6) && (28 <= category_size_7) && (no_of_votes_cat7 != 0))
    385a:	ab e1       	ldi	r26, 0x1B	; 27
    385c:	a8 15       	cp	r26, r8
    385e:	88 f0       	brcs	.+34     	; 0x3882 <__stack+0x1683>
    3860:	bb e1       	ldi	r27, 0x1B	; 27
    3862:	b6 15       	cp	r27, r6
    3864:	70 f4       	brcc	.+28     	; 0x3882 <__stack+0x1683>
    3866:	00 23       	and	r16, r16
    3868:	61 f0       	breq	.+24     	; 0x3882 <__stack+0x1683>
			{
				//USART_putstring("28C7");
				vote_indicator_28 = 1;	// Indicating button 12 was presses.
    386a:	80 91 60 05 	lds	r24, 0x0560
    386e:	88 60       	ori	r24, 0x08	; 8
    3870:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 28);
				deactivate_category_buttons_and_save(button28_addr, 28);
    3874:	86 e3       	ldi	r24, 0x36	; 54
    3876:	90 e0       	ldi	r25, 0x00	; 0
    3878:	6c e1       	ldi	r22, 0x1C	; 28
    387a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    387e:	01 50       	subi	r16, 0x01	; 1
    3880:	1a c0       	rjmp	.+52     	; 0x38b6 <__stack+0x16b7>
				//vote_indicator_28 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 28);
				//deactivate_category_buttons_and_save(button28_addr, 28);
				//no_of_votes_cat8--;
			//}
			else if((28 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3882:	80 91 64 05 	lds	r24, 0x0564
    3886:	90 91 65 05 	lds	r25, 0x0565
    388a:	8c 31       	cpi	r24, 0x1C	; 28
    388c:	91 05       	cpc	r25, r1
    388e:	98 f4       	brcc	.+38     	; 0x38b6 <__stack+0x16b7>
    3890:	80 91 48 08 	lds	r24, 0x0848
    3894:	88 23       	and	r24, r24
    3896:	79 f0       	breq	.+30     	; 0x38b6 <__stack+0x16b7>
			{
				//USART_putstring("28G ");		// comment this out in final product
				vote_indicator_28 = 1;			// Indicating button 1 was pressed
    3898:	80 91 60 05 	lds	r24, 0x0560
    389c:	88 60       	ori	r24, 0x08	; 8
    389e:	80 93 60 05 	sts	0x0560, r24
				deactivate_category_buttons_and_save(button28_addr, 28);
    38a2:	86 e3       	ldi	r24, 0x36	; 54
    38a4:	90 e0       	ldi	r25, 0x00	; 0
    38a6:	6c e1       	ldi	r22, 0x1C	; 28
    38a8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 28);
				gen_vote_count--;
    38ac:	80 91 48 08 	lds	r24, 0x0848
    38b0:	81 50       	subi	r24, 0x01	; 1
    38b2:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0C) && (29 <= candidate_count) && vote_indicator_29 == 0)
    38b6:	86 b1       	in	r24, 0x06	; 6
    38b8:	81 ff       	sbrs	r24, 1
    38ba:	a3 c0       	rjmp	.+326    	; 0x3a02 <__stack+0x1803>
    38bc:	86 b1       	in	r24, 0x06	; 6
    38be:	80 fd       	sbrc	r24, 0
    38c0:	a0 c0       	rjmp	.+320    	; 0x3a02 <__stack+0x1803>
    38c2:	86 b1       	in	r24, 0x06	; 6
    38c4:	82 fd       	sbrc	r24, 2
    38c6:	9d c0       	rjmp	.+314    	; 0x3a02 <__stack+0x1803>
    38c8:	86 b1       	in	r24, 0x06	; 6
    38ca:	83 fd       	sbrc	r24, 3
    38cc:	9a c0       	rjmp	.+308    	; 0x3a02 <__stack+0x1803>
    38ce:	83 b1       	in	r24, 0x03	; 3
    38d0:	8f 70       	andi	r24, 0x0F	; 15
    38d2:	8c 30       	cpi	r24, 0x0C	; 12
    38d4:	09 f0       	breq	.+2      	; 0x38d8 <__stack+0x16d9>
    38d6:	95 c0       	rjmp	.+298    	; 0x3a02 <__stack+0x1803>
    38d8:	80 91 f6 05 	lds	r24, 0x05F6
    38dc:	8d 31       	cpi	r24, 0x1D	; 29
    38de:	08 f4       	brcc	.+2      	; 0x38e2 <__stack+0x16e3>
    38e0:	90 c0       	rjmp	.+288    	; 0x3a02 <__stack+0x1803>
    38e2:	80 91 60 05 	lds	r24, 0x0560
    38e6:	84 fd       	sbrc	r24, 4
    38e8:	8c c0       	rjmp	.+280    	; 0x3a02 <__stack+0x1803>
		{
			if((29 > category_size_1) && (29 <= category_size_2) && (no_of_votes_cat2 != 0))
    38ea:	ec e1       	ldi	r30, 0x1C	; 28
    38ec:	e5 15       	cp	r30, r5
    38ee:	70 f4       	brcc	.+28     	; 0x390c <__stack+0x170d>
    38f0:	cc 20       	and	r12, r12
    38f2:	e9 f0       	breq	.+58     	; 0x392e <__stack+0x172f>
			{
				//USART_putstring("29C2 ");
				vote_indicator_29 = 1;	// Indicating button 12 was presses.
    38f4:	80 91 60 05 	lds	r24, 0x0560
    38f8:	80 61       	ori	r24, 0x10	; 16
    38fa:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 29);
				deactivate_category_buttons_and_save(button29_addr, 29);
    38fe:	88 e3       	ldi	r24, 0x38	; 56
    3900:	90 e0       	ldi	r25, 0x00	; 0
    3902:	6d e1       	ldi	r22, 0x1D	; 29
    3904:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    3908:	ca 94       	dec	r12
    390a:	7b c0       	rjmp	.+246    	; 0x3a02 <__stack+0x1803>
			}
			else if((29 > category_size_2) && (29 <= category_size_3) && (no_of_votes_cat3 != 0))
    390c:	fc e1       	ldi	r31, 0x1C	; 28
    390e:	f7 15       	cp	r31, r7
    3910:	88 f4       	brcc	.+34     	; 0x3934 <__stack+0x1735>
    3912:	ff 20       	and	r15, r15
    3914:	01 f1       	breq	.+64     	; 0x3956 <__stack+0x1757>
			{
				//USART_putstring("29C3 ");
				vote_indicator_29 = 1;	// Indicating button 12 was presses.
    3916:	80 91 60 05 	lds	r24, 0x0560
    391a:	80 61       	ori	r24, 0x10	; 16
    391c:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 29);
				deactivate_category_buttons_and_save(button29_addr, 29);
    3920:	88 e3       	ldi	r24, 0x38	; 56
    3922:	90 e0       	ldi	r25, 0x00	; 0
    3924:	6d e1       	ldi	r22, 0x1D	; 29
    3926:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    392a:	fa 94       	dec	r15
    392c:	6a c0       	rjmp	.+212    	; 0x3a02 <__stack+0x1803>
			}
			else if((29 > category_size_3) && (29 <= category_size_4) && (no_of_votes_cat4 != 0))
    392e:	8c e1       	ldi	r24, 0x1C	; 28
    3930:	87 15       	cp	r24, r7
    3932:	88 f0       	brcs	.+34     	; 0x3956 <__stack+0x1757>
    3934:	9c e1       	ldi	r25, 0x1C	; 28
    3936:	99 15       	cp	r25, r9
    3938:	88 f4       	brcc	.+34     	; 0x395c <__stack+0x175d>
    393a:	22 20       	and	r2, r2
    393c:	01 f1       	breq	.+64     	; 0x397e <__stack+0x177f>
			{
				//USART_putstring("29C4 ");
				vote_indicator_29 = 1;	// Indicating button 12 was presses.
    393e:	80 91 60 05 	lds	r24, 0x0560
    3942:	80 61       	ori	r24, 0x10	; 16
    3944:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 29);
				deactivate_category_buttons_and_save(button29_addr, 29);
    3948:	88 e3       	ldi	r24, 0x38	; 56
    394a:	90 e0       	ldi	r25, 0x00	; 0
    394c:	6d e1       	ldi	r22, 0x1D	; 29
    394e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    3952:	2a 94       	dec	r2
    3954:	56 c0       	rjmp	.+172    	; 0x3a02 <__stack+0x1803>
			}
			else if((29 > category_size_4) && (29 <= category_size_5) && (no_of_votes_cat5 != 0))
    3956:	ac e1       	ldi	r26, 0x1C	; 28
    3958:	a9 15       	cp	r26, r9
    395a:	88 f0       	brcs	.+34     	; 0x397e <__stack+0x177f>
    395c:	bc e1       	ldi	r27, 0x1C	; 28
    395e:	ba 15       	cp	r27, r10
    3960:	88 f4       	brcc	.+34     	; 0x3984 <__stack+0x1785>
    3962:	33 20       	and	r3, r3
    3964:	01 f1       	breq	.+64     	; 0x39a6 <__stack+0x17a7>
			{
				//USART_putstring("29C5 ");
				vote_indicator_29 = 1;	// Indicating button 12 was presses.
    3966:	80 91 60 05 	lds	r24, 0x0560
    396a:	80 61       	ori	r24, 0x10	; 16
    396c:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 29);
				deactivate_category_buttons_and_save(button29_addr, 29);
    3970:	88 e3       	ldi	r24, 0x38	; 56
    3972:	90 e0       	ldi	r25, 0x00	; 0
    3974:	6d e1       	ldi	r22, 0x1D	; 29
    3976:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    397a:	3a 94       	dec	r3
    397c:	42 c0       	rjmp	.+132    	; 0x3a02 <__stack+0x1803>
			}
			else if((29 > category_size_5) && (29 <= category_size_6) && (no_of_votes_cat6 != 0))
    397e:	ec e1       	ldi	r30, 0x1C	; 28
    3980:	ea 15       	cp	r30, r10
    3982:	88 f0       	brcs	.+34     	; 0x39a6 <__stack+0x17a7>
    3984:	fc e1       	ldi	r31, 0x1C	; 28
    3986:	f8 15       	cp	r31, r8
    3988:	88 f4       	brcc	.+34     	; 0x39ac <__stack+0x17ad>
    398a:	11 23       	and	r17, r17
    398c:	01 f1       	breq	.+64     	; 0x39ce <__stack+0x17cf>
			{
				//USART_putstring("29C6 ");
				vote_indicator_29 = 1;	// Indicating button 12 was presses.
    398e:	80 91 60 05 	lds	r24, 0x0560
    3992:	80 61       	ori	r24, 0x10	; 16
    3994:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 29);
				deactivate_category_buttons_and_save(button29_addr, 29);
    3998:	88 e3       	ldi	r24, 0x38	; 56
    399a:	90 e0       	ldi	r25, 0x00	; 0
    399c:	6d e1       	ldi	r22, 0x1D	; 29
    399e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    39a2:	11 50       	subi	r17, 0x01	; 1
    39a4:	2e c0       	rjmp	.+92     	; 0x3a02 <__stack+0x1803>
			}
			else if((29 > category_size_6) && (29 <= category_size_7) && (no_of_votes_cat7 != 0))
    39a6:	8c e1       	ldi	r24, 0x1C	; 28
    39a8:	88 15       	cp	r24, r8
    39aa:	88 f0       	brcs	.+34     	; 0x39ce <__stack+0x17cf>
    39ac:	9c e1       	ldi	r25, 0x1C	; 28
    39ae:	96 15       	cp	r25, r6
    39b0:	70 f4       	brcc	.+28     	; 0x39ce <__stack+0x17cf>
    39b2:	00 23       	and	r16, r16
    39b4:	61 f0       	breq	.+24     	; 0x39ce <__stack+0x17cf>
			{
				//USART_putstring("29C7 ");
				vote_indicator_29 = 1;	// Indicating button 12 was presses.
    39b6:	80 91 60 05 	lds	r24, 0x0560
    39ba:	80 61       	ori	r24, 0x10	; 16
    39bc:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 29);
				deactivate_category_buttons_and_save(button29_addr, 29);
    39c0:	88 e3       	ldi	r24, 0x38	; 56
    39c2:	90 e0       	ldi	r25, 0x00	; 0
    39c4:	6d e1       	ldi	r22, 0x1D	; 29
    39c6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    39ca:	01 50       	subi	r16, 0x01	; 1
    39cc:	1a c0       	rjmp	.+52     	; 0x3a02 <__stack+0x1803>
				//vote_indicator_29 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 29);
				//deactivate_category_buttons_and_save(button29_addr, 29);
				//no_of_votes_cat8--;
			//}
			else if((29 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    39ce:	80 91 64 05 	lds	r24, 0x0564
    39d2:	90 91 65 05 	lds	r25, 0x0565
    39d6:	8d 31       	cpi	r24, 0x1D	; 29
    39d8:	91 05       	cpc	r25, r1
    39da:	98 f4       	brcc	.+38     	; 0x3a02 <__stack+0x1803>
    39dc:	80 91 48 08 	lds	r24, 0x0848
    39e0:	88 23       	and	r24, r24
    39e2:	79 f0       	breq	.+30     	; 0x3a02 <__stack+0x1803>
			{
				//USART_putstring("29G ");		// comment this out in final product
				vote_indicator_29 = 1;			// Indicating button 1 was pressed
    39e4:	80 91 60 05 	lds	r24, 0x0560
    39e8:	80 61       	ori	r24, 0x10	; 16
    39ea:	80 93 60 05 	sts	0x0560, r24
				deactivate_category_buttons_and_save(button29_addr, 29);
    39ee:	88 e3       	ldi	r24, 0x38	; 56
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	6d e1       	ldi	r22, 0x1D	; 29
    39f4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 29);
				gen_vote_count--;
    39f8:	80 91 48 08 	lds	r24, 0x0848
    39fc:	81 50       	subi	r24, 0x01	; 1
    39fe:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0D) && (30 <= candidate_count) && vote_indicator_30==0)
    3a02:	86 b1       	in	r24, 0x06	; 6
    3a04:	81 ff       	sbrs	r24, 1
    3a06:	b7 c0       	rjmp	.+366    	; 0x3b76 <__stack+0x1977>
    3a08:	86 b1       	in	r24, 0x06	; 6
    3a0a:	80 fd       	sbrc	r24, 0
    3a0c:	b4 c0       	rjmp	.+360    	; 0x3b76 <__stack+0x1977>
    3a0e:	86 b1       	in	r24, 0x06	; 6
    3a10:	82 fd       	sbrc	r24, 2
    3a12:	b1 c0       	rjmp	.+354    	; 0x3b76 <__stack+0x1977>
    3a14:	86 b1       	in	r24, 0x06	; 6
    3a16:	83 fd       	sbrc	r24, 3
    3a18:	ae c0       	rjmp	.+348    	; 0x3b76 <__stack+0x1977>
    3a1a:	83 b1       	in	r24, 0x03	; 3
    3a1c:	8f 70       	andi	r24, 0x0F	; 15
    3a1e:	8d 30       	cpi	r24, 0x0D	; 13
    3a20:	09 f0       	breq	.+2      	; 0x3a24 <__stack+0x1825>
    3a22:	a9 c0       	rjmp	.+338    	; 0x3b76 <__stack+0x1977>
    3a24:	80 91 f6 05 	lds	r24, 0x05F6
    3a28:	8e 31       	cpi	r24, 0x1E	; 30
    3a2a:	08 f4       	brcc	.+2      	; 0x3a2e <__stack+0x182f>
    3a2c:	a4 c0       	rjmp	.+328    	; 0x3b76 <__stack+0x1977>
    3a2e:	80 91 60 05 	lds	r24, 0x0560
    3a32:	85 fd       	sbrc	r24, 5
    3a34:	a0 c0       	rjmp	.+320    	; 0x3b76 <__stack+0x1977>
		{
			if((30 > category_size_1) && (30 <= category_size_2) && (no_of_votes_cat2 != 0))
    3a36:	ad e1       	ldi	r26, 0x1D	; 29
    3a38:	a5 15       	cp	r26, r5
    3a3a:	70 f4       	brcc	.+28     	; 0x3a58 <__stack+0x1859>
    3a3c:	cc 20       	and	r12, r12
    3a3e:	e9 f0       	breq	.+58     	; 0x3a7a <__stack+0x187b>
			{
				//USART_putstring("30C2 ");
				vote_indicator_30 = 1;	// Indicating button 12 was presses.
    3a40:	80 91 60 05 	lds	r24, 0x0560
    3a44:	80 62       	ori	r24, 0x20	; 32
    3a46:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 30);
				deactivate_category_buttons_and_save(button30_addr, 30);
    3a4a:	8a e3       	ldi	r24, 0x3A	; 58
    3a4c:	90 e0       	ldi	r25, 0x00	; 0
    3a4e:	6e e1       	ldi	r22, 0x1E	; 30
    3a50:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat2--;
    3a54:	ca 94       	dec	r12
    3a56:	8f c0       	rjmp	.+286    	; 0x3b76 <__stack+0x1977>
			}
			else if((30 > category_size_2) && (30 <= category_size_3) && (no_of_votes_cat3 != 0))
    3a58:	bd e1       	ldi	r27, 0x1D	; 29
    3a5a:	b7 15       	cp	r27, r7
    3a5c:	88 f4       	brcc	.+34     	; 0x3a80 <__stack+0x1881>
    3a5e:	ff 20       	and	r15, r15
    3a60:	01 f1       	breq	.+64     	; 0x3aa2 <__stack+0x18a3>
			{
				//USART_putstring("30C3 ");
				vote_indicator_30 = 1;	// Indicating button 12 was presses.
    3a62:	80 91 60 05 	lds	r24, 0x0560
    3a66:	80 62       	ori	r24, 0x20	; 32
    3a68:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 30);
				deactivate_category_buttons_and_save(button30_addr, 30);
    3a6c:	8a e3       	ldi	r24, 0x3A	; 58
    3a6e:	90 e0       	ldi	r25, 0x00	; 0
    3a70:	6e e1       	ldi	r22, 0x1E	; 30
    3a72:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    3a76:	fa 94       	dec	r15
    3a78:	7e c0       	rjmp	.+252    	; 0x3b76 <__stack+0x1977>
			}
			else if((30 > category_size_3) && (30 <= category_size_4) && (no_of_votes_cat4 != 0))
    3a7a:	ed e1       	ldi	r30, 0x1D	; 29
    3a7c:	e7 15       	cp	r30, r7
    3a7e:	88 f0       	brcs	.+34     	; 0x3aa2 <__stack+0x18a3>
    3a80:	fd e1       	ldi	r31, 0x1D	; 29
    3a82:	f9 15       	cp	r31, r9
    3a84:	88 f4       	brcc	.+34     	; 0x3aa8 <__stack+0x18a9>
    3a86:	22 20       	and	r2, r2
    3a88:	01 f1       	breq	.+64     	; 0x3aca <__stack+0x18cb>
			{
				//USART_putstring("30C4 ");
				vote_indicator_30 = 1;	// Indicating button 12 was presses.
    3a8a:	80 91 60 05 	lds	r24, 0x0560
    3a8e:	80 62       	ori	r24, 0x20	; 32
    3a90:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 30);
				deactivate_category_buttons_and_save(button30_addr, 30);
    3a94:	8a e3       	ldi	r24, 0x3A	; 58
    3a96:	90 e0       	ldi	r25, 0x00	; 0
    3a98:	6e e1       	ldi	r22, 0x1E	; 30
    3a9a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    3a9e:	2a 94       	dec	r2
    3aa0:	6a c0       	rjmp	.+212    	; 0x3b76 <__stack+0x1977>
			}
			else if((30 > category_size_4) && (30 <= category_size_5) && (no_of_votes_cat5 != 0))
    3aa2:	8d e1       	ldi	r24, 0x1D	; 29
    3aa4:	89 15       	cp	r24, r9
    3aa6:	88 f0       	brcs	.+34     	; 0x3aca <__stack+0x18cb>
    3aa8:	9d e1       	ldi	r25, 0x1D	; 29
    3aaa:	9a 15       	cp	r25, r10
    3aac:	88 f4       	brcc	.+34     	; 0x3ad0 <__stack+0x18d1>
    3aae:	33 20       	and	r3, r3
    3ab0:	01 f1       	breq	.+64     	; 0x3af2 <__stack+0x18f3>
			{
				//USART_putstring("30C5 ");
				vote_indicator_30 = 1;	// Indicating button 12 was presses.
    3ab2:	80 91 60 05 	lds	r24, 0x0560
    3ab6:	80 62       	ori	r24, 0x20	; 32
    3ab8:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 30);
				deactivate_category_buttons_and_save(button30_addr, 30);
    3abc:	8a e3       	ldi	r24, 0x3A	; 58
    3abe:	90 e0       	ldi	r25, 0x00	; 0
    3ac0:	6e e1       	ldi	r22, 0x1E	; 30
    3ac2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    3ac6:	3a 94       	dec	r3
    3ac8:	56 c0       	rjmp	.+172    	; 0x3b76 <__stack+0x1977>
			}
			else if((30 > category_size_5) && (30 <= category_size_6) && (no_of_votes_cat6 != 0))
    3aca:	ad e1       	ldi	r26, 0x1D	; 29
    3acc:	aa 15       	cp	r26, r10
    3ace:	88 f0       	brcs	.+34     	; 0x3af2 <__stack+0x18f3>
    3ad0:	bd e1       	ldi	r27, 0x1D	; 29
    3ad2:	b8 15       	cp	r27, r8
    3ad4:	88 f4       	brcc	.+34     	; 0x3af8 <__stack+0x18f9>
    3ad6:	11 23       	and	r17, r17
    3ad8:	01 f1       	breq	.+64     	; 0x3b1a <__stack+0x191b>
			{
				//USART_putstring("30C6 ");
				vote_indicator_30 = 1;	// Indicating button 12 was presses.
    3ada:	80 91 60 05 	lds	r24, 0x0560
    3ade:	80 62       	ori	r24, 0x20	; 32
    3ae0:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 30);
				deactivate_category_buttons_and_save(button30_addr, 30);
    3ae4:	8a e3       	ldi	r24, 0x3A	; 58
    3ae6:	90 e0       	ldi	r25, 0x00	; 0
    3ae8:	6e e1       	ldi	r22, 0x1E	; 30
    3aea:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    3aee:	11 50       	subi	r17, 0x01	; 1
    3af0:	42 c0       	rjmp	.+132    	; 0x3b76 <__stack+0x1977>
			}
			else if((30 > category_size_6) && (30 <= category_size_7) && (no_of_votes_cat7 != 0))
    3af2:	ed e1       	ldi	r30, 0x1D	; 29
    3af4:	e8 15       	cp	r30, r8
    3af6:	88 f0       	brcs	.+34     	; 0x3b1a <__stack+0x191b>
    3af8:	fd e1       	ldi	r31, 0x1D	; 29
    3afa:	f6 15       	cp	r31, r6
    3afc:	88 f4       	brcc	.+34     	; 0x3b20 <__stack+0x1921>
    3afe:	00 23       	and	r16, r16
    3b00:	01 f1       	breq	.+64     	; 0x3b42 <__stack+0x1943>
			{
				//USART_putstring("30C7 ");
				vote_indicator_30 = 1;	// Indicating button 12 was presses.
    3b02:	80 91 60 05 	lds	r24, 0x0560
    3b06:	80 62       	ori	r24, 0x20	; 32
    3b08:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 30);
				deactivate_category_buttons_and_save(button30_addr, 30);
    3b0c:	8a e3       	ldi	r24, 0x3A	; 58
    3b0e:	90 e0       	ldi	r25, 0x00	; 0
    3b10:	6e e1       	ldi	r22, 0x1E	; 30
    3b12:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    3b16:	01 50       	subi	r16, 0x01	; 1
    3b18:	2e c0       	rjmp	.+92     	; 0x3b76 <__stack+0x1977>
			}
			else if((30 > category_size_7) && (30 <= category_size_8) && (no_of_votes_cat8 != 0))
    3b1a:	8d e1       	ldi	r24, 0x1D	; 29
    3b1c:	86 15       	cp	r24, r6
    3b1e:	88 f0       	brcs	.+34     	; 0x3b42 <__stack+0x1943>
    3b20:	9d e1       	ldi	r25, 0x1D	; 29
    3b22:	9e 15       	cp	r25, r14
    3b24:	70 f4       	brcc	.+28     	; 0x3b42 <__stack+0x1943>
    3b26:	44 20       	and	r4, r4
    3b28:	61 f0       	breq	.+24     	; 0x3b42 <__stack+0x1943>
			{
				//USART_putstring("30C8 ");
				vote_indicator_30 = 1;	// Indicating button 12 was presses.
    3b2a:	80 91 60 05 	lds	r24, 0x0560
    3b2e:	80 62       	ori	r24, 0x20	; 32
    3b30:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 30);
				deactivate_category_buttons_and_save(button30_addr, 30);
    3b34:	8a e3       	ldi	r24, 0x3A	; 58
    3b36:	90 e0       	ldi	r25, 0x00	; 0
    3b38:	6e e1       	ldi	r22, 0x1E	; 30
    3b3a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat8--;
    3b3e:	4a 94       	dec	r4
    3b40:	1a c0       	rjmp	.+52     	; 0x3b76 <__stack+0x1977>
			}
			else if((30 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3b42:	80 91 64 05 	lds	r24, 0x0564
    3b46:	90 91 65 05 	lds	r25, 0x0565
    3b4a:	8e 31       	cpi	r24, 0x1E	; 30
    3b4c:	91 05       	cpc	r25, r1
    3b4e:	98 f4       	brcc	.+38     	; 0x3b76 <__stack+0x1977>
    3b50:	80 91 48 08 	lds	r24, 0x0848
    3b54:	88 23       	and	r24, r24
    3b56:	79 f0       	breq	.+30     	; 0x3b76 <__stack+0x1977>
			{
				//USART_putstring("30G ");		// comment this out in final product
				vote_indicator_30 = 1;			// Indicating button 1 was pressed
    3b58:	80 91 60 05 	lds	r24, 0x0560
    3b5c:	80 62       	ori	r24, 0x20	; 32
    3b5e:	80 93 60 05 	sts	0x0560, r24
				deactivate_category_buttons_and_save(button30_addr, 30);
    3b62:	8a e3       	ldi	r24, 0x3A	; 58
    3b64:	90 e0       	ldi	r25, 0x00	; 0
    3b66:	6e e1       	ldi	r22, 0x1E	; 30
    3b68:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 30);
				gen_vote_count--;
    3b6c:	80 91 48 08 	lds	r24, 0x0848
    3b70:	81 50       	subi	r24, 0x01	; 1
    3b72:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0E) && (31 <= candidate_count) && vote_indicator_31==0)
    3b76:	86 b1       	in	r24, 0x06	; 6
    3b78:	81 ff       	sbrs	r24, 1
    3b7a:	94 c0       	rjmp	.+296    	; 0x3ca4 <__stack+0x1aa5>
    3b7c:	86 b1       	in	r24, 0x06	; 6
    3b7e:	80 fd       	sbrc	r24, 0
    3b80:	91 c0       	rjmp	.+290    	; 0x3ca4 <__stack+0x1aa5>
    3b82:	86 b1       	in	r24, 0x06	; 6
    3b84:	82 fd       	sbrc	r24, 2
    3b86:	8e c0       	rjmp	.+284    	; 0x3ca4 <__stack+0x1aa5>
    3b88:	86 b1       	in	r24, 0x06	; 6
    3b8a:	83 fd       	sbrc	r24, 3
    3b8c:	8b c0       	rjmp	.+278    	; 0x3ca4 <__stack+0x1aa5>
    3b8e:	83 b1       	in	r24, 0x03	; 3
    3b90:	8f 70       	andi	r24, 0x0F	; 15
    3b92:	8e 30       	cpi	r24, 0x0E	; 14
    3b94:	09 f0       	breq	.+2      	; 0x3b98 <__stack+0x1999>
    3b96:	86 c0       	rjmp	.+268    	; 0x3ca4 <__stack+0x1aa5>
    3b98:	80 91 f6 05 	lds	r24, 0x05F6
    3b9c:	8f 31       	cpi	r24, 0x1F	; 31
    3b9e:	08 f4       	brcc	.+2      	; 0x3ba2 <__stack+0x19a3>
    3ba0:	81 c0       	rjmp	.+258    	; 0x3ca4 <__stack+0x1aa5>
    3ba2:	80 91 60 05 	lds	r24, 0x0560
    3ba6:	86 fd       	sbrc	r24, 6
    3ba8:	7d c0       	rjmp	.+250    	; 0x3ca4 <__stack+0x1aa5>
		{
			if((31 > category_size_2) && (31 <= category_size_3) && (no_of_votes_cat3 != 0))
    3baa:	ae e1       	ldi	r26, 0x1E	; 30
    3bac:	a5 15       	cp	r26, r5
    3bae:	80 f0       	brcs	.+32     	; 0x3bd0 <__stack+0x19d1>
    3bb0:	a7 15       	cp	r26, r7
    3bb2:	88 f4       	brcc	.+34     	; 0x3bd6 <__stack+0x19d7>
    3bb4:	ff 20       	and	r15, r15
    3bb6:	01 f1       	breq	.+64     	; 0x3bf8 <__stack+0x19f9>
			{
				//USART_putstring("31C3 ");
				vote_indicator_31 = 1;	// Indicating button 12 was presses.
    3bb8:	80 91 60 05 	lds	r24, 0x0560
    3bbc:	80 64       	ori	r24, 0x40	; 64
    3bbe:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 31);
				deactivate_category_buttons_and_save(button31_addr, 31);
    3bc2:	8c e3       	ldi	r24, 0x3C	; 60
    3bc4:	90 e0       	ldi	r25, 0x00	; 0
    3bc6:	6f e1       	ldi	r22, 0x1F	; 31
    3bc8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    3bcc:	fa 94       	dec	r15
    3bce:	14 c0       	rjmp	.+40     	; 0x3bf8 <__stack+0x19f9>
			}
			if((31 > category_size_3) && (31 <= category_size_4) && (no_of_votes_cat4 != 0))
    3bd0:	be e1       	ldi	r27, 0x1E	; 30
    3bd2:	b7 15       	cp	r27, r7
    3bd4:	88 f0       	brcs	.+34     	; 0x3bf8 <__stack+0x19f9>
    3bd6:	ee e1       	ldi	r30, 0x1E	; 30
    3bd8:	e9 15       	cp	r30, r9
    3bda:	88 f4       	brcc	.+34     	; 0x3bfe <__stack+0x19ff>
    3bdc:	22 20       	and	r2, r2
    3bde:	01 f1       	breq	.+64     	; 0x3c20 <__stack+0x1a21>
			{
				//USART_putstring("31C4 ");
				vote_indicator_31 = 1;	// Indicating button 12 was presses.
    3be0:	80 91 60 05 	lds	r24, 0x0560
    3be4:	80 64       	ori	r24, 0x40	; 64
    3be6:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 31);
				deactivate_category_buttons_and_save(button31_addr, 31);
    3bea:	8c e3       	ldi	r24, 0x3C	; 60
    3bec:	90 e0       	ldi	r25, 0x00	; 0
    3bee:	6f e1       	ldi	r22, 0x1F	; 31
    3bf0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    3bf4:	2a 94       	dec	r2
    3bf6:	56 c0       	rjmp	.+172    	; 0x3ca4 <__stack+0x1aa5>
			}
			else if((31 > category_size_4) && (31 <= category_size_5) && (no_of_votes_cat5 != 0))
    3bf8:	fe e1       	ldi	r31, 0x1E	; 30
    3bfa:	f9 15       	cp	r31, r9
    3bfc:	88 f0       	brcs	.+34     	; 0x3c20 <__stack+0x1a21>
    3bfe:	8e e1       	ldi	r24, 0x1E	; 30
    3c00:	8a 15       	cp	r24, r10
    3c02:	88 f4       	brcc	.+34     	; 0x3c26 <__stack+0x1a27>
    3c04:	33 20       	and	r3, r3
    3c06:	01 f1       	breq	.+64     	; 0x3c48 <__stack+0x1a49>
			{
				//USART_putstring("31C5 ");
				vote_indicator_31 = 1;	// Indicating button 12 was presses.
    3c08:	80 91 60 05 	lds	r24, 0x0560
    3c0c:	80 64       	ori	r24, 0x40	; 64
    3c0e:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 31);
				deactivate_category_buttons_and_save(button31_addr, 31);
    3c12:	8c e3       	ldi	r24, 0x3C	; 60
    3c14:	90 e0       	ldi	r25, 0x00	; 0
    3c16:	6f e1       	ldi	r22, 0x1F	; 31
    3c18:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    3c1c:	3a 94       	dec	r3
    3c1e:	42 c0       	rjmp	.+132    	; 0x3ca4 <__stack+0x1aa5>
			}
			else if((31 > category_size_5) && (31 <= category_size_6) && (no_of_votes_cat6 != 0))
    3c20:	9e e1       	ldi	r25, 0x1E	; 30
    3c22:	9a 15       	cp	r25, r10
    3c24:	88 f0       	brcs	.+34     	; 0x3c48 <__stack+0x1a49>
    3c26:	ae e1       	ldi	r26, 0x1E	; 30
    3c28:	a8 15       	cp	r26, r8
    3c2a:	88 f4       	brcc	.+34     	; 0x3c4e <__stack+0x1a4f>
    3c2c:	11 23       	and	r17, r17
    3c2e:	01 f1       	breq	.+64     	; 0x3c70 <__stack+0x1a71>
			{
				//USART_putstring("31C6 ");
				vote_indicator_31 = 1;	// Indicating button 12 was presses.
    3c30:	80 91 60 05 	lds	r24, 0x0560
    3c34:	80 64       	ori	r24, 0x40	; 64
    3c36:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 31);
				deactivate_category_buttons_and_save(button31_addr, 31);
    3c3a:	8c e3       	ldi	r24, 0x3C	; 60
    3c3c:	90 e0       	ldi	r25, 0x00	; 0
    3c3e:	6f e1       	ldi	r22, 0x1F	; 31
    3c40:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    3c44:	11 50       	subi	r17, 0x01	; 1
    3c46:	2e c0       	rjmp	.+92     	; 0x3ca4 <__stack+0x1aa5>
			}
			else if((31 > category_size_6) && (31 <= category_size_7) && (no_of_votes_cat7 != 0))
    3c48:	be e1       	ldi	r27, 0x1E	; 30
    3c4a:	b8 15       	cp	r27, r8
    3c4c:	88 f0       	brcs	.+34     	; 0x3c70 <__stack+0x1a71>
    3c4e:	ee e1       	ldi	r30, 0x1E	; 30
    3c50:	e6 15       	cp	r30, r6
    3c52:	70 f4       	brcc	.+28     	; 0x3c70 <__stack+0x1a71>
    3c54:	00 23       	and	r16, r16
    3c56:	61 f0       	breq	.+24     	; 0x3c70 <__stack+0x1a71>
			{
				//USART_putstring("31C7 ");
				vote_indicator_31 = 1;	// Indicating button 12 was presses.
    3c58:	80 91 60 05 	lds	r24, 0x0560
    3c5c:	80 64       	ori	r24, 0x40	; 64
    3c5e:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 31);
				deactivate_category_buttons_and_save(button31_addr, 31);
    3c62:	8c e3       	ldi	r24, 0x3C	; 60
    3c64:	90 e0       	ldi	r25, 0x00	; 0
    3c66:	6f e1       	ldi	r22, 0x1F	; 31
    3c68:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    3c6c:	01 50       	subi	r16, 0x01	; 1
    3c6e:	1a c0       	rjmp	.+52     	; 0x3ca4 <__stack+0x1aa5>
				//vote_indicator_31 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 31);
				//deactivate_category_buttons_and_save(button31_addr, 31);
				//no_of_votes_cat8--;
			//}
			else if((31 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3c70:	80 91 64 05 	lds	r24, 0x0564
    3c74:	90 91 65 05 	lds	r25, 0x0565
    3c78:	8f 31       	cpi	r24, 0x1F	; 31
    3c7a:	91 05       	cpc	r25, r1
    3c7c:	98 f4       	brcc	.+38     	; 0x3ca4 <__stack+0x1aa5>
    3c7e:	80 91 48 08 	lds	r24, 0x0848
    3c82:	88 23       	and	r24, r24
    3c84:	79 f0       	breq	.+30     	; 0x3ca4 <__stack+0x1aa5>
			{
				//USART_putstring("31G ");		// comment this out in final product
				vote_indicator_31 = 1;			// Indicating button 1 was pressed
    3c86:	80 91 60 05 	lds	r24, 0x0560
    3c8a:	80 64       	ori	r24, 0x40	; 64
    3c8c:	80 93 60 05 	sts	0x0560, r24
				deactivate_category_buttons_and_save(button31_addr, 31);
    3c90:	8c e3       	ldi	r24, 0x3C	; 60
    3c92:	90 e0       	ldi	r25, 0x00	; 0
    3c94:	6f e1       	ldi	r22, 0x1F	; 31
    3c96:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 31);
				gen_vote_count--;
    3c9a:	80 91 48 08 	lds	r24, 0x0848
    3c9e:	81 50       	subi	r24, 0x01	; 1
    3ca0:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_B_data == 1) && (matrix_A_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0F) && (32 <= candidate_count) && vote_indicator_32==0)
    3ca4:	86 b1       	in	r24, 0x06	; 6
    3ca6:	81 ff       	sbrs	r24, 1
    3ca8:	90 c0       	rjmp	.+288    	; 0x3dca <__stack+0x1bcb>
    3caa:	86 b1       	in	r24, 0x06	; 6
    3cac:	80 fd       	sbrc	r24, 0
    3cae:	8d c0       	rjmp	.+282    	; 0x3dca <__stack+0x1bcb>
    3cb0:	86 b1       	in	r24, 0x06	; 6
    3cb2:	82 fd       	sbrc	r24, 2
    3cb4:	8a c0       	rjmp	.+276    	; 0x3dca <__stack+0x1bcb>
    3cb6:	86 b1       	in	r24, 0x06	; 6
    3cb8:	83 fd       	sbrc	r24, 3
    3cba:	87 c0       	rjmp	.+270    	; 0x3dca <__stack+0x1bcb>
    3cbc:	83 b1       	in	r24, 0x03	; 3
    3cbe:	8f 70       	andi	r24, 0x0F	; 15
    3cc0:	8f 30       	cpi	r24, 0x0F	; 15
    3cc2:	09 f0       	breq	.+2      	; 0x3cc6 <__stack+0x1ac7>
    3cc4:	82 c0       	rjmp	.+260    	; 0x3dca <__stack+0x1bcb>
    3cc6:	80 91 f6 05 	lds	r24, 0x05F6
    3cca:	80 32       	cpi	r24, 0x20	; 32
    3ccc:	08 f4       	brcc	.+2      	; 0x3cd0 <__stack+0x1ad1>
    3cce:	7d c0       	rjmp	.+250    	; 0x3dca <__stack+0x1bcb>
    3cd0:	80 91 60 05 	lds	r24, 0x0560
    3cd4:	88 23       	and	r24, r24
    3cd6:	0c f4       	brge	.+2      	; 0x3cda <__stack+0x1adb>
    3cd8:	78 c0       	rjmp	.+240    	; 0x3dca <__stack+0x1bcb>
		{
			if((32 > category_size_2) && (32 <= category_size_3) && (no_of_votes_cat3 != 0))
    3cda:	ff e1       	ldi	r31, 0x1F	; 31
    3cdc:	f7 15       	cp	r31, r7
    3cde:	70 f4       	brcc	.+28     	; 0x3cfc <__stack+0x1afd>
    3ce0:	ff 20       	and	r15, r15
    3ce2:	e9 f0       	breq	.+58     	; 0x3d1e <__stack+0x1b1f>
			{
				//USART_putstring("32C3 ");
				vote_indicator_32 = 1;		// Indicating button 32 was presses.
    3ce4:	80 91 60 05 	lds	r24, 0x0560
    3ce8:	80 68       	ori	r24, 0x80	; 128
    3cea:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 32);
				deactivate_category_buttons_and_save(button32_addr, 32);
    3cee:	8e e3       	ldi	r24, 0x3E	; 62
    3cf0:	90 e0       	ldi	r25, 0x00	; 0
    3cf2:	60 e2       	ldi	r22, 0x20	; 32
    3cf4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    3cf8:	fa 94       	dec	r15
    3cfa:	11 c0       	rjmp	.+34     	; 0x3d1e <__stack+0x1b1f>
			}
			if((32 > category_size_3) && (32 <= category_size_4) && (no_of_votes_cat4 != 0))
    3cfc:	8f e1       	ldi	r24, 0x1F	; 31
    3cfe:	89 15       	cp	r24, r9
    3d00:	88 f4       	brcc	.+34     	; 0x3d24 <__stack+0x1b25>
    3d02:	22 20       	and	r2, r2
    3d04:	01 f1       	breq	.+64     	; 0x3d46 <__stack+0x1b47>
			{
				//USART_putstring("32C4 ");
				vote_indicator_32 = 1;		// Indicating button 32 was presses.
    3d06:	80 91 60 05 	lds	r24, 0x0560
    3d0a:	80 68       	ori	r24, 0x80	; 128
    3d0c:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 32);
				deactivate_category_buttons_and_save(button32_addr, 32);
    3d10:	8e e3       	ldi	r24, 0x3E	; 62
    3d12:	90 e0       	ldi	r25, 0x00	; 0
    3d14:	60 e2       	ldi	r22, 0x20	; 32
    3d16:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat4--;
    3d1a:	2a 94       	dec	r2
    3d1c:	56 c0       	rjmp	.+172    	; 0x3dca <__stack+0x1bcb>
			}
			else if((32 > category_size_4) && (32 <= category_size_5) && (no_of_votes_cat5 != 0))
    3d1e:	9f e1       	ldi	r25, 0x1F	; 31
    3d20:	99 15       	cp	r25, r9
    3d22:	88 f0       	brcs	.+34     	; 0x3d46 <__stack+0x1b47>
    3d24:	af e1       	ldi	r26, 0x1F	; 31
    3d26:	aa 15       	cp	r26, r10
    3d28:	88 f4       	brcc	.+34     	; 0x3d4c <__stack+0x1b4d>
    3d2a:	33 20       	and	r3, r3
    3d2c:	01 f1       	breq	.+64     	; 0x3d6e <__stack+0x1b6f>
			{
				//USART_putstring("32 C 5");
				vote_indicator_32 = 1;	// Indicating button 12 was presses.
    3d2e:	80 91 60 05 	lds	r24, 0x0560
    3d32:	80 68       	ori	r24, 0x80	; 128
    3d34:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 32);
				deactivate_category_buttons_and_save(button32_addr, 32);
    3d38:	8e e3       	ldi	r24, 0x3E	; 62
    3d3a:	90 e0       	ldi	r25, 0x00	; 0
    3d3c:	60 e2       	ldi	r22, 0x20	; 32
    3d3e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat5--;
    3d42:	3a 94       	dec	r3
    3d44:	42 c0       	rjmp	.+132    	; 0x3dca <__stack+0x1bcb>
			}
			else if((32 > category_size_5) && (32 <= category_size_6) && (no_of_votes_cat6 != 0))
    3d46:	bf e1       	ldi	r27, 0x1F	; 31
    3d48:	ba 15       	cp	r27, r10
    3d4a:	88 f0       	brcs	.+34     	; 0x3d6e <__stack+0x1b6f>
    3d4c:	ef e1       	ldi	r30, 0x1F	; 31
    3d4e:	e8 15       	cp	r30, r8
    3d50:	88 f4       	brcc	.+34     	; 0x3d74 <__stack+0x1b75>
    3d52:	11 23       	and	r17, r17
    3d54:	01 f1       	breq	.+64     	; 0x3d96 <__stack+0x1b97>
			{
				//USART_putstring("32C6 ");
				vote_indicator_32 = 1;	// Indicating button 12 was presses.
    3d56:	80 91 60 05 	lds	r24, 0x0560
    3d5a:	80 68       	ori	r24, 0x80	; 128
    3d5c:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 32);
				deactivate_category_buttons_and_save(button32_addr, 32);
    3d60:	8e e3       	ldi	r24, 0x3E	; 62
    3d62:	90 e0       	ldi	r25, 0x00	; 0
    3d64:	60 e2       	ldi	r22, 0x20	; 32
    3d66:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat6--;
    3d6a:	11 50       	subi	r17, 0x01	; 1
    3d6c:	2e c0       	rjmp	.+92     	; 0x3dca <__stack+0x1bcb>
			}
			else if((32 > category_size_6) && (32 <= category_size_7) && (no_of_votes_cat7 != 0))
    3d6e:	ff e1       	ldi	r31, 0x1F	; 31
    3d70:	f8 15       	cp	r31, r8
    3d72:	88 f0       	brcs	.+34     	; 0x3d96 <__stack+0x1b97>
    3d74:	8f e1       	ldi	r24, 0x1F	; 31
    3d76:	86 15       	cp	r24, r6
    3d78:	70 f4       	brcc	.+28     	; 0x3d96 <__stack+0x1b97>
    3d7a:	00 23       	and	r16, r16
    3d7c:	61 f0       	breq	.+24     	; 0x3d96 <__stack+0x1b97>
			{
				//USART_putstring("32C7 ");
				vote_indicator_32 = 1;	// Indicating button 12 was presses.
    3d7e:	80 91 60 05 	lds	r24, 0x0560
    3d82:	80 68       	ori	r24, 0x80	; 128
    3d84:	80 93 60 05 	sts	0x0560, r24
				//i2c_send_byte(PIC_DEV_ADDR, 32);
				deactivate_category_buttons_and_save(button32_addr, 32);
    3d88:	8e e3       	ldi	r24, 0x3E	; 62
    3d8a:	90 e0       	ldi	r25, 0x00	; 0
    3d8c:	60 e2       	ldi	r22, 0x20	; 32
    3d8e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat7--;
    3d92:	01 50       	subi	r16, 0x01	; 1
    3d94:	1a c0       	rjmp	.+52     	; 0x3dca <__stack+0x1bcb>
				//vote_indicator_32 = 1;	// Indicating button 12 was presses.
				////i2c_send_byte(PIC_DEV_ADDR, 32);
				//deactivate_category_buttons_and_save(button32_addr, 32);
				//no_of_votes_cat8--;
			//}
			else if((32 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3d96:	80 91 64 05 	lds	r24, 0x0564
    3d9a:	90 91 65 05 	lds	r25, 0x0565
    3d9e:	80 32       	cpi	r24, 0x20	; 32
    3da0:	91 05       	cpc	r25, r1
    3da2:	98 f4       	brcc	.+38     	; 0x3dca <__stack+0x1bcb>
    3da4:	80 91 48 08 	lds	r24, 0x0848
    3da8:	88 23       	and	r24, r24
    3daa:	79 f0       	breq	.+30     	; 0x3dca <__stack+0x1bcb>
			{
				//USART_putstring("32G ");		// comment this out in final product
				vote_indicator_32 = 1;			// Indicating button 1 was pressed
    3dac:	80 91 60 05 	lds	r24, 0x0560
    3db0:	80 68       	ori	r24, 0x80	; 128
    3db2:	80 93 60 05 	sts	0x0560, r24
				deactivate_category_buttons_and_save(button32_addr, 32);
    3db6:	8e e3       	ldi	r24, 0x3E	; 62
    3db8:	90 e0       	ldi	r25, 0x00	; 0
    3dba:	60 e2       	ldi	r22, 0x20	; 32
    3dbc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 32);
				gen_vote_count--;
    3dc0:	80 91 48 08 	lds	r24, 0x0848
    3dc4:	81 50       	subi	r24, 0x01	; 1
    3dc6:	80 93 48 08 	sts	0x0848, r24
			}
		}
/************************************************  Half Mark  ***********************************************************************************/		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x00) && (33 <= candidate_count) && vote_indicator_33 == 0)
    3dca:	86 b1       	in	r24, 0x06	; 6
    3dcc:	80 fd       	sbrc	r24, 0
    3dce:	91 c0       	rjmp	.+290    	; 0x3ef2 <__stack+0x1cf3>
    3dd0:	86 b1       	in	r24, 0x06	; 6
    3dd2:	81 fd       	sbrc	r24, 1
    3dd4:	8e c0       	rjmp	.+284    	; 0x3ef2 <__stack+0x1cf3>
    3dd6:	86 b1       	in	r24, 0x06	; 6
    3dd8:	82 ff       	sbrs	r24, 2
    3dda:	8b c0       	rjmp	.+278    	; 0x3ef2 <__stack+0x1cf3>
    3ddc:	86 b1       	in	r24, 0x06	; 6
    3dde:	83 fd       	sbrc	r24, 3
    3de0:	88 c0       	rjmp	.+272    	; 0x3ef2 <__stack+0x1cf3>
    3de2:	83 b1       	in	r24, 0x03	; 3
    3de4:	90 e0       	ldi	r25, 0x00	; 0
    3de6:	8f 70       	andi	r24, 0x0F	; 15
    3de8:	90 70       	andi	r25, 0x00	; 0
    3dea:	00 97       	sbiw	r24, 0x00	; 0
    3dec:	09 f0       	breq	.+2      	; 0x3df0 <__stack+0x1bf1>
    3dee:	81 c0       	rjmp	.+258    	; 0x3ef2 <__stack+0x1cf3>
    3df0:	80 91 f6 05 	lds	r24, 0x05F6
    3df4:	81 32       	cpi	r24, 0x21	; 33
    3df6:	08 f4       	brcc	.+2      	; 0x3dfa <__stack+0x1bfb>
    3df8:	7c c0       	rjmp	.+248    	; 0x3ef2 <__stack+0x1cf3>
    3dfa:	80 91 c8 08 	lds	r24, 0x08C8
    3dfe:	80 fd       	sbrc	r24, 0
    3e00:	78 c0       	rjmp	.+240    	; 0x3ef2 <__stack+0x1cf3>
		{
			if((33 > category_size_2) && (33 <= category_size_3) && (no_of_votes_cat3 != 0x00))
    3e02:	90 e2       	ldi	r25, 0x20	; 32
    3e04:	97 15       	cp	r25, r7
    3e06:	70 f4       	brcc	.+28     	; 0x3e24 <__stack+0x1c25>
    3e08:	ff 20       	and	r15, r15
    3e0a:	e9 f0       	breq	.+58     	; 0x3e46 <__stack+0x1c47>
			{
				//USART_putstring("33C3 ");
				vote_indicator_33 = 1;					// Indicating button 33 was presses.
    3e0c:	80 91 c8 08 	lds	r24, 0x08C8
    3e10:	81 60       	ori	r24, 0x01	; 1
    3e12:	80 93 c8 08 	sts	0x08C8, r24
				//i2c_send_byte(PIC_DEV_ADDR, 33);
				deactivate_category_buttons_and_save(button33_addr, 33);
    3e16:	80 e4       	ldi	r24, 0x40	; 64
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	61 e2       	ldi	r22, 0x21	; 33
    3e1c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				no_of_votes_cat3--;
    3e20:	fa 94       	dec	r15
    3e22:	67 c0       	rjmp	.+206    	; 0x3ef2 <__stack+0x1cf3>
			}
			else if((33 > category_size_3) && (33 <= category_size_4) && (no_of_votes_cat4 != 0x00))				
    3e24:	a0 e2       	ldi	r26, 0x20	; 32
    3e26:	a9 15       	cp	r26, r9
    3e28:	88 f4       	brcc	.+34     	; 0x3e4c <__stack+0x1c4d>
    3e2a:	22 20       	and	r2, r2
    3e2c:	01 f1       	breq	.+64     	; 0x3e6e <__stack+0x1c6f>
			{
				//USART_putstring("33C4 ");			// comment this out in final product
				vote_indicator_33 = 1;					// Indicating button 33 was pressed
    3e2e:	80 91 c8 08 	lds	r24, 0x08C8
    3e32:	81 60       	ori	r24, 0x01	; 1
    3e34:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat4--;
    3e38:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 33);
				deactivate_category_buttons_and_save(button33_addr, 33);  // provide starting and ending buttons as arguments
    3e3a:	80 e4       	ldi	r24, 0x40	; 64
    3e3c:	90 e0       	ldi	r25, 0x00	; 0
    3e3e:	61 e2       	ldi	r22, 0x21	; 33
    3e40:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3e44:	56 c0       	rjmp	.+172    	; 0x3ef2 <__stack+0x1cf3>
			}
			else if((33 > category_size_4) && (33 <= category_size_5) && (no_of_votes_cat5 != 0x00))				
    3e46:	b0 e2       	ldi	r27, 0x20	; 32
    3e48:	b9 15       	cp	r27, r9
    3e4a:	88 f0       	brcs	.+34     	; 0x3e6e <__stack+0x1c6f>
    3e4c:	e0 e2       	ldi	r30, 0x20	; 32
    3e4e:	ea 15       	cp	r30, r10
    3e50:	88 f4       	brcc	.+34     	; 0x3e74 <__stack+0x1c75>
    3e52:	33 20       	and	r3, r3
    3e54:	01 f1       	breq	.+64     	; 0x3e96 <__stack+0x1c97>
			{
				//USART_putstring("33C5 ");				// comment this out in final product
				vote_indicator_33 = 1;					// Indicating button 33 was pressed
    3e56:	80 91 c8 08 	lds	r24, 0x08C8
    3e5a:	81 60       	ori	r24, 0x01	; 1
    3e5c:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat5--;
    3e60:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 33);
				deactivate_category_buttons_and_save(button33_addr, 33);  // provide starting and ending buttons as arguments
    3e62:	80 e4       	ldi	r24, 0x40	; 64
    3e64:	90 e0       	ldi	r25, 0x00	; 0
    3e66:	61 e2       	ldi	r22, 0x21	; 33
    3e68:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3e6c:	42 c0       	rjmp	.+132    	; 0x3ef2 <__stack+0x1cf3>
			}
			else if((33 > category_size_5) && (33 <= category_size_6) && (no_of_votes_cat6 != 0x00))				
    3e6e:	f0 e2       	ldi	r31, 0x20	; 32
    3e70:	fa 15       	cp	r31, r10
    3e72:	88 f0       	brcs	.+34     	; 0x3e96 <__stack+0x1c97>
    3e74:	80 e2       	ldi	r24, 0x20	; 32
    3e76:	88 15       	cp	r24, r8
    3e78:	88 f4       	brcc	.+34     	; 0x3e9c <__stack+0x1c9d>
    3e7a:	11 23       	and	r17, r17
    3e7c:	01 f1       	breq	.+64     	; 0x3ebe <__stack+0x1cbf>
			{	
				//USART_putstring("33C6 ");				// comment this out in final product
				vote_indicator_33 = 1;					// Indicating button 1 was pressed
    3e7e:	80 91 c8 08 	lds	r24, 0x08C8
    3e82:	81 60       	ori	r24, 0x01	; 1
    3e84:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat6--;
    3e88:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 33);
				deactivate_category_buttons_and_save(button33_addr, 33);  // provide starting and ending buttons as arguments
    3e8a:	80 e4       	ldi	r24, 0x40	; 64
    3e8c:	90 e0       	ldi	r25, 0x00	; 0
    3e8e:	61 e2       	ldi	r22, 0x21	; 33
    3e90:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3e94:	2e c0       	rjmp	.+92     	; 0x3ef2 <__stack+0x1cf3>
			}
			else if((33 > category_size_6) && (33 <= category_size_7) && (no_of_votes_cat7 != 0x00))
    3e96:	90 e2       	ldi	r25, 0x20	; 32
    3e98:	98 15       	cp	r25, r8
    3e9a:	88 f0       	brcs	.+34     	; 0x3ebe <__stack+0x1cbf>
    3e9c:	a0 e2       	ldi	r26, 0x20	; 32
    3e9e:	a6 15       	cp	r26, r6
    3ea0:	70 f4       	brcc	.+28     	; 0x3ebe <__stack+0x1cbf>
    3ea2:	00 23       	and	r16, r16
    3ea4:	61 f0       	breq	.+24     	; 0x3ebe <__stack+0x1cbf>
			{
				//USART_putstring("33C7 ");				// comment this out in final product
				vote_indicator_33 = 1;					// Indicating button 1 was pressed
    3ea6:	80 91 c8 08 	lds	r24, 0x08C8
    3eaa:	81 60       	ori	r24, 0x01	; 1
    3eac:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat7--;
    3eb0:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 33);
				deactivate_category_buttons_and_save(button33_addr, 33);  // provide starting and ending buttons as arguments
    3eb2:	80 e4       	ldi	r24, 0x40	; 64
    3eb4:	90 e0       	ldi	r25, 0x00	; 0
    3eb6:	61 e2       	ldi	r22, 0x21	; 33
    3eb8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3ebc:	1a c0       	rjmp	.+52     	; 0x3ef2 <__stack+0x1cf3>
				//vote_indicator_33 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 33);
				//deactivate_category_buttons_and_save(button33_addr, 33);  // provide starting and ending buttons as arguments
			//}
			else if ((33 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3ebe:	80 91 64 05 	lds	r24, 0x0564
    3ec2:	90 91 65 05 	lds	r25, 0x0565
    3ec6:	81 32       	cpi	r24, 0x21	; 33
    3ec8:	91 05       	cpc	r25, r1
    3eca:	98 f4       	brcc	.+38     	; 0x3ef2 <__stack+0x1cf3>
    3ecc:	80 91 48 08 	lds	r24, 0x0848
    3ed0:	88 23       	and	r24, r24
    3ed2:	79 f0       	breq	.+30     	; 0x3ef2 <__stack+0x1cf3>
			{
				//USART_putstring("33 G ");		// comment this out in final product
				vote_indicator_33 = 1;			// Indicating button 1 was pressed
    3ed4:	80 91 c8 08 	lds	r24, 0x08C8
    3ed8:	81 60       	ori	r24, 0x01	; 1
    3eda:	80 93 c8 08 	sts	0x08C8, r24
				deactivate_category_buttons_and_save(button33_addr, 33);
    3ede:	80 e4       	ldi	r24, 0x40	; 64
    3ee0:	90 e0       	ldi	r25, 0x00	; 0
    3ee2:	61 e2       	ldi	r22, 0x21	; 33
    3ee4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 33);
				gen_vote_count--;
    3ee8:	80 91 48 08 	lds	r24, 0x0848
    3eec:	81 50       	subi	r24, 0x01	; 1
    3eee:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x01) && (34 <= candidate_count) && vote_indicator_34 == 0)
    3ef2:	86 b1       	in	r24, 0x06	; 6
    3ef4:	80 fd       	sbrc	r24, 0
    3ef6:	8f c0       	rjmp	.+286    	; 0x4016 <__stack+0x1e17>
    3ef8:	86 b1       	in	r24, 0x06	; 6
    3efa:	81 fd       	sbrc	r24, 1
    3efc:	8c c0       	rjmp	.+280    	; 0x4016 <__stack+0x1e17>
    3efe:	86 b1       	in	r24, 0x06	; 6
    3f00:	82 ff       	sbrs	r24, 2
    3f02:	89 c0       	rjmp	.+274    	; 0x4016 <__stack+0x1e17>
    3f04:	86 b1       	in	r24, 0x06	; 6
    3f06:	83 fd       	sbrc	r24, 3
    3f08:	86 c0       	rjmp	.+268    	; 0x4016 <__stack+0x1e17>
    3f0a:	83 b1       	in	r24, 0x03	; 3
    3f0c:	8f 70       	andi	r24, 0x0F	; 15
    3f0e:	81 30       	cpi	r24, 0x01	; 1
    3f10:	09 f0       	breq	.+2      	; 0x3f14 <__stack+0x1d15>
    3f12:	81 c0       	rjmp	.+258    	; 0x4016 <__stack+0x1e17>
    3f14:	80 91 f6 05 	lds	r24, 0x05F6
    3f18:	82 32       	cpi	r24, 0x22	; 34
    3f1a:	08 f4       	brcc	.+2      	; 0x3f1e <__stack+0x1d1f>
    3f1c:	7c c0       	rjmp	.+248    	; 0x4016 <__stack+0x1e17>
    3f1e:	80 91 c8 08 	lds	r24, 0x08C8
    3f22:	81 fd       	sbrc	r24, 1
    3f24:	78 c0       	rjmp	.+240    	; 0x4016 <__stack+0x1e17>
		{
			if((34 > category_size_2) && (34 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    3f26:	b1 e2       	ldi	r27, 0x21	; 33
    3f28:	b7 15       	cp	r27, r7
    3f2a:	70 f4       	brcc	.+28     	; 0x3f48 <__stack+0x1d49>
    3f2c:	ff 20       	and	r15, r15
    3f2e:	e9 f0       	breq	.+58     	; 0x3f6a <__stack+0x1d6b>
			{
				//USART_putstring("34C3 ");				// comment this out in final product
				vote_indicator_34 = 1;					// Indicating button 1 was pressed
    3f30:	80 91 c8 08 	lds	r24, 0x08C8
    3f34:	82 60       	ori	r24, 0x02	; 2
    3f36:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat3--;
    3f3a:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 34);
				deactivate_category_buttons_and_save(button34_addr, 34);  // provide starting and ending buttons as arguments
    3f3c:	82 e4       	ldi	r24, 0x42	; 66
    3f3e:	90 e0       	ldi	r25, 0x00	; 0
    3f40:	62 e2       	ldi	r22, 0x22	; 34
    3f42:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3f46:	67 c0       	rjmp	.+206    	; 0x4016 <__stack+0x1e17>
			}
			else if((34 > category_size_3) && (34 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    3f48:	e1 e2       	ldi	r30, 0x21	; 33
    3f4a:	e9 15       	cp	r30, r9
    3f4c:	88 f4       	brcc	.+34     	; 0x3f70 <__stack+0x1d71>
    3f4e:	22 20       	and	r2, r2
    3f50:	01 f1       	breq	.+64     	; 0x3f92 <__stack+0x1d93>
			{
				//USART_putstring("34C4 ");				// comment this out in final product
				vote_indicator_34 = 1;					// Indicating button 1 was pressed
    3f52:	80 91 c8 08 	lds	r24, 0x08C8
    3f56:	82 60       	ori	r24, 0x02	; 2
    3f58:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat4--;
    3f5c:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 34);
				deactivate_category_buttons_and_save(button34_addr, 34);  // provide starting and ending buttons as arguments
    3f5e:	82 e4       	ldi	r24, 0x42	; 66
    3f60:	90 e0       	ldi	r25, 0x00	; 0
    3f62:	62 e2       	ldi	r22, 0x22	; 34
    3f64:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3f68:	56 c0       	rjmp	.+172    	; 0x4016 <__stack+0x1e17>
			}
			else if((34 > category_size_4) && (34 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    3f6a:	f1 e2       	ldi	r31, 0x21	; 33
    3f6c:	f9 15       	cp	r31, r9
    3f6e:	88 f0       	brcs	.+34     	; 0x3f92 <__stack+0x1d93>
    3f70:	81 e2       	ldi	r24, 0x21	; 33
    3f72:	8a 15       	cp	r24, r10
    3f74:	88 f4       	brcc	.+34     	; 0x3f98 <__stack+0x1d99>
    3f76:	33 20       	and	r3, r3
    3f78:	01 f1       	breq	.+64     	; 0x3fba <__stack+0x1dbb>
			{
				//USART_putstring("34C5 ");				// comment this out in final product
				vote_indicator_34 = 1;					// Indicating button 1 was pressed
    3f7a:	80 91 c8 08 	lds	r24, 0x08C8
    3f7e:	82 60       	ori	r24, 0x02	; 2
    3f80:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat5--;
    3f84:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 34);
				deactivate_category_buttons_and_save(button34_addr, 34);  // provide starting and ending buttons as arguments
    3f86:	82 e4       	ldi	r24, 0x42	; 66
    3f88:	90 e0       	ldi	r25, 0x00	; 0
    3f8a:	62 e2       	ldi	r22, 0x22	; 34
    3f8c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3f90:	42 c0       	rjmp	.+132    	; 0x4016 <__stack+0x1e17>
			}
			else if((34 > category_size_5) && (34 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    3f92:	91 e2       	ldi	r25, 0x21	; 33
    3f94:	9a 15       	cp	r25, r10
    3f96:	88 f0       	brcs	.+34     	; 0x3fba <__stack+0x1dbb>
    3f98:	a1 e2       	ldi	r26, 0x21	; 33
    3f9a:	a8 15       	cp	r26, r8
    3f9c:	88 f4       	brcc	.+34     	; 0x3fc0 <__stack+0x1dc1>
    3f9e:	11 23       	and	r17, r17
    3fa0:	01 f1       	breq	.+64     	; 0x3fe2 <__stack+0x1de3>
			{
				//USART_putstring("34C6 ");				// comment this out in final product
				vote_indicator_34 = 1;					// Indicating button 1 was pressed
    3fa2:	80 91 c8 08 	lds	r24, 0x08C8
    3fa6:	82 60       	ori	r24, 0x02	; 2
    3fa8:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat6--;
    3fac:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 34);
				deactivate_category_buttons_and_save(button34_addr, 34);  // provide starting and ending buttons as arguments
    3fae:	82 e4       	ldi	r24, 0x42	; 66
    3fb0:	90 e0       	ldi	r25, 0x00	; 0
    3fb2:	62 e2       	ldi	r22, 0x22	; 34
    3fb4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3fb8:	2e c0       	rjmp	.+92     	; 0x4016 <__stack+0x1e17>
			}
			else if((34 > category_size_6) && (34 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    3fba:	b1 e2       	ldi	r27, 0x21	; 33
    3fbc:	b8 15       	cp	r27, r8
    3fbe:	88 f0       	brcs	.+34     	; 0x3fe2 <__stack+0x1de3>
    3fc0:	e1 e2       	ldi	r30, 0x21	; 33
    3fc2:	e6 15       	cp	r30, r6
    3fc4:	70 f4       	brcc	.+28     	; 0x3fe2 <__stack+0x1de3>
    3fc6:	00 23       	and	r16, r16
    3fc8:	61 f0       	breq	.+24     	; 0x3fe2 <__stack+0x1de3>
			{
				//USART_putstring("34C7 ");				// comment this out in final product
				vote_indicator_34 = 1;					// Indicating button 1 was pressed
    3fca:	80 91 c8 08 	lds	r24, 0x08C8
    3fce:	82 60       	ori	r24, 0x02	; 2
    3fd0:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat7--;
    3fd4:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 34);
				deactivate_category_buttons_and_save(button34_addr, 34);  // provide starting and ending buttons as arguments
    3fd6:	82 e4       	ldi	r24, 0x42	; 66
    3fd8:	90 e0       	ldi	r25, 0x00	; 0
    3fda:	62 e2       	ldi	r22, 0x22	; 34
    3fdc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    3fe0:	1a c0       	rjmp	.+52     	; 0x4016 <__stack+0x1e17>
				//vote_indicator_34 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 34);
				//deactivate_category_buttons_and_save(button34_addr, 34);  // provide starting and ending buttons as arguments
			//}
			else if ((34 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    3fe2:	80 91 64 05 	lds	r24, 0x0564
    3fe6:	90 91 65 05 	lds	r25, 0x0565
    3fea:	82 32       	cpi	r24, 0x22	; 34
    3fec:	91 05       	cpc	r25, r1
    3fee:	98 f4       	brcc	.+38     	; 0x4016 <__stack+0x1e17>
    3ff0:	80 91 48 08 	lds	r24, 0x0848
    3ff4:	88 23       	and	r24, r24
    3ff6:	79 f0       	breq	.+30     	; 0x4016 <__stack+0x1e17>
			{
				//USART_putstring("34G ");		// comment this out in final product
				vote_indicator_34 = 1;			// Indicating button 1 was pressed
    3ff8:	80 91 c8 08 	lds	r24, 0x08C8
    3ffc:	82 60       	ori	r24, 0x02	; 2
    3ffe:	80 93 c8 08 	sts	0x08C8, r24
				deactivate_category_buttons_and_save(button34_addr, 34);
    4002:	82 e4       	ldi	r24, 0x42	; 66
    4004:	90 e0       	ldi	r25, 0x00	; 0
    4006:	62 e2       	ldi	r22, 0x22	; 34
    4008:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 34);
				gen_vote_count--;
    400c:	80 91 48 08 	lds	r24, 0x0848
    4010:	81 50       	subi	r24, 0x01	; 1
    4012:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x02)  && (35 <= candidate_count) && vote_indicator_35 == 0)
    4016:	86 b1       	in	r24, 0x06	; 6
    4018:	80 fd       	sbrc	r24, 0
    401a:	8f c0       	rjmp	.+286    	; 0x413a <__stack+0x1f3b>
    401c:	86 b1       	in	r24, 0x06	; 6
    401e:	81 fd       	sbrc	r24, 1
    4020:	8c c0       	rjmp	.+280    	; 0x413a <__stack+0x1f3b>
    4022:	86 b1       	in	r24, 0x06	; 6
    4024:	82 ff       	sbrs	r24, 2
    4026:	89 c0       	rjmp	.+274    	; 0x413a <__stack+0x1f3b>
    4028:	86 b1       	in	r24, 0x06	; 6
    402a:	83 fd       	sbrc	r24, 3
    402c:	86 c0       	rjmp	.+268    	; 0x413a <__stack+0x1f3b>
    402e:	83 b1       	in	r24, 0x03	; 3
    4030:	8f 70       	andi	r24, 0x0F	; 15
    4032:	82 30       	cpi	r24, 0x02	; 2
    4034:	09 f0       	breq	.+2      	; 0x4038 <__stack+0x1e39>
    4036:	81 c0       	rjmp	.+258    	; 0x413a <__stack+0x1f3b>
    4038:	80 91 f6 05 	lds	r24, 0x05F6
    403c:	83 32       	cpi	r24, 0x23	; 35
    403e:	08 f4       	brcc	.+2      	; 0x4042 <__stack+0x1e43>
    4040:	7c c0       	rjmp	.+248    	; 0x413a <__stack+0x1f3b>
    4042:	80 91 c8 08 	lds	r24, 0x08C8
    4046:	82 fd       	sbrc	r24, 2
    4048:	78 c0       	rjmp	.+240    	; 0x413a <__stack+0x1f3b>
		{
			if((35 > category_size_2) && (35 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    404a:	f2 e2       	ldi	r31, 0x22	; 34
    404c:	f7 15       	cp	r31, r7
    404e:	70 f4       	brcc	.+28     	; 0x406c <__stack+0x1e6d>
    4050:	ff 20       	and	r15, r15
    4052:	e9 f0       	breq	.+58     	; 0x408e <__stack+0x1e8f>
			{
				//USART_putstring("35C3 ");				// comment this out in final product
				vote_indicator_35 = 1;					// Indicating button 1 was pressed
    4054:	80 91 c8 08 	lds	r24, 0x08C8
    4058:	84 60       	ori	r24, 0x04	; 4
    405a:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat3--;
    405e:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 35);
				deactivate_category_buttons_and_save(button35_addr, 35);  // provide starting and ending buttons as arguments
    4060:	84 e4       	ldi	r24, 0x44	; 68
    4062:	90 e0       	ldi	r25, 0x00	; 0
    4064:	63 e2       	ldi	r22, 0x23	; 35
    4066:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    406a:	67 c0       	rjmp	.+206    	; 0x413a <__stack+0x1f3b>
			}
			else if((35 > category_size_3) && (35 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    406c:	82 e2       	ldi	r24, 0x22	; 34
    406e:	89 15       	cp	r24, r9
    4070:	88 f4       	brcc	.+34     	; 0x4094 <__stack+0x1e95>
    4072:	22 20       	and	r2, r2
    4074:	01 f1       	breq	.+64     	; 0x40b6 <__stack+0x1eb7>
			{
				//USART_putstring("35C4 ");				// comment this out in final product
				vote_indicator_35 = 1;					// Indicating button 1 was pressed
    4076:	80 91 c8 08 	lds	r24, 0x08C8
    407a:	84 60       	ori	r24, 0x04	; 4
    407c:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat4--;
    4080:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 35);
				deactivate_category_buttons_and_save(button35_addr, 35);  // provide starting and ending buttons as arguments
    4082:	84 e4       	ldi	r24, 0x44	; 68
    4084:	90 e0       	ldi	r25, 0x00	; 0
    4086:	63 e2       	ldi	r22, 0x23	; 35
    4088:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    408c:	56 c0       	rjmp	.+172    	; 0x413a <__stack+0x1f3b>
			}
			else if((35 > category_size_4) && (35 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    408e:	92 e2       	ldi	r25, 0x22	; 34
    4090:	99 15       	cp	r25, r9
    4092:	88 f0       	brcs	.+34     	; 0x40b6 <__stack+0x1eb7>
    4094:	a2 e2       	ldi	r26, 0x22	; 34
    4096:	aa 15       	cp	r26, r10
    4098:	88 f4       	brcc	.+34     	; 0x40bc <__stack+0x1ebd>
    409a:	33 20       	and	r3, r3
    409c:	01 f1       	breq	.+64     	; 0x40de <__stack+0x1edf>
			{
				//USART_putstring("35C5 ");				// comment this out in final product
				vote_indicator_35 = 1;					// Indicating button 1 was pressed
    409e:	80 91 c8 08 	lds	r24, 0x08C8
    40a2:	84 60       	ori	r24, 0x04	; 4
    40a4:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat5--;
    40a8:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 35);
				deactivate_category_buttons_and_save(button35_addr, 35);  // provide starting and ending buttons as arguments
    40aa:	84 e4       	ldi	r24, 0x44	; 68
    40ac:	90 e0       	ldi	r25, 0x00	; 0
    40ae:	63 e2       	ldi	r22, 0x23	; 35
    40b0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    40b4:	42 c0       	rjmp	.+132    	; 0x413a <__stack+0x1f3b>
			}
			else if((35 > category_size_5) && (35 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    40b6:	b2 e2       	ldi	r27, 0x22	; 34
    40b8:	ba 15       	cp	r27, r10
    40ba:	88 f0       	brcs	.+34     	; 0x40de <__stack+0x1edf>
    40bc:	e2 e2       	ldi	r30, 0x22	; 34
    40be:	e8 15       	cp	r30, r8
    40c0:	88 f4       	brcc	.+34     	; 0x40e4 <__stack+0x1ee5>
    40c2:	11 23       	and	r17, r17
    40c4:	01 f1       	breq	.+64     	; 0x4106 <__stack+0x1f07>
			{
				//USART_putstring("35C6 ");				// comment this out in final product
				vote_indicator_35 = 1;					// Indicating button 1 was pressed
    40c6:	80 91 c8 08 	lds	r24, 0x08C8
    40ca:	84 60       	ori	r24, 0x04	; 4
    40cc:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat6--;
    40d0:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 35);
				deactivate_category_buttons_and_save(button35_addr, 35);  // provide starting and ending buttons as arguments
    40d2:	84 e4       	ldi	r24, 0x44	; 68
    40d4:	90 e0       	ldi	r25, 0x00	; 0
    40d6:	63 e2       	ldi	r22, 0x23	; 35
    40d8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    40dc:	2e c0       	rjmp	.+92     	; 0x413a <__stack+0x1f3b>
			}
			else if((35 > category_size_6) && (35 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    40de:	f2 e2       	ldi	r31, 0x22	; 34
    40e0:	f8 15       	cp	r31, r8
    40e2:	88 f0       	brcs	.+34     	; 0x4106 <__stack+0x1f07>
    40e4:	82 e2       	ldi	r24, 0x22	; 34
    40e6:	86 15       	cp	r24, r6
    40e8:	70 f4       	brcc	.+28     	; 0x4106 <__stack+0x1f07>
    40ea:	00 23       	and	r16, r16
    40ec:	61 f0       	breq	.+24     	; 0x4106 <__stack+0x1f07>
			{
				//USART_putstring("35C7 ");				// comment this out in final product
				vote_indicator_35 = 1;					// Indicating button 1 was pressed
    40ee:	80 91 c8 08 	lds	r24, 0x08C8
    40f2:	84 60       	ori	r24, 0x04	; 4
    40f4:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat7--;
    40f8:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 35);
				deactivate_category_buttons_and_save(button35_addr, 35);  // provide starting and ending buttons as arguments
    40fa:	84 e4       	ldi	r24, 0x44	; 68
    40fc:	90 e0       	ldi	r25, 0x00	; 0
    40fe:	63 e2       	ldi	r22, 0x23	; 35
    4100:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4104:	1a c0       	rjmp	.+52     	; 0x413a <__stack+0x1f3b>
				//vote_indicator_35 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 35);
				//deactivate_category_buttons_and_save(button35_addr, 35);  // provide starting and ending buttons as arguments
			//}
			else if ((35 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4106:	80 91 64 05 	lds	r24, 0x0564
    410a:	90 91 65 05 	lds	r25, 0x0565
    410e:	83 32       	cpi	r24, 0x23	; 35
    4110:	91 05       	cpc	r25, r1
    4112:	98 f4       	brcc	.+38     	; 0x413a <__stack+0x1f3b>
    4114:	80 91 48 08 	lds	r24, 0x0848
    4118:	88 23       	and	r24, r24
    411a:	79 f0       	breq	.+30     	; 0x413a <__stack+0x1f3b>
			{
				//USART_putstring("35G ");		// comment this out in final product
				vote_indicator_35 = 1;			// Indicating button 1 was pressed
    411c:	80 91 c8 08 	lds	r24, 0x08C8
    4120:	84 60       	ori	r24, 0x04	; 4
    4122:	80 93 c8 08 	sts	0x08C8, r24
				deactivate_category_buttons_and_save(button35_addr, 35);
    4126:	84 e4       	ldi	r24, 0x44	; 68
    4128:	90 e0       	ldi	r25, 0x00	; 0
    412a:	63 e2       	ldi	r22, 0x23	; 35
    412c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 35);
				gen_vote_count--;
    4130:	80 91 48 08 	lds	r24, 0x0848
    4134:	81 50       	subi	r24, 0x01	; 1
    4136:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x03)  && (36 <= candidate_count) && vote_indicator_36 == 0)
    413a:	86 b1       	in	r24, 0x06	; 6
    413c:	80 fd       	sbrc	r24, 0
    413e:	8f c0       	rjmp	.+286    	; 0x425e <__stack+0x205f>
    4140:	86 b1       	in	r24, 0x06	; 6
    4142:	81 fd       	sbrc	r24, 1
    4144:	8c c0       	rjmp	.+280    	; 0x425e <__stack+0x205f>
    4146:	86 b1       	in	r24, 0x06	; 6
    4148:	82 ff       	sbrs	r24, 2
    414a:	89 c0       	rjmp	.+274    	; 0x425e <__stack+0x205f>
    414c:	86 b1       	in	r24, 0x06	; 6
    414e:	83 fd       	sbrc	r24, 3
    4150:	86 c0       	rjmp	.+268    	; 0x425e <__stack+0x205f>
    4152:	83 b1       	in	r24, 0x03	; 3
    4154:	8f 70       	andi	r24, 0x0F	; 15
    4156:	83 30       	cpi	r24, 0x03	; 3
    4158:	09 f0       	breq	.+2      	; 0x415c <__stack+0x1f5d>
    415a:	81 c0       	rjmp	.+258    	; 0x425e <__stack+0x205f>
    415c:	80 91 f6 05 	lds	r24, 0x05F6
    4160:	84 32       	cpi	r24, 0x24	; 36
    4162:	08 f4       	brcc	.+2      	; 0x4166 <__stack+0x1f67>
    4164:	7c c0       	rjmp	.+248    	; 0x425e <__stack+0x205f>
    4166:	80 91 c8 08 	lds	r24, 0x08C8
    416a:	83 fd       	sbrc	r24, 3
    416c:	78 c0       	rjmp	.+240    	; 0x425e <__stack+0x205f>
		{
			if((36 > category_size_2) && (36 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    416e:	93 e2       	ldi	r25, 0x23	; 35
    4170:	97 15       	cp	r25, r7
    4172:	70 f4       	brcc	.+28     	; 0x4190 <__stack+0x1f91>
    4174:	ff 20       	and	r15, r15
    4176:	e9 f0       	breq	.+58     	; 0x41b2 <__stack+0x1fb3>
			{
				//USART_putstring("36C3 ");				// comment this out in final product
				vote_indicator_36 = 1;					// Indicating button 1 was pressed
    4178:	80 91 c8 08 	lds	r24, 0x08C8
    417c:	88 60       	ori	r24, 0x08	; 8
    417e:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat3--;
    4182:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 36);
				deactivate_category_buttons_and_save(button36_addr, 36);  // provide starting and ending buttons as arguments
    4184:	86 e4       	ldi	r24, 0x46	; 70
    4186:	90 e0       	ldi	r25, 0x00	; 0
    4188:	64 e2       	ldi	r22, 0x24	; 36
    418a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    418e:	67 c0       	rjmp	.+206    	; 0x425e <__stack+0x205f>
			}
			else if((36 > category_size_3) && (36 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4190:	a3 e2       	ldi	r26, 0x23	; 35
    4192:	a9 15       	cp	r26, r9
    4194:	88 f4       	brcc	.+34     	; 0x41b8 <__stack+0x1fb9>
    4196:	22 20       	and	r2, r2
    4198:	01 f1       	breq	.+64     	; 0x41da <__stack+0x1fdb>
			{
				//USART_putstring("36C4 ");				// comment this out in final product
				vote_indicator_36 = 1;					// Indicating button 1 was pressed
    419a:	80 91 c8 08 	lds	r24, 0x08C8
    419e:	88 60       	ori	r24, 0x08	; 8
    41a0:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat4--;
    41a4:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 36);
				deactivate_category_buttons_and_save(button36_addr, 36);  // provide starting and ending buttons as arguments
    41a6:	86 e4       	ldi	r24, 0x46	; 70
    41a8:	90 e0       	ldi	r25, 0x00	; 0
    41aa:	64 e2       	ldi	r22, 0x24	; 36
    41ac:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    41b0:	56 c0       	rjmp	.+172    	; 0x425e <__stack+0x205f>
			}
			else if((36 > category_size_4) && (36 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    41b2:	b3 e2       	ldi	r27, 0x23	; 35
    41b4:	b9 15       	cp	r27, r9
    41b6:	88 f0       	brcs	.+34     	; 0x41da <__stack+0x1fdb>
    41b8:	e3 e2       	ldi	r30, 0x23	; 35
    41ba:	ea 15       	cp	r30, r10
    41bc:	88 f4       	brcc	.+34     	; 0x41e0 <__stack+0x1fe1>
    41be:	33 20       	and	r3, r3
    41c0:	01 f1       	breq	.+64     	; 0x4202 <__stack+0x2003>
			{
				//USART_putstring("36C5 ");				// comment this out in final product
				vote_indicator_36 = 1;					// Indicating button 1 was pressed
    41c2:	80 91 c8 08 	lds	r24, 0x08C8
    41c6:	88 60       	ori	r24, 0x08	; 8
    41c8:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat5--;
    41cc:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 36);
				deactivate_category_buttons_and_save(button36_addr, 36);  // provide starting and ending buttons as arguments
    41ce:	86 e4       	ldi	r24, 0x46	; 70
    41d0:	90 e0       	ldi	r25, 0x00	; 0
    41d2:	64 e2       	ldi	r22, 0x24	; 36
    41d4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    41d8:	42 c0       	rjmp	.+132    	; 0x425e <__stack+0x205f>
			}
			else if((36 > category_size_5) && (36 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    41da:	f3 e2       	ldi	r31, 0x23	; 35
    41dc:	fa 15       	cp	r31, r10
    41de:	88 f0       	brcs	.+34     	; 0x4202 <__stack+0x2003>
    41e0:	83 e2       	ldi	r24, 0x23	; 35
    41e2:	88 15       	cp	r24, r8
    41e4:	88 f4       	brcc	.+34     	; 0x4208 <__stack+0x2009>
    41e6:	11 23       	and	r17, r17
    41e8:	01 f1       	breq	.+64     	; 0x422a <__stack+0x202b>
			{
				//USART_putstring("36C6 ");				// comment this out in final product
				vote_indicator_36 = 1;					// Indicating button 1 was pressed
    41ea:	80 91 c8 08 	lds	r24, 0x08C8
    41ee:	88 60       	ori	r24, 0x08	; 8
    41f0:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat6--;
    41f4:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 36);
				deactivate_category_buttons_and_save(button36_addr, 36);  // provide starting and ending buttons as arguments
    41f6:	86 e4       	ldi	r24, 0x46	; 70
    41f8:	90 e0       	ldi	r25, 0x00	; 0
    41fa:	64 e2       	ldi	r22, 0x24	; 36
    41fc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4200:	2e c0       	rjmp	.+92     	; 0x425e <__stack+0x205f>
			}
			else if((36 > category_size_6) && (36 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4202:	93 e2       	ldi	r25, 0x23	; 35
    4204:	98 15       	cp	r25, r8
    4206:	88 f0       	brcs	.+34     	; 0x422a <__stack+0x202b>
    4208:	a3 e2       	ldi	r26, 0x23	; 35
    420a:	a6 15       	cp	r26, r6
    420c:	70 f4       	brcc	.+28     	; 0x422a <__stack+0x202b>
    420e:	00 23       	and	r16, r16
    4210:	61 f0       	breq	.+24     	; 0x422a <__stack+0x202b>
			{
				//USART_putstring("36C7 ");				// comment this out in final product
				vote_indicator_36 = 1;					// Indicating button 1 was pressed
    4212:	80 91 c8 08 	lds	r24, 0x08C8
    4216:	88 60       	ori	r24, 0x08	; 8
    4218:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat7--;
    421c:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 36);
				deactivate_category_buttons_and_save(button36_addr, 36);  // provide starting and ending buttons as arguments
    421e:	86 e4       	ldi	r24, 0x46	; 70
    4220:	90 e0       	ldi	r25, 0x00	; 0
    4222:	64 e2       	ldi	r22, 0x24	; 36
    4224:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4228:	1a c0       	rjmp	.+52     	; 0x425e <__stack+0x205f>
				//vote_indicator_36 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 36);
				//deactivate_category_buttons_and_save(button36_addr, 36);  // provide starting and ending buttons as arguments
			//}
			else if ((36 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    422a:	80 91 64 05 	lds	r24, 0x0564
    422e:	90 91 65 05 	lds	r25, 0x0565
    4232:	84 32       	cpi	r24, 0x24	; 36
    4234:	91 05       	cpc	r25, r1
    4236:	98 f4       	brcc	.+38     	; 0x425e <__stack+0x205f>
    4238:	80 91 48 08 	lds	r24, 0x0848
    423c:	88 23       	and	r24, r24
    423e:	79 f0       	breq	.+30     	; 0x425e <__stack+0x205f>
			{
				//USART_putstring("36G ");		// comment this out in final product
				vote_indicator_36 = 1;			// Indicating button 1 was pressed
    4240:	80 91 c8 08 	lds	r24, 0x08C8
    4244:	88 60       	ori	r24, 0x08	; 8
    4246:	80 93 c8 08 	sts	0x08C8, r24
				deactivate_category_buttons_and_save(button36_addr, 36);
    424a:	86 e4       	ldi	r24, 0x46	; 70
    424c:	90 e0       	ldi	r25, 0x00	; 0
    424e:	64 e2       	ldi	r22, 0x24	; 36
    4250:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 36);
				gen_vote_count--;
    4254:	80 91 48 08 	lds	r24, 0x0848
    4258:	81 50       	subi	r24, 0x01	; 1
    425a:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x04)  && (37 <= candidate_count) && vote_indicator_37 == 0)
    425e:	86 b1       	in	r24, 0x06	; 6
    4260:	80 fd       	sbrc	r24, 0
    4262:	8f c0       	rjmp	.+286    	; 0x4382 <__stack+0x2183>
    4264:	86 b1       	in	r24, 0x06	; 6
    4266:	81 fd       	sbrc	r24, 1
    4268:	8c c0       	rjmp	.+280    	; 0x4382 <__stack+0x2183>
    426a:	86 b1       	in	r24, 0x06	; 6
    426c:	82 ff       	sbrs	r24, 2
    426e:	89 c0       	rjmp	.+274    	; 0x4382 <__stack+0x2183>
    4270:	86 b1       	in	r24, 0x06	; 6
    4272:	83 fd       	sbrc	r24, 3
    4274:	86 c0       	rjmp	.+268    	; 0x4382 <__stack+0x2183>
    4276:	83 b1       	in	r24, 0x03	; 3
    4278:	8f 70       	andi	r24, 0x0F	; 15
    427a:	84 30       	cpi	r24, 0x04	; 4
    427c:	09 f0       	breq	.+2      	; 0x4280 <__stack+0x2081>
    427e:	81 c0       	rjmp	.+258    	; 0x4382 <__stack+0x2183>
    4280:	80 91 f6 05 	lds	r24, 0x05F6
    4284:	85 32       	cpi	r24, 0x25	; 37
    4286:	08 f4       	brcc	.+2      	; 0x428a <__stack+0x208b>
    4288:	7c c0       	rjmp	.+248    	; 0x4382 <__stack+0x2183>
    428a:	80 91 c8 08 	lds	r24, 0x08C8
    428e:	84 fd       	sbrc	r24, 4
    4290:	78 c0       	rjmp	.+240    	; 0x4382 <__stack+0x2183>
		{
			if((37 > category_size_2) && (37 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    4292:	b4 e2       	ldi	r27, 0x24	; 36
    4294:	b7 15       	cp	r27, r7
    4296:	70 f4       	brcc	.+28     	; 0x42b4 <__stack+0x20b5>
    4298:	ff 20       	and	r15, r15
    429a:	e9 f0       	breq	.+58     	; 0x42d6 <__stack+0x20d7>
			{
				//USART_putstring("37C3 ");				// comment this out in final product
				vote_indicator_37 = 1;					// Indicating button 1 was pressed
    429c:	80 91 c8 08 	lds	r24, 0x08C8
    42a0:	80 61       	ori	r24, 0x10	; 16
    42a2:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat3--;
    42a6:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 37);
				deactivate_category_buttons_and_save(button37_addr, 37);  // provide starting and ending buttons as arguments
    42a8:	88 e4       	ldi	r24, 0x48	; 72
    42aa:	90 e0       	ldi	r25, 0x00	; 0
    42ac:	65 e2       	ldi	r22, 0x25	; 37
    42ae:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    42b2:	67 c0       	rjmp	.+206    	; 0x4382 <__stack+0x2183>
			}
			else if((37 > category_size_3) && (37 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    42b4:	e4 e2       	ldi	r30, 0x24	; 36
    42b6:	e9 15       	cp	r30, r9
    42b8:	88 f4       	brcc	.+34     	; 0x42dc <__stack+0x20dd>
    42ba:	22 20       	and	r2, r2
    42bc:	01 f1       	breq	.+64     	; 0x42fe <__stack+0x20ff>
			{
				//USART_putstring("37C4 ");				// comment this out in final product
				vote_indicator_37 = 1;					// Indicating button 1 was pressed
    42be:	80 91 c8 08 	lds	r24, 0x08C8
    42c2:	80 61       	ori	r24, 0x10	; 16
    42c4:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat4--;
    42c8:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 37);
				deactivate_category_buttons_and_save(button37_addr, 37);  // provide starting and ending buttons as arguments
    42ca:	88 e4       	ldi	r24, 0x48	; 72
    42cc:	90 e0       	ldi	r25, 0x00	; 0
    42ce:	65 e2       	ldi	r22, 0x25	; 37
    42d0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    42d4:	56 c0       	rjmp	.+172    	; 0x4382 <__stack+0x2183>
			}
			else if((37 > category_size_4) && (37 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    42d6:	f4 e2       	ldi	r31, 0x24	; 36
    42d8:	f9 15       	cp	r31, r9
    42da:	88 f0       	brcs	.+34     	; 0x42fe <__stack+0x20ff>
    42dc:	84 e2       	ldi	r24, 0x24	; 36
    42de:	8a 15       	cp	r24, r10
    42e0:	88 f4       	brcc	.+34     	; 0x4304 <__stack+0x2105>
    42e2:	33 20       	and	r3, r3
    42e4:	01 f1       	breq	.+64     	; 0x4326 <__stack+0x2127>
			{
				//USART_putstring("37C5 ");				// comment this out in final product
				vote_indicator_37 = 1;					// Indicating button 1 was pressed
    42e6:	80 91 c8 08 	lds	r24, 0x08C8
    42ea:	80 61       	ori	r24, 0x10	; 16
    42ec:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat5--;
    42f0:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 37);
				deactivate_category_buttons_and_save(button37_addr, 37);  // provide starting and ending buttons as arguments
    42f2:	88 e4       	ldi	r24, 0x48	; 72
    42f4:	90 e0       	ldi	r25, 0x00	; 0
    42f6:	65 e2       	ldi	r22, 0x25	; 37
    42f8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    42fc:	42 c0       	rjmp	.+132    	; 0x4382 <__stack+0x2183>
			}
			else if((37 > category_size_5) && (37 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    42fe:	94 e2       	ldi	r25, 0x24	; 36
    4300:	9a 15       	cp	r25, r10
    4302:	88 f0       	brcs	.+34     	; 0x4326 <__stack+0x2127>
    4304:	a4 e2       	ldi	r26, 0x24	; 36
    4306:	a8 15       	cp	r26, r8
    4308:	88 f4       	brcc	.+34     	; 0x432c <__stack+0x212d>
    430a:	11 23       	and	r17, r17
    430c:	01 f1       	breq	.+64     	; 0x434e <__stack+0x214f>
			{
				//USART_putstring("37C6 ");				// comment this out in final product
				vote_indicator_37 = 1;					// Indicating button 1 was pressed
    430e:	80 91 c8 08 	lds	r24, 0x08C8
    4312:	80 61       	ori	r24, 0x10	; 16
    4314:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat6--;
    4318:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 37);
				deactivate_category_buttons_and_save(button37_addr, 37);  // provide starting and ending buttons as arguments
    431a:	88 e4       	ldi	r24, 0x48	; 72
    431c:	90 e0       	ldi	r25, 0x00	; 0
    431e:	65 e2       	ldi	r22, 0x25	; 37
    4320:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4324:	2e c0       	rjmp	.+92     	; 0x4382 <__stack+0x2183>
			}
			else if((37 > category_size_6) && (37 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4326:	b4 e2       	ldi	r27, 0x24	; 36
    4328:	b8 15       	cp	r27, r8
    432a:	88 f0       	brcs	.+34     	; 0x434e <__stack+0x214f>
    432c:	e4 e2       	ldi	r30, 0x24	; 36
    432e:	e6 15       	cp	r30, r6
    4330:	70 f4       	brcc	.+28     	; 0x434e <__stack+0x214f>
    4332:	00 23       	and	r16, r16
    4334:	61 f0       	breq	.+24     	; 0x434e <__stack+0x214f>
			{
				//USART_putstring("37C7 ");				// comment this out in final product
				vote_indicator_37 = 1;					// Indicating button 1 was pressed
    4336:	80 91 c8 08 	lds	r24, 0x08C8
    433a:	80 61       	ori	r24, 0x10	; 16
    433c:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat7--;
    4340:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 37);
				deactivate_category_buttons_and_save(button37_addr, 37);  // provide starting and ending buttons as arguments
    4342:	88 e4       	ldi	r24, 0x48	; 72
    4344:	90 e0       	ldi	r25, 0x00	; 0
    4346:	65 e2       	ldi	r22, 0x25	; 37
    4348:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    434c:	1a c0       	rjmp	.+52     	; 0x4382 <__stack+0x2183>
				//vote_indicator_37 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 37);
				//deactivate_category_buttons_and_save(button37_addr, 37);  // provide starting and ending buttons as arguments
			//}
			else if ((37 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    434e:	80 91 64 05 	lds	r24, 0x0564
    4352:	90 91 65 05 	lds	r25, 0x0565
    4356:	85 32       	cpi	r24, 0x25	; 37
    4358:	91 05       	cpc	r25, r1
    435a:	98 f4       	brcc	.+38     	; 0x4382 <__stack+0x2183>
    435c:	80 91 48 08 	lds	r24, 0x0848
    4360:	88 23       	and	r24, r24
    4362:	79 f0       	breq	.+30     	; 0x4382 <__stack+0x2183>
			{
				//USART_putstring("37G ");		// comment this out in final product
				vote_indicator_37 = 1;			// Indicating button 1 was pressed
    4364:	80 91 c8 08 	lds	r24, 0x08C8
    4368:	80 61       	ori	r24, 0x10	; 16
    436a:	80 93 c8 08 	sts	0x08C8, r24
				deactivate_category_buttons_and_save(button37_addr, 37);
    436e:	88 e4       	ldi	r24, 0x48	; 72
    4370:	90 e0       	ldi	r25, 0x00	; 0
    4372:	65 e2       	ldi	r22, 0x25	; 37
    4374:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 37);
				gen_vote_count--;
    4378:	80 91 48 08 	lds	r24, 0x0848
    437c:	81 50       	subi	r24, 0x01	; 1
    437e:	80 93 48 08 	sts	0x0848, r24
			}
			
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x05)  && (38 <= candidate_count) && vote_indicator_38 == 0)
    4382:	86 b1       	in	r24, 0x06	; 6
    4384:	80 fd       	sbrc	r24, 0
    4386:	8f c0       	rjmp	.+286    	; 0x44a6 <__stack+0x22a7>
    4388:	86 b1       	in	r24, 0x06	; 6
    438a:	81 fd       	sbrc	r24, 1
    438c:	8c c0       	rjmp	.+280    	; 0x44a6 <__stack+0x22a7>
    438e:	86 b1       	in	r24, 0x06	; 6
    4390:	82 ff       	sbrs	r24, 2
    4392:	89 c0       	rjmp	.+274    	; 0x44a6 <__stack+0x22a7>
    4394:	86 b1       	in	r24, 0x06	; 6
    4396:	83 fd       	sbrc	r24, 3
    4398:	86 c0       	rjmp	.+268    	; 0x44a6 <__stack+0x22a7>
    439a:	83 b1       	in	r24, 0x03	; 3
    439c:	8f 70       	andi	r24, 0x0F	; 15
    439e:	85 30       	cpi	r24, 0x05	; 5
    43a0:	09 f0       	breq	.+2      	; 0x43a4 <__stack+0x21a5>
    43a2:	81 c0       	rjmp	.+258    	; 0x44a6 <__stack+0x22a7>
    43a4:	80 91 f6 05 	lds	r24, 0x05F6
    43a8:	86 32       	cpi	r24, 0x26	; 38
    43aa:	08 f4       	brcc	.+2      	; 0x43ae <__stack+0x21af>
    43ac:	7c c0       	rjmp	.+248    	; 0x44a6 <__stack+0x22a7>
    43ae:	80 91 c8 08 	lds	r24, 0x08C8
    43b2:	85 fd       	sbrc	r24, 5
    43b4:	78 c0       	rjmp	.+240    	; 0x44a6 <__stack+0x22a7>
		{
			if((38 > category_size_2) && (38 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    43b6:	f5 e2       	ldi	r31, 0x25	; 37
    43b8:	f7 15       	cp	r31, r7
    43ba:	70 f4       	brcc	.+28     	; 0x43d8 <__stack+0x21d9>
    43bc:	ff 20       	and	r15, r15
    43be:	e9 f0       	breq	.+58     	; 0x43fa <__stack+0x21fb>
			{
				//USART_putstring("38C3 ");				// comment this out in final product
				vote_indicator_38 = 1;					// Indicating button 1 was pressed
    43c0:	80 91 c8 08 	lds	r24, 0x08C8
    43c4:	80 62       	ori	r24, 0x20	; 32
    43c6:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat3--;
    43ca:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 38);
				deactivate_category_buttons_and_save(button38_addr, 38);  // provide starting and ending buttons as arguments
    43cc:	8a e4       	ldi	r24, 0x4A	; 74
    43ce:	90 e0       	ldi	r25, 0x00	; 0
    43d0:	66 e2       	ldi	r22, 0x26	; 38
    43d2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    43d6:	67 c0       	rjmp	.+206    	; 0x44a6 <__stack+0x22a7>
			}
			else if((38 > category_size_3) && (38 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    43d8:	85 e2       	ldi	r24, 0x25	; 37
    43da:	89 15       	cp	r24, r9
    43dc:	88 f4       	brcc	.+34     	; 0x4400 <__stack+0x2201>
    43de:	22 20       	and	r2, r2
    43e0:	01 f1       	breq	.+64     	; 0x4422 <__stack+0x2223>
			{
				//USART_putstring("38C4 ");				// comment this out in final product
				vote_indicator_38 = 1;					// Indicating button 1 was pressed
    43e2:	80 91 c8 08 	lds	r24, 0x08C8
    43e6:	80 62       	ori	r24, 0x20	; 32
    43e8:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat4--;
    43ec:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 38);
				deactivate_category_buttons_and_save(button38_addr, 38);  // provide starting and ending buttons as arguments
    43ee:	8a e4       	ldi	r24, 0x4A	; 74
    43f0:	90 e0       	ldi	r25, 0x00	; 0
    43f2:	66 e2       	ldi	r22, 0x26	; 38
    43f4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    43f8:	56 c0       	rjmp	.+172    	; 0x44a6 <__stack+0x22a7>
			}
			else if((38 > category_size_4) && (38 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    43fa:	95 e2       	ldi	r25, 0x25	; 37
    43fc:	99 15       	cp	r25, r9
    43fe:	88 f0       	brcs	.+34     	; 0x4422 <__stack+0x2223>
    4400:	a5 e2       	ldi	r26, 0x25	; 37
    4402:	aa 15       	cp	r26, r10
    4404:	88 f4       	brcc	.+34     	; 0x4428 <__stack+0x2229>
    4406:	33 20       	and	r3, r3
    4408:	01 f1       	breq	.+64     	; 0x444a <__stack+0x224b>
			{
				//USART_putstring("38C5 ");				// comment this out in final product
				vote_indicator_38 = 1;					// Indicating button 1 was pressed
    440a:	80 91 c8 08 	lds	r24, 0x08C8
    440e:	80 62       	ori	r24, 0x20	; 32
    4410:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat5--;
    4414:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 38);
				deactivate_category_buttons_and_save(button38_addr, 38);  // provide starting and ending buttons as arguments
    4416:	8a e4       	ldi	r24, 0x4A	; 74
    4418:	90 e0       	ldi	r25, 0x00	; 0
    441a:	66 e2       	ldi	r22, 0x26	; 38
    441c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4420:	42 c0       	rjmp	.+132    	; 0x44a6 <__stack+0x22a7>
			}
			else if((38 > category_size_5) && (38 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    4422:	b5 e2       	ldi	r27, 0x25	; 37
    4424:	ba 15       	cp	r27, r10
    4426:	88 f0       	brcs	.+34     	; 0x444a <__stack+0x224b>
    4428:	e5 e2       	ldi	r30, 0x25	; 37
    442a:	e8 15       	cp	r30, r8
    442c:	88 f4       	brcc	.+34     	; 0x4450 <__stack+0x2251>
    442e:	11 23       	and	r17, r17
    4430:	01 f1       	breq	.+64     	; 0x4472 <__stack+0x2273>
			{
				//USART_putstring("38C6 ");				// comment this out in final product
				vote_indicator_38 = 1;					// Indicating button 1 was pressed
    4432:	80 91 c8 08 	lds	r24, 0x08C8
    4436:	80 62       	ori	r24, 0x20	; 32
    4438:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat6--;
    443c:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 38);
				deactivate_category_buttons_and_save(button38_addr, 38);  // provide starting and ending buttons as arguments
    443e:	8a e4       	ldi	r24, 0x4A	; 74
    4440:	90 e0       	ldi	r25, 0x00	; 0
    4442:	66 e2       	ldi	r22, 0x26	; 38
    4444:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4448:	2e c0       	rjmp	.+92     	; 0x44a6 <__stack+0x22a7>
			}
			else if((38 > category_size_6) && (38 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    444a:	f5 e2       	ldi	r31, 0x25	; 37
    444c:	f8 15       	cp	r31, r8
    444e:	88 f0       	brcs	.+34     	; 0x4472 <__stack+0x2273>
    4450:	85 e2       	ldi	r24, 0x25	; 37
    4452:	86 15       	cp	r24, r6
    4454:	70 f4       	brcc	.+28     	; 0x4472 <__stack+0x2273>
    4456:	00 23       	and	r16, r16
    4458:	61 f0       	breq	.+24     	; 0x4472 <__stack+0x2273>
			{
				//USART_putstring("38C7 ");				// comment this out in final product
				vote_indicator_38 = 1;					// Indicating button 1 was pressed
    445a:	80 91 c8 08 	lds	r24, 0x08C8
    445e:	80 62       	ori	r24, 0x20	; 32
    4460:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat7--;
    4464:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 38);
				deactivate_category_buttons_and_save(button38_addr, 38);  // provide starting and ending buttons as arguments
    4466:	8a e4       	ldi	r24, 0x4A	; 74
    4468:	90 e0       	ldi	r25, 0x00	; 0
    446a:	66 e2       	ldi	r22, 0x26	; 38
    446c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4470:	1a c0       	rjmp	.+52     	; 0x44a6 <__stack+0x22a7>
				//vote_indicator_38 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 38);
				//deactivate_category_buttons_and_save(button38_addr, 38);  // provide starting and ending buttons as arguments
			//}
			else if ((38 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4472:	80 91 64 05 	lds	r24, 0x0564
    4476:	90 91 65 05 	lds	r25, 0x0565
    447a:	86 32       	cpi	r24, 0x26	; 38
    447c:	91 05       	cpc	r25, r1
    447e:	98 f4       	brcc	.+38     	; 0x44a6 <__stack+0x22a7>
    4480:	80 91 48 08 	lds	r24, 0x0848
    4484:	88 23       	and	r24, r24
    4486:	79 f0       	breq	.+30     	; 0x44a6 <__stack+0x22a7>
			{
				//USART_putstring("38G ");		// comment this out in final product
				vote_indicator_38 = 1;			// Indicating button 1 was pressed
    4488:	80 91 c8 08 	lds	r24, 0x08C8
    448c:	80 62       	ori	r24, 0x20	; 32
    448e:	80 93 c8 08 	sts	0x08C8, r24
				deactivate_category_buttons_and_save(button38_addr, 38);
    4492:	8a e4       	ldi	r24, 0x4A	; 74
    4494:	90 e0       	ldi	r25, 0x00	; 0
    4496:	66 e2       	ldi	r22, 0x26	; 38
    4498:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 38);
				gen_vote_count--;
    449c:	80 91 48 08 	lds	r24, 0x0848
    44a0:	81 50       	subi	r24, 0x01	; 1
    44a2:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x06)  && (39 <= candidate_count) && vote_indicator_39 == 0)
    44a6:	86 b1       	in	r24, 0x06	; 6
    44a8:	80 fd       	sbrc	r24, 0
    44aa:	8f c0       	rjmp	.+286    	; 0x45ca <__stack+0x23cb>
    44ac:	86 b1       	in	r24, 0x06	; 6
    44ae:	81 fd       	sbrc	r24, 1
    44b0:	8c c0       	rjmp	.+280    	; 0x45ca <__stack+0x23cb>
    44b2:	86 b1       	in	r24, 0x06	; 6
    44b4:	82 ff       	sbrs	r24, 2
    44b6:	89 c0       	rjmp	.+274    	; 0x45ca <__stack+0x23cb>
    44b8:	86 b1       	in	r24, 0x06	; 6
    44ba:	83 fd       	sbrc	r24, 3
    44bc:	86 c0       	rjmp	.+268    	; 0x45ca <__stack+0x23cb>
    44be:	83 b1       	in	r24, 0x03	; 3
    44c0:	8f 70       	andi	r24, 0x0F	; 15
    44c2:	86 30       	cpi	r24, 0x06	; 6
    44c4:	09 f0       	breq	.+2      	; 0x44c8 <__stack+0x22c9>
    44c6:	81 c0       	rjmp	.+258    	; 0x45ca <__stack+0x23cb>
    44c8:	80 91 f6 05 	lds	r24, 0x05F6
    44cc:	87 32       	cpi	r24, 0x27	; 39
    44ce:	08 f4       	brcc	.+2      	; 0x44d2 <__stack+0x22d3>
    44d0:	7c c0       	rjmp	.+248    	; 0x45ca <__stack+0x23cb>
    44d2:	80 91 c8 08 	lds	r24, 0x08C8
    44d6:	86 fd       	sbrc	r24, 6
    44d8:	78 c0       	rjmp	.+240    	; 0x45ca <__stack+0x23cb>
		{
			if((39 > category_size_2) && (39 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    44da:	96 e2       	ldi	r25, 0x26	; 38
    44dc:	97 15       	cp	r25, r7
    44de:	70 f4       	brcc	.+28     	; 0x44fc <__stack+0x22fd>
    44e0:	ff 20       	and	r15, r15
    44e2:	e9 f0       	breq	.+58     	; 0x451e <__stack+0x231f>
			{
				//USART_putstring("39C3 ");				// comment this out in final product
				vote_indicator_39 = 1;					// Indicating button 1 was pressed
    44e4:	80 91 c8 08 	lds	r24, 0x08C8
    44e8:	80 64       	ori	r24, 0x40	; 64
    44ea:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat3--;
    44ee:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 39);
				deactivate_category_buttons_and_save(button39_addr, 39);  // provide starting and ending buttons as arguments
    44f0:	8c e4       	ldi	r24, 0x4C	; 76
    44f2:	90 e0       	ldi	r25, 0x00	; 0
    44f4:	67 e2       	ldi	r22, 0x27	; 39
    44f6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    44fa:	67 c0       	rjmp	.+206    	; 0x45ca <__stack+0x23cb>
			}
			else if((39 > category_size_3) && (39 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    44fc:	a6 e2       	ldi	r26, 0x26	; 38
    44fe:	a9 15       	cp	r26, r9
    4500:	88 f4       	brcc	.+34     	; 0x4524 <__stack+0x2325>
    4502:	22 20       	and	r2, r2
    4504:	01 f1       	breq	.+64     	; 0x4546 <__stack+0x2347>
			{
				//USART_putstring("39C4 ");				// comment this out in final product
				vote_indicator_39 = 1;					// Indicating button 1 was pressed
    4506:	80 91 c8 08 	lds	r24, 0x08C8
    450a:	80 64       	ori	r24, 0x40	; 64
    450c:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat4--;
    4510:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 39);
				deactivate_category_buttons_and_save(button39_addr, 39);  // provide starting and ending buttons as arguments
    4512:	8c e4       	ldi	r24, 0x4C	; 76
    4514:	90 e0       	ldi	r25, 0x00	; 0
    4516:	67 e2       	ldi	r22, 0x27	; 39
    4518:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    451c:	56 c0       	rjmp	.+172    	; 0x45ca <__stack+0x23cb>
			}
			else if((39 > category_size_4) && (39 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    451e:	b6 e2       	ldi	r27, 0x26	; 38
    4520:	b9 15       	cp	r27, r9
    4522:	88 f0       	brcs	.+34     	; 0x4546 <__stack+0x2347>
    4524:	e6 e2       	ldi	r30, 0x26	; 38
    4526:	ea 15       	cp	r30, r10
    4528:	88 f4       	brcc	.+34     	; 0x454c <__stack+0x234d>
    452a:	33 20       	and	r3, r3
    452c:	01 f1       	breq	.+64     	; 0x456e <__stack+0x236f>
			{
				//USART_putstring("39C5 ");				// comment this out in final product
				vote_indicator_39 = 1;					// Indicating button 1 was pressed
    452e:	80 91 c8 08 	lds	r24, 0x08C8
    4532:	80 64       	ori	r24, 0x40	; 64
    4534:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat5--;
    4538:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 39);
				deactivate_category_buttons_and_save(button39_addr, 39);  // provide starting and ending buttons as arguments
    453a:	8c e4       	ldi	r24, 0x4C	; 76
    453c:	90 e0       	ldi	r25, 0x00	; 0
    453e:	67 e2       	ldi	r22, 0x27	; 39
    4540:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4544:	42 c0       	rjmp	.+132    	; 0x45ca <__stack+0x23cb>
			}
			else if((39 > category_size_5) && (39 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    4546:	f6 e2       	ldi	r31, 0x26	; 38
    4548:	fa 15       	cp	r31, r10
    454a:	88 f0       	brcs	.+34     	; 0x456e <__stack+0x236f>
    454c:	86 e2       	ldi	r24, 0x26	; 38
    454e:	88 15       	cp	r24, r8
    4550:	88 f4       	brcc	.+34     	; 0x4574 <__stack+0x2375>
    4552:	11 23       	and	r17, r17
    4554:	01 f1       	breq	.+64     	; 0x4596 <__stack+0x2397>
			{
				//USART_putstring("39C6 ");				// comment this out in final product
				vote_indicator_39 = 1;                  	// Indicating button 1 was pressed
    4556:	80 91 c8 08 	lds	r24, 0x08C8
    455a:	80 64       	ori	r24, 0x40	; 64
    455c:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat6--;
    4560:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 39);
				deactivate_category_buttons_and_save(button39_addr, 39);  // provide starting and ending buttons as arguments
    4562:	8c e4       	ldi	r24, 0x4C	; 76
    4564:	90 e0       	ldi	r25, 0x00	; 0
    4566:	67 e2       	ldi	r22, 0x27	; 39
    4568:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    456c:	2e c0       	rjmp	.+92     	; 0x45ca <__stack+0x23cb>
			}
			else if((39 > category_size_6) && (39 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    456e:	96 e2       	ldi	r25, 0x26	; 38
    4570:	98 15       	cp	r25, r8
    4572:	88 f0       	brcs	.+34     	; 0x4596 <__stack+0x2397>
    4574:	a6 e2       	ldi	r26, 0x26	; 38
    4576:	a6 15       	cp	r26, r6
    4578:	70 f4       	brcc	.+28     	; 0x4596 <__stack+0x2397>
    457a:	00 23       	and	r16, r16
    457c:	61 f0       	breq	.+24     	; 0x4596 <__stack+0x2397>
			{
				//USART_putstring("39C7 ");				// comment this out in final product
				vote_indicator_39 = 1;                  	// Indicating button 1 was pressed
    457e:	80 91 c8 08 	lds	r24, 0x08C8
    4582:	80 64       	ori	r24, 0x40	; 64
    4584:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat7--;
    4588:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 39);
				deactivate_category_buttons_and_save(button39_addr, 39);  // provide starting and ending buttons as arguments
    458a:	8c e4       	ldi	r24, 0x4C	; 76
    458c:	90 e0       	ldi	r25, 0x00	; 0
    458e:	67 e2       	ldi	r22, 0x27	; 39
    4590:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4594:	1a c0       	rjmp	.+52     	; 0x45ca <__stack+0x23cb>
				//vote_indicator_39 = 1;                  	// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 39);
				//deactivate_category_buttons_and_save(button39_addr, 39);  // provide starting and ending buttons as arguments
			//}
			else if ((39 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4596:	80 91 64 05 	lds	r24, 0x0564
    459a:	90 91 65 05 	lds	r25, 0x0565
    459e:	87 32       	cpi	r24, 0x27	; 39
    45a0:	91 05       	cpc	r25, r1
    45a2:	98 f4       	brcc	.+38     	; 0x45ca <__stack+0x23cb>
    45a4:	80 91 48 08 	lds	r24, 0x0848
    45a8:	88 23       	and	r24, r24
    45aa:	79 f0       	breq	.+30     	; 0x45ca <__stack+0x23cb>
			{
				//USART_putstring("39G ");		// comment this out in final product
				vote_indicator_39 = 1;			// Indicating button 1 was pressed
    45ac:	80 91 c8 08 	lds	r24, 0x08C8
    45b0:	80 64       	ori	r24, 0x40	; 64
    45b2:	80 93 c8 08 	sts	0x08C8, r24
				deactivate_category_buttons_and_save(button39_addr, 39);
    45b6:	8c e4       	ldi	r24, 0x4C	; 76
    45b8:	90 e0       	ldi	r25, 0x00	; 0
    45ba:	67 e2       	ldi	r22, 0x27	; 39
    45bc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 39);
				gen_vote_count--;
    45c0:	80 91 48 08 	lds	r24, 0x0848
    45c4:	81 50       	subi	r24, 0x01	; 1
    45c6:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x07)  && (40 <= candidate_count) && vote_indicator_40 == 0)
    45ca:	86 b1       	in	r24, 0x06	; 6
    45cc:	80 fd       	sbrc	r24, 0
    45ce:	90 c0       	rjmp	.+288    	; 0x46f0 <__stack+0x24f1>
    45d0:	86 b1       	in	r24, 0x06	; 6
    45d2:	81 fd       	sbrc	r24, 1
    45d4:	8d c0       	rjmp	.+282    	; 0x46f0 <__stack+0x24f1>
    45d6:	86 b1       	in	r24, 0x06	; 6
    45d8:	82 ff       	sbrs	r24, 2
    45da:	8a c0       	rjmp	.+276    	; 0x46f0 <__stack+0x24f1>
    45dc:	86 b1       	in	r24, 0x06	; 6
    45de:	83 fd       	sbrc	r24, 3
    45e0:	87 c0       	rjmp	.+270    	; 0x46f0 <__stack+0x24f1>
    45e2:	83 b1       	in	r24, 0x03	; 3
    45e4:	8f 70       	andi	r24, 0x0F	; 15
    45e6:	87 30       	cpi	r24, 0x07	; 7
    45e8:	09 f0       	breq	.+2      	; 0x45ec <__stack+0x23ed>
    45ea:	82 c0       	rjmp	.+260    	; 0x46f0 <__stack+0x24f1>
    45ec:	80 91 f6 05 	lds	r24, 0x05F6
    45f0:	88 32       	cpi	r24, 0x28	; 40
    45f2:	08 f4       	brcc	.+2      	; 0x45f6 <__stack+0x23f7>
    45f4:	7d c0       	rjmp	.+250    	; 0x46f0 <__stack+0x24f1>
    45f6:	80 91 c8 08 	lds	r24, 0x08C8
    45fa:	88 23       	and	r24, r24
    45fc:	0c f4       	brge	.+2      	; 0x4600 <__stack+0x2401>
    45fe:	78 c0       	rjmp	.+240    	; 0x46f0 <__stack+0x24f1>
		{
			if((40 > category_size_2) && (40 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    4600:	b7 e2       	ldi	r27, 0x27	; 39
    4602:	b7 15       	cp	r27, r7
    4604:	70 f4       	brcc	.+28     	; 0x4622 <__stack+0x2423>
    4606:	ff 20       	and	r15, r15
    4608:	e9 f0       	breq	.+58     	; 0x4644 <__stack+0x2445>
			{
				//USART_putstring("40C3 ");				// comment this out in final product
				vote_indicator_40 = 1;					// Indicating button 1 was pressed
    460a:	80 91 c8 08 	lds	r24, 0x08C8
    460e:	80 68       	ori	r24, 0x80	; 128
    4610:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat3--;
    4614:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 40);
				deactivate_category_buttons_and_save(button40_addr, 40);  // provide starting and ending buttons as arguments
    4616:	8e e4       	ldi	r24, 0x4E	; 78
    4618:	90 e0       	ldi	r25, 0x00	; 0
    461a:	68 e2       	ldi	r22, 0x28	; 40
    461c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4620:	67 c0       	rjmp	.+206    	; 0x46f0 <__stack+0x24f1>
			}
			else if((40 > category_size_3) && (40 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4622:	e7 e2       	ldi	r30, 0x27	; 39
    4624:	e9 15       	cp	r30, r9
    4626:	88 f4       	brcc	.+34     	; 0x464a <__stack+0x244b>
    4628:	22 20       	and	r2, r2
    462a:	01 f1       	breq	.+64     	; 0x466c <__stack+0x246d>
			{
				//USART_putstring("40C4 ");				// comment this out in final product
				vote_indicator_40 = 1;					// Indicating button 1 was pressed
    462c:	80 91 c8 08 	lds	r24, 0x08C8
    4630:	80 68       	ori	r24, 0x80	; 128
    4632:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat4--;
    4636:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 40);
				deactivate_category_buttons_and_save(button40_addr, 40);  // provide starting and ending buttons as arguments
    4638:	8e e4       	ldi	r24, 0x4E	; 78
    463a:	90 e0       	ldi	r25, 0x00	; 0
    463c:	68 e2       	ldi	r22, 0x28	; 40
    463e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4642:	56 c0       	rjmp	.+172    	; 0x46f0 <__stack+0x24f1>
			}
			else if((40 > category_size_4) && (40 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    4644:	f7 e2       	ldi	r31, 0x27	; 39
    4646:	f9 15       	cp	r31, r9
    4648:	88 f0       	brcs	.+34     	; 0x466c <__stack+0x246d>
    464a:	87 e2       	ldi	r24, 0x27	; 39
    464c:	8a 15       	cp	r24, r10
    464e:	88 f4       	brcc	.+34     	; 0x4672 <__stack+0x2473>
    4650:	33 20       	and	r3, r3
    4652:	01 f1       	breq	.+64     	; 0x4694 <__stack+0x2495>
			{
				//USART_putstring("40C5 ");				// comment this out in final product
				vote_indicator_40 = 1;					// Indicating button 1 was pressed
    4654:	80 91 c8 08 	lds	r24, 0x08C8
    4658:	80 68       	ori	r24, 0x80	; 128
    465a:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat5--;
    465e:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 40);
				deactivate_category_buttons_and_save(button40_addr, 40);  // provide starting and ending buttons as arguments
    4660:	8e e4       	ldi	r24, 0x4E	; 78
    4662:	90 e0       	ldi	r25, 0x00	; 0
    4664:	68 e2       	ldi	r22, 0x28	; 40
    4666:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    466a:	42 c0       	rjmp	.+132    	; 0x46f0 <__stack+0x24f1>
			}
			else if((40 > category_size_5) && (40 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    466c:	97 e2       	ldi	r25, 0x27	; 39
    466e:	9a 15       	cp	r25, r10
    4670:	88 f0       	brcs	.+34     	; 0x4694 <__stack+0x2495>
    4672:	a7 e2       	ldi	r26, 0x27	; 39
    4674:	a8 15       	cp	r26, r8
    4676:	88 f4       	brcc	.+34     	; 0x469a <__stack+0x249b>
    4678:	11 23       	and	r17, r17
    467a:	01 f1       	breq	.+64     	; 0x46bc <__stack+0x24bd>
			{
				//USART_putstring("40C6 ");				// comment this out in final product
				vote_indicator_40 = 1;					// Indicating button 1 was pressed
    467c:	80 91 c8 08 	lds	r24, 0x08C8
    4680:	80 68       	ori	r24, 0x80	; 128
    4682:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat6--;
    4686:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 40);
				deactivate_category_buttons_and_save(button40_addr, 40);  // provide starting and ending buttons as arguments
    4688:	8e e4       	ldi	r24, 0x4E	; 78
    468a:	90 e0       	ldi	r25, 0x00	; 0
    468c:	68 e2       	ldi	r22, 0x28	; 40
    468e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4692:	2e c0       	rjmp	.+92     	; 0x46f0 <__stack+0x24f1>
			}
			else if((40 > category_size_6) && (40 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4694:	b7 e2       	ldi	r27, 0x27	; 39
    4696:	b8 15       	cp	r27, r8
    4698:	88 f0       	brcs	.+34     	; 0x46bc <__stack+0x24bd>
    469a:	e7 e2       	ldi	r30, 0x27	; 39
    469c:	e6 15       	cp	r30, r6
    469e:	70 f4       	brcc	.+28     	; 0x46bc <__stack+0x24bd>
    46a0:	00 23       	and	r16, r16
    46a2:	61 f0       	breq	.+24     	; 0x46bc <__stack+0x24bd>
			{
				//USART_putstring("40C7 ");				// comment this out in final product
				vote_indicator_40 = 1;					// Indicating button 1 was pressed
    46a4:	80 91 c8 08 	lds	r24, 0x08C8
    46a8:	80 68       	ori	r24, 0x80	; 128
    46aa:	80 93 c8 08 	sts	0x08C8, r24
				no_of_votes_cat7--;
    46ae:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 40);
				deactivate_category_buttons_and_save(button40_addr, 40);  // provide starting and ending buttons as arguments
    46b0:	8e e4       	ldi	r24, 0x4E	; 78
    46b2:	90 e0       	ldi	r25, 0x00	; 0
    46b4:	68 e2       	ldi	r22, 0x28	; 40
    46b6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    46ba:	1a c0       	rjmp	.+52     	; 0x46f0 <__stack+0x24f1>
				//vote_indicator_40 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 40);
				//deactivate_category_buttons_and_save(button40_addr, 40);  // provide starting and ending buttons as arguments
			//}
			else if ((40 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    46bc:	80 91 64 05 	lds	r24, 0x0564
    46c0:	90 91 65 05 	lds	r25, 0x0565
    46c4:	88 32       	cpi	r24, 0x28	; 40
    46c6:	91 05       	cpc	r25, r1
    46c8:	98 f4       	brcc	.+38     	; 0x46f0 <__stack+0x24f1>
    46ca:	80 91 48 08 	lds	r24, 0x0848
    46ce:	88 23       	and	r24, r24
    46d0:	79 f0       	breq	.+30     	; 0x46f0 <__stack+0x24f1>
			{
				//USART_putstring("40G ");		// comment this out in final product
				vote_indicator_40 = 1;			// Indicating button 1 was pressed
    46d2:	80 91 c8 08 	lds	r24, 0x08C8
    46d6:	80 68       	ori	r24, 0x80	; 128
    46d8:	80 93 c8 08 	sts	0x08C8, r24
				deactivate_category_buttons_and_save(button40_addr, 40);
    46dc:	8e e4       	ldi	r24, 0x4E	; 78
    46de:	90 e0       	ldi	r25, 0x00	; 0
    46e0:	68 e2       	ldi	r22, 0x28	; 40
    46e2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 40);
				gen_vote_count--;
    46e6:	80 91 48 08 	lds	r24, 0x0848
    46ea:	81 50       	subi	r24, 0x01	; 1
    46ec:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x08)  && (41 <= candidate_count) && vote_indicator_41 == 0)
    46f0:	86 b1       	in	r24, 0x06	; 6
    46f2:	80 fd       	sbrc	r24, 0
    46f4:	8f c0       	rjmp	.+286    	; 0x4814 <__stack+0x2615>
    46f6:	86 b1       	in	r24, 0x06	; 6
    46f8:	81 fd       	sbrc	r24, 1
    46fa:	8c c0       	rjmp	.+280    	; 0x4814 <__stack+0x2615>
    46fc:	86 b1       	in	r24, 0x06	; 6
    46fe:	82 ff       	sbrs	r24, 2
    4700:	89 c0       	rjmp	.+274    	; 0x4814 <__stack+0x2615>
    4702:	86 b1       	in	r24, 0x06	; 6
    4704:	83 fd       	sbrc	r24, 3
    4706:	86 c0       	rjmp	.+268    	; 0x4814 <__stack+0x2615>
    4708:	83 b1       	in	r24, 0x03	; 3
    470a:	8f 70       	andi	r24, 0x0F	; 15
    470c:	88 30       	cpi	r24, 0x08	; 8
    470e:	09 f0       	breq	.+2      	; 0x4712 <__stack+0x2513>
    4710:	81 c0       	rjmp	.+258    	; 0x4814 <__stack+0x2615>
    4712:	80 91 f6 05 	lds	r24, 0x05F6
    4716:	89 32       	cpi	r24, 0x29	; 41
    4718:	08 f4       	brcc	.+2      	; 0x471c <__stack+0x251d>
    471a:	7c c0       	rjmp	.+248    	; 0x4814 <__stack+0x2615>
    471c:	80 91 ca 08 	lds	r24, 0x08CA
    4720:	80 fd       	sbrc	r24, 0
    4722:	78 c0       	rjmp	.+240    	; 0x4814 <__stack+0x2615>
		{
			if((41 > category_size_2) && (41 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    4724:	f8 e2       	ldi	r31, 0x28	; 40
    4726:	f7 15       	cp	r31, r7
    4728:	70 f4       	brcc	.+28     	; 0x4746 <__stack+0x2547>
    472a:	ff 20       	and	r15, r15
    472c:	e9 f0       	breq	.+58     	; 0x4768 <__stack+0x2569>
			{
				//USART_putstring("41C3 ");				// comment this out in final product
				vote_indicator_41 = 1;					// Indicating button 1 was pressed
    472e:	80 91 ca 08 	lds	r24, 0x08CA
    4732:	81 60       	ori	r24, 0x01	; 1
    4734:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat3--;
    4738:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 41);
				deactivate_category_buttons_and_save(button41_addr, 41);  // provide starting and ending buttons as arguments
    473a:	80 e5       	ldi	r24, 0x50	; 80
    473c:	90 e0       	ldi	r25, 0x00	; 0
    473e:	69 e2       	ldi	r22, 0x29	; 41
    4740:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4744:	67 c0       	rjmp	.+206    	; 0x4814 <__stack+0x2615>
			}
			else if((41 > category_size_3) && (41 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4746:	88 e2       	ldi	r24, 0x28	; 40
    4748:	89 15       	cp	r24, r9
    474a:	88 f4       	brcc	.+34     	; 0x476e <__stack+0x256f>
    474c:	22 20       	and	r2, r2
    474e:	01 f1       	breq	.+64     	; 0x4790 <__stack+0x2591>
			{
				//USART_putstring("41C4 ");				// comment this out in final product
				vote_indicator_41 = 1;					// Indicating button 1 was pressed
    4750:	80 91 ca 08 	lds	r24, 0x08CA
    4754:	81 60       	ori	r24, 0x01	; 1
    4756:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat4--;
    475a:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 41);
				deactivate_category_buttons_and_save(button41_addr, 41);  // provide starting and ending buttons as arguments
    475c:	80 e5       	ldi	r24, 0x50	; 80
    475e:	90 e0       	ldi	r25, 0x00	; 0
    4760:	69 e2       	ldi	r22, 0x29	; 41
    4762:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4766:	56 c0       	rjmp	.+172    	; 0x4814 <__stack+0x2615>
			}
			else if((41 > category_size_4) && (41 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    4768:	98 e2       	ldi	r25, 0x28	; 40
    476a:	99 15       	cp	r25, r9
    476c:	88 f0       	brcs	.+34     	; 0x4790 <__stack+0x2591>
    476e:	a8 e2       	ldi	r26, 0x28	; 40
    4770:	aa 15       	cp	r26, r10
    4772:	88 f4       	brcc	.+34     	; 0x4796 <__stack+0x2597>
    4774:	33 20       	and	r3, r3
    4776:	01 f1       	breq	.+64     	; 0x47b8 <__stack+0x25b9>
			{
				//USART_putstring("41C5 ");				// comment this out in final product
				vote_indicator_41 = 1;					// Indicating button 1 was pressed
    4778:	80 91 ca 08 	lds	r24, 0x08CA
    477c:	81 60       	ori	r24, 0x01	; 1
    477e:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat5--;
    4782:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 41);
				deactivate_category_buttons_and_save(button41_addr, 41);  // provide starting and ending buttons as arguments
    4784:	80 e5       	ldi	r24, 0x50	; 80
    4786:	90 e0       	ldi	r25, 0x00	; 0
    4788:	69 e2       	ldi	r22, 0x29	; 41
    478a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    478e:	42 c0       	rjmp	.+132    	; 0x4814 <__stack+0x2615>
			}
			else if((41 > category_size_5) && (41 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    4790:	b8 e2       	ldi	r27, 0x28	; 40
    4792:	ba 15       	cp	r27, r10
    4794:	88 f0       	brcs	.+34     	; 0x47b8 <__stack+0x25b9>
    4796:	e8 e2       	ldi	r30, 0x28	; 40
    4798:	e8 15       	cp	r30, r8
    479a:	88 f4       	brcc	.+34     	; 0x47be <__stack+0x25bf>
    479c:	11 23       	and	r17, r17
    479e:	01 f1       	breq	.+64     	; 0x47e0 <__stack+0x25e1>
			{
				//USART_putstring("41C6 ");				// comment this out in final product
				vote_indicator_41 = 1;					// Indicating button 1 was pressed
    47a0:	80 91 ca 08 	lds	r24, 0x08CA
    47a4:	81 60       	ori	r24, 0x01	; 1
    47a6:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat6--;
    47aa:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 41);
				deactivate_category_buttons_and_save(button41_addr, 41);  // provide starting and ending buttons as arguments
    47ac:	80 e5       	ldi	r24, 0x50	; 80
    47ae:	90 e0       	ldi	r25, 0x00	; 0
    47b0:	69 e2       	ldi	r22, 0x29	; 41
    47b2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    47b6:	2e c0       	rjmp	.+92     	; 0x4814 <__stack+0x2615>
			}
			else if((41 > category_size_6) && (41 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    47b8:	f8 e2       	ldi	r31, 0x28	; 40
    47ba:	f8 15       	cp	r31, r8
    47bc:	88 f0       	brcs	.+34     	; 0x47e0 <__stack+0x25e1>
    47be:	88 e2       	ldi	r24, 0x28	; 40
    47c0:	86 15       	cp	r24, r6
    47c2:	70 f4       	brcc	.+28     	; 0x47e0 <__stack+0x25e1>
    47c4:	00 23       	and	r16, r16
    47c6:	61 f0       	breq	.+24     	; 0x47e0 <__stack+0x25e1>
			{
				//USART_putstring("41C7 ");				// comment this out in final product
				vote_indicator_41 = 1;					// Indicating button 1 was pressed
    47c8:	80 91 ca 08 	lds	r24, 0x08CA
    47cc:	81 60       	ori	r24, 0x01	; 1
    47ce:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat7--;
    47d2:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 41);
				deactivate_category_buttons_and_save(button41_addr, 41);  // provide starting and ending buttons as arguments
    47d4:	80 e5       	ldi	r24, 0x50	; 80
    47d6:	90 e0       	ldi	r25, 0x00	; 0
    47d8:	69 e2       	ldi	r22, 0x29	; 41
    47da:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    47de:	1a c0       	rjmp	.+52     	; 0x4814 <__stack+0x2615>
				//vote_indicator_41 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 41);
				//deactivate_category_buttons_and_save(button41_addr, 41);  // provide starting and ending buttons as arguments
			//}
			else if ((41 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    47e0:	80 91 64 05 	lds	r24, 0x0564
    47e4:	90 91 65 05 	lds	r25, 0x0565
    47e8:	89 32       	cpi	r24, 0x29	; 41
    47ea:	91 05       	cpc	r25, r1
    47ec:	98 f4       	brcc	.+38     	; 0x4814 <__stack+0x2615>
    47ee:	80 91 48 08 	lds	r24, 0x0848
    47f2:	88 23       	and	r24, r24
    47f4:	79 f0       	breq	.+30     	; 0x4814 <__stack+0x2615>
			{
				//USART_putstring("41G ");		// comment this out in final product
				vote_indicator_41 = 1;			// Indicating button 1 was pressed
    47f6:	80 91 ca 08 	lds	r24, 0x08CA
    47fa:	81 60       	ori	r24, 0x01	; 1
    47fc:	80 93 ca 08 	sts	0x08CA, r24
				deactivate_category_buttons_and_save(button41_addr, 41);
    4800:	80 e5       	ldi	r24, 0x50	; 80
    4802:	90 e0       	ldi	r25, 0x00	; 0
    4804:	69 e2       	ldi	r22, 0x29	; 41
    4806:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 41);
				gen_vote_count--;
    480a:	80 91 48 08 	lds	r24, 0x0848
    480e:	81 50       	subi	r24, 0x01	; 1
    4810:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x09)  && (42 <= candidate_count) && vote_indicator_42 == 0)
    4814:	86 b1       	in	r24, 0x06	; 6
    4816:	80 fd       	sbrc	r24, 0
    4818:	8f c0       	rjmp	.+286    	; 0x4938 <__stack+0x2739>
    481a:	86 b1       	in	r24, 0x06	; 6
    481c:	81 fd       	sbrc	r24, 1
    481e:	8c c0       	rjmp	.+280    	; 0x4938 <__stack+0x2739>
    4820:	86 b1       	in	r24, 0x06	; 6
    4822:	82 ff       	sbrs	r24, 2
    4824:	89 c0       	rjmp	.+274    	; 0x4938 <__stack+0x2739>
    4826:	86 b1       	in	r24, 0x06	; 6
    4828:	83 fd       	sbrc	r24, 3
    482a:	86 c0       	rjmp	.+268    	; 0x4938 <__stack+0x2739>
    482c:	83 b1       	in	r24, 0x03	; 3
    482e:	8f 70       	andi	r24, 0x0F	; 15
    4830:	89 30       	cpi	r24, 0x09	; 9
    4832:	09 f0       	breq	.+2      	; 0x4836 <__stack+0x2637>
    4834:	81 c0       	rjmp	.+258    	; 0x4938 <__stack+0x2739>
    4836:	80 91 f6 05 	lds	r24, 0x05F6
    483a:	8a 32       	cpi	r24, 0x2A	; 42
    483c:	08 f4       	brcc	.+2      	; 0x4840 <__stack+0x2641>
    483e:	7c c0       	rjmp	.+248    	; 0x4938 <__stack+0x2739>
    4840:	80 91 ca 08 	lds	r24, 0x08CA
    4844:	81 fd       	sbrc	r24, 1
    4846:	78 c0       	rjmp	.+240    	; 0x4938 <__stack+0x2739>
		{
			if((42 > category_size_2) && (42 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    4848:	99 e2       	ldi	r25, 0x29	; 41
    484a:	97 15       	cp	r25, r7
    484c:	70 f4       	brcc	.+28     	; 0x486a <__stack+0x266b>
    484e:	ff 20       	and	r15, r15
    4850:	e9 f0       	breq	.+58     	; 0x488c <__stack+0x268d>
			{
				//USART_putstring("42C3 ");				// comment this out in final product
				vote_indicator_42 = 1;					// Indicating button 1 was pressed
    4852:	80 91 ca 08 	lds	r24, 0x08CA
    4856:	82 60       	ori	r24, 0x02	; 2
    4858:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat3--;
    485c:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 42);
				deactivate_category_buttons_and_save(button42_addr, 42);  // provide starting and ending buttons as arguments
    485e:	82 e5       	ldi	r24, 0x52	; 82
    4860:	90 e0       	ldi	r25, 0x00	; 0
    4862:	6a e2       	ldi	r22, 0x2A	; 42
    4864:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4868:	67 c0       	rjmp	.+206    	; 0x4938 <__stack+0x2739>
			}
			else if((42 > category_size_3) && (42 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    486a:	a9 e2       	ldi	r26, 0x29	; 41
    486c:	a9 15       	cp	r26, r9
    486e:	88 f4       	brcc	.+34     	; 0x4892 <__stack+0x2693>
    4870:	22 20       	and	r2, r2
    4872:	01 f1       	breq	.+64     	; 0x48b4 <__stack+0x26b5>
			{
				//USART_putstring("42C4 ");				// comment this out in final product
				vote_indicator_42 = 1;					// Indicating button 1 was pressed
    4874:	80 91 ca 08 	lds	r24, 0x08CA
    4878:	82 60       	ori	r24, 0x02	; 2
    487a:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat4--;
    487e:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 42);
				deactivate_category_buttons_and_save(button42_addr, 42);  // provide starting and ending buttons as arguments
    4880:	82 e5       	ldi	r24, 0x52	; 82
    4882:	90 e0       	ldi	r25, 0x00	; 0
    4884:	6a e2       	ldi	r22, 0x2A	; 42
    4886:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    488a:	56 c0       	rjmp	.+172    	; 0x4938 <__stack+0x2739>
			}
			else if((42 > category_size_4) && (42 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    488c:	b9 e2       	ldi	r27, 0x29	; 41
    488e:	b9 15       	cp	r27, r9
    4890:	88 f0       	brcs	.+34     	; 0x48b4 <__stack+0x26b5>
    4892:	e9 e2       	ldi	r30, 0x29	; 41
    4894:	ea 15       	cp	r30, r10
    4896:	88 f4       	brcc	.+34     	; 0x48ba <__stack+0x26bb>
    4898:	33 20       	and	r3, r3
    489a:	01 f1       	breq	.+64     	; 0x48dc <__stack+0x26dd>
			{
				//USART_putstring("42C5 ");				// comment this out in final product
				vote_indicator_42 = 1;					// Indicating button 1 was pressed
    489c:	80 91 ca 08 	lds	r24, 0x08CA
    48a0:	82 60       	ori	r24, 0x02	; 2
    48a2:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat5--;
    48a6:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 42);
				deactivate_category_buttons_and_save(button42_addr, 42);  // provide starting and ending buttons as arguments
    48a8:	82 e5       	ldi	r24, 0x52	; 82
    48aa:	90 e0       	ldi	r25, 0x00	; 0
    48ac:	6a e2       	ldi	r22, 0x2A	; 42
    48ae:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    48b2:	42 c0       	rjmp	.+132    	; 0x4938 <__stack+0x2739>
			}
			else if((42 > category_size_5) && (42 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    48b4:	f9 e2       	ldi	r31, 0x29	; 41
    48b6:	fa 15       	cp	r31, r10
    48b8:	88 f0       	brcs	.+34     	; 0x48dc <__stack+0x26dd>
    48ba:	89 e2       	ldi	r24, 0x29	; 41
    48bc:	88 15       	cp	r24, r8
    48be:	88 f4       	brcc	.+34     	; 0x48e2 <__stack+0x26e3>
    48c0:	11 23       	and	r17, r17
    48c2:	01 f1       	breq	.+64     	; 0x4904 <__stack+0x2705>
			{
				//USART_putstring("42C6 ");				// comment this out in final product
				vote_indicator_42 = 1;					// Indicating button 1 was pressed
    48c4:	80 91 ca 08 	lds	r24, 0x08CA
    48c8:	82 60       	ori	r24, 0x02	; 2
    48ca:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat6--;
    48ce:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 42);
				deactivate_category_buttons_and_save(button42_addr, 42);  // provide starting and ending buttons as arguments
    48d0:	82 e5       	ldi	r24, 0x52	; 82
    48d2:	90 e0       	ldi	r25, 0x00	; 0
    48d4:	6a e2       	ldi	r22, 0x2A	; 42
    48d6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    48da:	2e c0       	rjmp	.+92     	; 0x4938 <__stack+0x2739>
			}
			else if((42 > category_size_6) && (42 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    48dc:	99 e2       	ldi	r25, 0x29	; 41
    48de:	98 15       	cp	r25, r8
    48e0:	88 f0       	brcs	.+34     	; 0x4904 <__stack+0x2705>
    48e2:	a9 e2       	ldi	r26, 0x29	; 41
    48e4:	a6 15       	cp	r26, r6
    48e6:	70 f4       	brcc	.+28     	; 0x4904 <__stack+0x2705>
    48e8:	00 23       	and	r16, r16
    48ea:	61 f0       	breq	.+24     	; 0x4904 <__stack+0x2705>
			{
				//USART_putstring("42C7 ");				// comment this out in final product
				vote_indicator_42 = 1;					// Indicating button 1 was pressed
    48ec:	80 91 ca 08 	lds	r24, 0x08CA
    48f0:	82 60       	ori	r24, 0x02	; 2
    48f2:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat7--;
    48f6:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 42);
				deactivate_category_buttons_and_save(button42_addr, 42);  // provide starting and ending buttons as arguments
    48f8:	82 e5       	ldi	r24, 0x52	; 82
    48fa:	90 e0       	ldi	r25, 0x00	; 0
    48fc:	6a e2       	ldi	r22, 0x2A	; 42
    48fe:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4902:	1a c0       	rjmp	.+52     	; 0x4938 <__stack+0x2739>
				//vote_indicator_42 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 42);
				//deactivate_category_buttons_and_save(button42_addr, 42);  // provide starting and ending buttons as arguments
			//}
			else if ((42 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4904:	80 91 64 05 	lds	r24, 0x0564
    4908:	90 91 65 05 	lds	r25, 0x0565
    490c:	8a 32       	cpi	r24, 0x2A	; 42
    490e:	91 05       	cpc	r25, r1
    4910:	98 f4       	brcc	.+38     	; 0x4938 <__stack+0x2739>
    4912:	80 91 48 08 	lds	r24, 0x0848
    4916:	88 23       	and	r24, r24
    4918:	79 f0       	breq	.+30     	; 0x4938 <__stack+0x2739>
			{
				//USART_putstring("42G ");		// comment this out in final product
				vote_indicator_42 = 1;			// Indicating button 1 was pressed
    491a:	80 91 ca 08 	lds	r24, 0x08CA
    491e:	82 60       	ori	r24, 0x02	; 2
    4920:	80 93 ca 08 	sts	0x08CA, r24
				deactivate_category_buttons_and_save(button42_addr, 42);
    4924:	82 e5       	ldi	r24, 0x52	; 82
    4926:	90 e0       	ldi	r25, 0x00	; 0
    4928:	6a e2       	ldi	r22, 0x2A	; 42
    492a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 42);
				gen_vote_count--;
    492e:	80 91 48 08 	lds	r24, 0x0848
    4932:	81 50       	subi	r24, 0x01	; 1
    4934:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0A)  && (43 <= candidate_count) && vote_indicator_43 == 0)
    4938:	86 b1       	in	r24, 0x06	; 6
    493a:	80 fd       	sbrc	r24, 0
    493c:	8f c0       	rjmp	.+286    	; 0x4a5c <__stack+0x285d>
    493e:	86 b1       	in	r24, 0x06	; 6
    4940:	81 fd       	sbrc	r24, 1
    4942:	8c c0       	rjmp	.+280    	; 0x4a5c <__stack+0x285d>
    4944:	86 b1       	in	r24, 0x06	; 6
    4946:	82 ff       	sbrs	r24, 2
    4948:	89 c0       	rjmp	.+274    	; 0x4a5c <__stack+0x285d>
    494a:	86 b1       	in	r24, 0x06	; 6
    494c:	83 fd       	sbrc	r24, 3
    494e:	86 c0       	rjmp	.+268    	; 0x4a5c <__stack+0x285d>
    4950:	83 b1       	in	r24, 0x03	; 3
    4952:	8f 70       	andi	r24, 0x0F	; 15
    4954:	8a 30       	cpi	r24, 0x0A	; 10
    4956:	09 f0       	breq	.+2      	; 0x495a <__stack+0x275b>
    4958:	81 c0       	rjmp	.+258    	; 0x4a5c <__stack+0x285d>
    495a:	80 91 f6 05 	lds	r24, 0x05F6
    495e:	8b 32       	cpi	r24, 0x2B	; 43
    4960:	08 f4       	brcc	.+2      	; 0x4964 <__stack+0x2765>
    4962:	7c c0       	rjmp	.+248    	; 0x4a5c <__stack+0x285d>
    4964:	80 91 ca 08 	lds	r24, 0x08CA
    4968:	82 fd       	sbrc	r24, 2
    496a:	78 c0       	rjmp	.+240    	; 0x4a5c <__stack+0x285d>
		{
			if((43 > category_size_2) && (43 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    496c:	ba e2       	ldi	r27, 0x2A	; 42
    496e:	b7 15       	cp	r27, r7
    4970:	70 f4       	brcc	.+28     	; 0x498e <__stack+0x278f>
    4972:	ff 20       	and	r15, r15
    4974:	e9 f0       	breq	.+58     	; 0x49b0 <__stack+0x27b1>
			{
				//USART_putstring("43C3 ");				// comment this out in final product
				vote_indicator_43 = 1;					// Indicating button 1 was pressed
    4976:	80 91 ca 08 	lds	r24, 0x08CA
    497a:	84 60       	ori	r24, 0x04	; 4
    497c:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat3--;
    4980:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 43);
				deactivate_category_buttons_and_save(button43_addr, 43);  // provide starting and ending buttons as arguments
    4982:	84 e5       	ldi	r24, 0x54	; 84
    4984:	90 e0       	ldi	r25, 0x00	; 0
    4986:	6b e2       	ldi	r22, 0x2B	; 43
    4988:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    498c:	67 c0       	rjmp	.+206    	; 0x4a5c <__stack+0x285d>
			}
			else if((43 > category_size_3) && (43 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    498e:	ea e2       	ldi	r30, 0x2A	; 42
    4990:	e9 15       	cp	r30, r9
    4992:	88 f4       	brcc	.+34     	; 0x49b6 <__stack+0x27b7>
    4994:	22 20       	and	r2, r2
    4996:	01 f1       	breq	.+64     	; 0x49d8 <__stack+0x27d9>
			{
				//USART_putstring("43C4 ");				// comment this out in final product
				vote_indicator_43 = 1;					// Indicating button 1 was pressed
    4998:	80 91 ca 08 	lds	r24, 0x08CA
    499c:	84 60       	ori	r24, 0x04	; 4
    499e:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat4--;
    49a2:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 43);
				deactivate_category_buttons_and_save(button43_addr, 43);  // provide starting and ending buttons as arguments
    49a4:	84 e5       	ldi	r24, 0x54	; 84
    49a6:	90 e0       	ldi	r25, 0x00	; 0
    49a8:	6b e2       	ldi	r22, 0x2B	; 43
    49aa:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    49ae:	56 c0       	rjmp	.+172    	; 0x4a5c <__stack+0x285d>
			}
			else if((43 > category_size_4) && (43 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    49b0:	fa e2       	ldi	r31, 0x2A	; 42
    49b2:	f9 15       	cp	r31, r9
    49b4:	88 f0       	brcs	.+34     	; 0x49d8 <__stack+0x27d9>
    49b6:	8a e2       	ldi	r24, 0x2A	; 42
    49b8:	8a 15       	cp	r24, r10
    49ba:	88 f4       	brcc	.+34     	; 0x49de <__stack+0x27df>
    49bc:	33 20       	and	r3, r3
    49be:	01 f1       	breq	.+64     	; 0x4a00 <__stack+0x2801>
			{
				//USART_putstring("43C5 ");				// comment this out in final product
				vote_indicator_43 = 1;					// Indicating button 1 was pressed
    49c0:	80 91 ca 08 	lds	r24, 0x08CA
    49c4:	84 60       	ori	r24, 0x04	; 4
    49c6:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat5--;
    49ca:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 43);
				deactivate_category_buttons_and_save(button43_addr, 43);  // provide starting and ending buttons as arguments
    49cc:	84 e5       	ldi	r24, 0x54	; 84
    49ce:	90 e0       	ldi	r25, 0x00	; 0
    49d0:	6b e2       	ldi	r22, 0x2B	; 43
    49d2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    49d6:	42 c0       	rjmp	.+132    	; 0x4a5c <__stack+0x285d>
			}
			else if((43 > category_size_5) && (43 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    49d8:	9a e2       	ldi	r25, 0x2A	; 42
    49da:	9a 15       	cp	r25, r10
    49dc:	88 f0       	brcs	.+34     	; 0x4a00 <__stack+0x2801>
    49de:	aa e2       	ldi	r26, 0x2A	; 42
    49e0:	a8 15       	cp	r26, r8
    49e2:	88 f4       	brcc	.+34     	; 0x4a06 <__stack+0x2807>
    49e4:	11 23       	and	r17, r17
    49e6:	01 f1       	breq	.+64     	; 0x4a28 <__stack+0x2829>
			{
				//USART_putstring("43C6 ");				// comment this out in final product
				vote_indicator_43 = 1;					// Indicating button 1 was pressed
    49e8:	80 91 ca 08 	lds	r24, 0x08CA
    49ec:	84 60       	ori	r24, 0x04	; 4
    49ee:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat6--;
    49f2:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 43);
				deactivate_category_buttons_and_save(button43_addr, 43);  // provide starting and ending buttons as arguments
    49f4:	84 e5       	ldi	r24, 0x54	; 84
    49f6:	90 e0       	ldi	r25, 0x00	; 0
    49f8:	6b e2       	ldi	r22, 0x2B	; 43
    49fa:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    49fe:	2e c0       	rjmp	.+92     	; 0x4a5c <__stack+0x285d>
			}
			else if((43 > category_size_6) && (43 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4a00:	ba e2       	ldi	r27, 0x2A	; 42
    4a02:	b8 15       	cp	r27, r8
    4a04:	88 f0       	brcs	.+34     	; 0x4a28 <__stack+0x2829>
    4a06:	ea e2       	ldi	r30, 0x2A	; 42
    4a08:	e6 15       	cp	r30, r6
    4a0a:	70 f4       	brcc	.+28     	; 0x4a28 <__stack+0x2829>
    4a0c:	00 23       	and	r16, r16
    4a0e:	61 f0       	breq	.+24     	; 0x4a28 <__stack+0x2829>
			{
				//USART_putstring("43C7 ");				// comment this out in final product
				vote_indicator_43 = 1;					// Indicating button 1 was pressed
    4a10:	80 91 ca 08 	lds	r24, 0x08CA
    4a14:	84 60       	ori	r24, 0x04	; 4
    4a16:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat7--;
    4a1a:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 43);
				deactivate_category_buttons_and_save(button43_addr, 43);  // provide starting and ending buttons as arguments
    4a1c:	84 e5       	ldi	r24, 0x54	; 84
    4a1e:	90 e0       	ldi	r25, 0x00	; 0
    4a20:	6b e2       	ldi	r22, 0x2B	; 43
    4a22:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4a26:	1a c0       	rjmp	.+52     	; 0x4a5c <__stack+0x285d>
				//vote_indicator_43 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 43);
				//deactivate_category_buttons_and_save(button43_addr, 43);  // provide starting and ending buttons as arguments
			//}
			else if ((43 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4a28:	80 91 64 05 	lds	r24, 0x0564
    4a2c:	90 91 65 05 	lds	r25, 0x0565
    4a30:	8b 32       	cpi	r24, 0x2B	; 43
    4a32:	91 05       	cpc	r25, r1
    4a34:	98 f4       	brcc	.+38     	; 0x4a5c <__stack+0x285d>
    4a36:	80 91 48 08 	lds	r24, 0x0848
    4a3a:	88 23       	and	r24, r24
    4a3c:	79 f0       	breq	.+30     	; 0x4a5c <__stack+0x285d>
			{
				//USART_putstring("43G ");		// comment this out in final product
				vote_indicator_43 = 1;			// Indicating button 1 was pressed
    4a3e:	80 91 ca 08 	lds	r24, 0x08CA
    4a42:	84 60       	ori	r24, 0x04	; 4
    4a44:	80 93 ca 08 	sts	0x08CA, r24
				deactivate_category_buttons_and_save(button43_addr, 43);
    4a48:	84 e5       	ldi	r24, 0x54	; 84
    4a4a:	90 e0       	ldi	r25, 0x00	; 0
    4a4c:	6b e2       	ldi	r22, 0x2B	; 43
    4a4e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 43);
				gen_vote_count--;
    4a52:	80 91 48 08 	lds	r24, 0x0848
    4a56:	81 50       	subi	r24, 0x01	; 1
    4a58:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0B)  && (44 <= candidate_count) && vote_indicator_44 == 0)
    4a5c:	86 b1       	in	r24, 0x06	; 6
    4a5e:	80 fd       	sbrc	r24, 0
    4a60:	8f c0       	rjmp	.+286    	; 0x4b80 <__stack+0x2981>
    4a62:	86 b1       	in	r24, 0x06	; 6
    4a64:	81 fd       	sbrc	r24, 1
    4a66:	8c c0       	rjmp	.+280    	; 0x4b80 <__stack+0x2981>
    4a68:	86 b1       	in	r24, 0x06	; 6
    4a6a:	82 ff       	sbrs	r24, 2
    4a6c:	89 c0       	rjmp	.+274    	; 0x4b80 <__stack+0x2981>
    4a6e:	86 b1       	in	r24, 0x06	; 6
    4a70:	83 fd       	sbrc	r24, 3
    4a72:	86 c0       	rjmp	.+268    	; 0x4b80 <__stack+0x2981>
    4a74:	83 b1       	in	r24, 0x03	; 3
    4a76:	8f 70       	andi	r24, 0x0F	; 15
    4a78:	8b 30       	cpi	r24, 0x0B	; 11
    4a7a:	09 f0       	breq	.+2      	; 0x4a7e <__stack+0x287f>
    4a7c:	81 c0       	rjmp	.+258    	; 0x4b80 <__stack+0x2981>
    4a7e:	80 91 f6 05 	lds	r24, 0x05F6
    4a82:	8c 32       	cpi	r24, 0x2C	; 44
    4a84:	08 f4       	brcc	.+2      	; 0x4a88 <__stack+0x2889>
    4a86:	7c c0       	rjmp	.+248    	; 0x4b80 <__stack+0x2981>
    4a88:	80 91 ca 08 	lds	r24, 0x08CA
    4a8c:	83 fd       	sbrc	r24, 3
    4a8e:	78 c0       	rjmp	.+240    	; 0x4b80 <__stack+0x2981>
		{
			if((44 > category_size_2) && (44 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    4a90:	fb e2       	ldi	r31, 0x2B	; 43
    4a92:	f7 15       	cp	r31, r7
    4a94:	70 f4       	brcc	.+28     	; 0x4ab2 <__stack+0x28b3>
    4a96:	ff 20       	and	r15, r15
    4a98:	e9 f0       	breq	.+58     	; 0x4ad4 <__stack+0x28d5>
			{
				//USART_putstring("44C3 ");				// comment this out in final product
				vote_indicator_44 = 1;					// Indicating button 1 was pressed
    4a9a:	80 91 ca 08 	lds	r24, 0x08CA
    4a9e:	88 60       	ori	r24, 0x08	; 8
    4aa0:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat3--;
    4aa4:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 44);
				deactivate_category_buttons_and_save(button44_addr, 44);  // provide starting and ending buttons as arguments
    4aa6:	86 e5       	ldi	r24, 0x56	; 86
    4aa8:	90 e0       	ldi	r25, 0x00	; 0
    4aaa:	6c e2       	ldi	r22, 0x2C	; 44
    4aac:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4ab0:	67 c0       	rjmp	.+206    	; 0x4b80 <__stack+0x2981>
			}
			else if((44 > category_size_3) && (44 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4ab2:	8b e2       	ldi	r24, 0x2B	; 43
    4ab4:	89 15       	cp	r24, r9
    4ab6:	88 f4       	brcc	.+34     	; 0x4ada <__stack+0x28db>
    4ab8:	22 20       	and	r2, r2
    4aba:	01 f1       	breq	.+64     	; 0x4afc <__stack+0x28fd>
			{
				//USART_putstring("44C4 ");				// comment this out in final product
				vote_indicator_44 = 1;					// Indicating button 1 was pressed
    4abc:	80 91 ca 08 	lds	r24, 0x08CA
    4ac0:	88 60       	ori	r24, 0x08	; 8
    4ac2:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat4--;
    4ac6:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 44);
				deactivate_category_buttons_and_save(button44_addr, 44);  // provide starting and ending buttons as arguments
    4ac8:	86 e5       	ldi	r24, 0x56	; 86
    4aca:	90 e0       	ldi	r25, 0x00	; 0
    4acc:	6c e2       	ldi	r22, 0x2C	; 44
    4ace:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4ad2:	56 c0       	rjmp	.+172    	; 0x4b80 <__stack+0x2981>
			}
			else if((44 > category_size_4) && (44 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    4ad4:	9b e2       	ldi	r25, 0x2B	; 43
    4ad6:	99 15       	cp	r25, r9
    4ad8:	88 f0       	brcs	.+34     	; 0x4afc <__stack+0x28fd>
    4ada:	ab e2       	ldi	r26, 0x2B	; 43
    4adc:	aa 15       	cp	r26, r10
    4ade:	88 f4       	brcc	.+34     	; 0x4b02 <__stack+0x2903>
    4ae0:	33 20       	and	r3, r3
    4ae2:	01 f1       	breq	.+64     	; 0x4b24 <__stack+0x2925>
			{
				//USART_putstring("44C5 ");				// comment this out in final product
				vote_indicator_44 = 1;					// Indicating button 1 was pressed
    4ae4:	80 91 ca 08 	lds	r24, 0x08CA
    4ae8:	88 60       	ori	r24, 0x08	; 8
    4aea:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat5--;
    4aee:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 44);
				deactivate_category_buttons_and_save(button44_addr, 44);  // provide starting and ending buttons as arguments
    4af0:	86 e5       	ldi	r24, 0x56	; 86
    4af2:	90 e0       	ldi	r25, 0x00	; 0
    4af4:	6c e2       	ldi	r22, 0x2C	; 44
    4af6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4afa:	42 c0       	rjmp	.+132    	; 0x4b80 <__stack+0x2981>
			}
			else if((44 > category_size_5) && (44 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    4afc:	bb e2       	ldi	r27, 0x2B	; 43
    4afe:	ba 15       	cp	r27, r10
    4b00:	88 f0       	brcs	.+34     	; 0x4b24 <__stack+0x2925>
    4b02:	eb e2       	ldi	r30, 0x2B	; 43
    4b04:	e8 15       	cp	r30, r8
    4b06:	88 f4       	brcc	.+34     	; 0x4b2a <__stack+0x292b>
    4b08:	11 23       	and	r17, r17
    4b0a:	01 f1       	breq	.+64     	; 0x4b4c <__stack+0x294d>
			{
				//USART_putstring("44C6 ");				// comment this out in final product
				vote_indicator_44 = 1;					// Indicating button 1 was pressed
    4b0c:	80 91 ca 08 	lds	r24, 0x08CA
    4b10:	88 60       	ori	r24, 0x08	; 8
    4b12:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat6--;
    4b16:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 44);
				deactivate_category_buttons_and_save(button44_addr, 44);  // provide starting and ending buttons as arguments
    4b18:	86 e5       	ldi	r24, 0x56	; 86
    4b1a:	90 e0       	ldi	r25, 0x00	; 0
    4b1c:	6c e2       	ldi	r22, 0x2C	; 44
    4b1e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4b22:	2e c0       	rjmp	.+92     	; 0x4b80 <__stack+0x2981>
			}
			else if((44 > category_size_6) && (44 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4b24:	fb e2       	ldi	r31, 0x2B	; 43
    4b26:	f8 15       	cp	r31, r8
    4b28:	88 f0       	brcs	.+34     	; 0x4b4c <__stack+0x294d>
    4b2a:	8b e2       	ldi	r24, 0x2B	; 43
    4b2c:	86 15       	cp	r24, r6
    4b2e:	70 f4       	brcc	.+28     	; 0x4b4c <__stack+0x294d>
    4b30:	00 23       	and	r16, r16
    4b32:	61 f0       	breq	.+24     	; 0x4b4c <__stack+0x294d>
			{
				//USART_putstring("44C7 ");				// comment this out in final product
				vote_indicator_44 = 1;					// Indicating button 1 was pressed
    4b34:	80 91 ca 08 	lds	r24, 0x08CA
    4b38:	88 60       	ori	r24, 0x08	; 8
    4b3a:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat7--;
    4b3e:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 44);
				deactivate_category_buttons_and_save(button44_addr, 44);  // provide starting and ending buttons as arguments
    4b40:	86 e5       	ldi	r24, 0x56	; 86
    4b42:	90 e0       	ldi	r25, 0x00	; 0
    4b44:	6c e2       	ldi	r22, 0x2C	; 44
    4b46:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4b4a:	1a c0       	rjmp	.+52     	; 0x4b80 <__stack+0x2981>
				//vote_indicator_44 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 44);
				//deactivate_category_buttons_and_save(button44_addr, 44);  // provide starting and ending buttons as arguments
			//}
			else if ((44 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4b4c:	80 91 64 05 	lds	r24, 0x0564
    4b50:	90 91 65 05 	lds	r25, 0x0565
    4b54:	8c 32       	cpi	r24, 0x2C	; 44
    4b56:	91 05       	cpc	r25, r1
    4b58:	98 f4       	brcc	.+38     	; 0x4b80 <__stack+0x2981>
    4b5a:	80 91 48 08 	lds	r24, 0x0848
    4b5e:	88 23       	and	r24, r24
    4b60:	79 f0       	breq	.+30     	; 0x4b80 <__stack+0x2981>
			{
				//USART_putstring("44G ");		// comment this out in final product
				vote_indicator_44 = 1;			// Indicating button 1 was pressed
    4b62:	80 91 ca 08 	lds	r24, 0x08CA
    4b66:	88 60       	ori	r24, 0x08	; 8
    4b68:	80 93 ca 08 	sts	0x08CA, r24
				deactivate_category_buttons_and_save(button44_addr, 44);
    4b6c:	86 e5       	ldi	r24, 0x56	; 86
    4b6e:	90 e0       	ldi	r25, 0x00	; 0
    4b70:	6c e2       	ldi	r22, 0x2C	; 44
    4b72:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 44);
				gen_vote_count--;
    4b76:	80 91 48 08 	lds	r24, 0x0848
    4b7a:	81 50       	subi	r24, 0x01	; 1
    4b7c:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0C)  && (45 <= candidate_count) && vote_indicator_45 == 0)
    4b80:	86 b1       	in	r24, 0x06	; 6
    4b82:	80 fd       	sbrc	r24, 0
    4b84:	8f c0       	rjmp	.+286    	; 0x4ca4 <__stack+0x2aa5>
    4b86:	86 b1       	in	r24, 0x06	; 6
    4b88:	81 fd       	sbrc	r24, 1
    4b8a:	8c c0       	rjmp	.+280    	; 0x4ca4 <__stack+0x2aa5>
    4b8c:	86 b1       	in	r24, 0x06	; 6
    4b8e:	82 ff       	sbrs	r24, 2
    4b90:	89 c0       	rjmp	.+274    	; 0x4ca4 <__stack+0x2aa5>
    4b92:	86 b1       	in	r24, 0x06	; 6
    4b94:	83 fd       	sbrc	r24, 3
    4b96:	86 c0       	rjmp	.+268    	; 0x4ca4 <__stack+0x2aa5>
    4b98:	83 b1       	in	r24, 0x03	; 3
    4b9a:	8f 70       	andi	r24, 0x0F	; 15
    4b9c:	8c 30       	cpi	r24, 0x0C	; 12
    4b9e:	09 f0       	breq	.+2      	; 0x4ba2 <__stack+0x29a3>
    4ba0:	81 c0       	rjmp	.+258    	; 0x4ca4 <__stack+0x2aa5>
    4ba2:	80 91 f6 05 	lds	r24, 0x05F6
    4ba6:	8d 32       	cpi	r24, 0x2D	; 45
    4ba8:	08 f4       	brcc	.+2      	; 0x4bac <__stack+0x29ad>
    4baa:	7c c0       	rjmp	.+248    	; 0x4ca4 <__stack+0x2aa5>
    4bac:	80 91 ca 08 	lds	r24, 0x08CA
    4bb0:	84 fd       	sbrc	r24, 4
    4bb2:	78 c0       	rjmp	.+240    	; 0x4ca4 <__stack+0x2aa5>
		{
			if((45 > category_size_2) && (45 <= category_size_3) && (no_of_votes_cat3 != 0x00))				// Mask out the MSB nibble.
    4bb4:	9c e2       	ldi	r25, 0x2C	; 44
    4bb6:	97 15       	cp	r25, r7
    4bb8:	70 f4       	brcc	.+28     	; 0x4bd6 <__stack+0x29d7>
    4bba:	ff 20       	and	r15, r15
    4bbc:	e9 f0       	breq	.+58     	; 0x4bf8 <__stack+0x29f9>
			{
				//USART_putstring("45C3 ");				// comment this out in final product
				vote_indicator_45 = 1;					// Indicating button 1 was pressed
    4bbe:	80 91 ca 08 	lds	r24, 0x08CA
    4bc2:	80 61       	ori	r24, 0x10	; 16
    4bc4:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat3--;
    4bc8:	fa 94       	dec	r15
				//i2c_send_byte(PIC_DEV_ADDR, 45);
				deactivate_category_buttons_and_save(button45_addr, 45);  // provide starting and ending buttons as arguments
    4bca:	88 e5       	ldi	r24, 0x58	; 88
    4bcc:	90 e0       	ldi	r25, 0x00	; 0
    4bce:	6d e2       	ldi	r22, 0x2D	; 45
    4bd0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4bd4:	67 c0       	rjmp	.+206    	; 0x4ca4 <__stack+0x2aa5>
			}
			else if((45 > category_size_3) && (45 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4bd6:	ac e2       	ldi	r26, 0x2C	; 44
    4bd8:	a9 15       	cp	r26, r9
    4bda:	88 f4       	brcc	.+34     	; 0x4bfe <__stack+0x29ff>
    4bdc:	22 20       	and	r2, r2
    4bde:	01 f1       	breq	.+64     	; 0x4c20 <__stack+0x2a21>
			{
				//USART_putstring("45C4 ");				// comment this out in final product
				vote_indicator_45 = 1;					// Indicating button 1 was pressed
    4be0:	80 91 ca 08 	lds	r24, 0x08CA
    4be4:	80 61       	ori	r24, 0x10	; 16
    4be6:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat4--;
    4bea:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 45);
				deactivate_category_buttons_and_save(button45_addr, 45);  // provide starting and ending buttons as arguments
    4bec:	88 e5       	ldi	r24, 0x58	; 88
    4bee:	90 e0       	ldi	r25, 0x00	; 0
    4bf0:	6d e2       	ldi	r22, 0x2D	; 45
    4bf2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4bf6:	56 c0       	rjmp	.+172    	; 0x4ca4 <__stack+0x2aa5>
			}
			else if((45 > category_size_4) && (45 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    4bf8:	bc e2       	ldi	r27, 0x2C	; 44
    4bfa:	b9 15       	cp	r27, r9
    4bfc:	88 f0       	brcs	.+34     	; 0x4c20 <__stack+0x2a21>
    4bfe:	ec e2       	ldi	r30, 0x2C	; 44
    4c00:	ea 15       	cp	r30, r10
    4c02:	88 f4       	brcc	.+34     	; 0x4c26 <__stack+0x2a27>
    4c04:	33 20       	and	r3, r3
    4c06:	01 f1       	breq	.+64     	; 0x4c48 <__stack+0x2a49>
			{
				//USART_putstring("45C5 ");				// comment this out in final product
				vote_indicator_45 = 1;					// Indicating button 1 was pressed
    4c08:	80 91 ca 08 	lds	r24, 0x08CA
    4c0c:	80 61       	ori	r24, 0x10	; 16
    4c0e:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat5--;
    4c12:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 45);
				deactivate_category_buttons_and_save(button45_addr, 45);  // provide starting and ending buttons as arguments
    4c14:	88 e5       	ldi	r24, 0x58	; 88
    4c16:	90 e0       	ldi	r25, 0x00	; 0
    4c18:	6d e2       	ldi	r22, 0x2D	; 45
    4c1a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4c1e:	42 c0       	rjmp	.+132    	; 0x4ca4 <__stack+0x2aa5>
			}
			else if((45 > category_size_5) && (45 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    4c20:	fc e2       	ldi	r31, 0x2C	; 44
    4c22:	fa 15       	cp	r31, r10
    4c24:	88 f0       	brcs	.+34     	; 0x4c48 <__stack+0x2a49>
    4c26:	8c e2       	ldi	r24, 0x2C	; 44
    4c28:	88 15       	cp	r24, r8
    4c2a:	88 f4       	brcc	.+34     	; 0x4c4e <__stack+0x2a4f>
    4c2c:	11 23       	and	r17, r17
    4c2e:	01 f1       	breq	.+64     	; 0x4c70 <__stack+0x2a71>
			{
				//USART_putstring("45C6 ");				// comment this out in final pro6uct
				vote_indicator_45 = 1;					// Indicating button 1 was pressed
    4c30:	80 91 ca 08 	lds	r24, 0x08CA
    4c34:	80 61       	ori	r24, 0x10	; 16
    4c36:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat6--;
    4c3a:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 45);
				deactivate_category_buttons_and_save(button45_addr, 45);  // provide starting and ending buttons as arguments
    4c3c:	88 e5       	ldi	r24, 0x58	; 88
    4c3e:	90 e0       	ldi	r25, 0x00	; 0
    4c40:	6d e2       	ldi	r22, 0x2D	; 45
    4c42:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4c46:	2e c0       	rjmp	.+92     	; 0x4ca4 <__stack+0x2aa5>
			}
			else if((45 > category_size_6) && (45 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4c48:	9c e2       	ldi	r25, 0x2C	; 44
    4c4a:	98 15       	cp	r25, r8
    4c4c:	88 f0       	brcs	.+34     	; 0x4c70 <__stack+0x2a71>
    4c4e:	ac e2       	ldi	r26, 0x2C	; 44
    4c50:	a6 15       	cp	r26, r6
    4c52:	70 f4       	brcc	.+28     	; 0x4c70 <__stack+0x2a71>
    4c54:	00 23       	and	r16, r16
    4c56:	61 f0       	breq	.+24     	; 0x4c70 <__stack+0x2a71>
			{
				//USART_putstring("45C7 ");				// comment this out in final pro6uct
				vote_indicator_45 = 1;					// Indicating button 1 was pressed
    4c58:	80 91 ca 08 	lds	r24, 0x08CA
    4c5c:	80 61       	ori	r24, 0x10	; 16
    4c5e:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat7--;
    4c62:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 45);
				deactivate_category_buttons_and_save(button45_addr, 45);  // provide starting and ending buttons as arguments
    4c64:	88 e5       	ldi	r24, 0x58	; 88
    4c66:	90 e0       	ldi	r25, 0x00	; 0
    4c68:	6d e2       	ldi	r22, 0x2D	; 45
    4c6a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4c6e:	1a c0       	rjmp	.+52     	; 0x4ca4 <__stack+0x2aa5>
				//vote_indicator_45 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 45);
				//deactivate_category_buttons_and_save(button45_addr, 45);  // provide starting and ending buttons as arguments
			//}
			else if ((45 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4c70:	80 91 64 05 	lds	r24, 0x0564
    4c74:	90 91 65 05 	lds	r25, 0x0565
    4c78:	8d 32       	cpi	r24, 0x2D	; 45
    4c7a:	91 05       	cpc	r25, r1
    4c7c:	98 f4       	brcc	.+38     	; 0x4ca4 <__stack+0x2aa5>
    4c7e:	80 91 48 08 	lds	r24, 0x0848
    4c82:	88 23       	and	r24, r24
    4c84:	79 f0       	breq	.+30     	; 0x4ca4 <__stack+0x2aa5>
			{
				//USART_putstring("45G ");		// comment this out in final product
				vote_indicator_45 = 1;			// Indicating button 1 was pressed
    4c86:	80 91 ca 08 	lds	r24, 0x08CA
    4c8a:	80 61       	ori	r24, 0x10	; 16
    4c8c:	80 93 ca 08 	sts	0x08CA, r24
				deactivate_category_buttons_and_save(button45_addr, 45);
    4c90:	88 e5       	ldi	r24, 0x58	; 88
    4c92:	90 e0       	ldi	r25, 0x00	; 0
    4c94:	6d e2       	ldi	r22, 0x2D	; 45
    4c96:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 45);
				gen_vote_count--;
    4c9a:	80 91 48 08 	lds	r24, 0x0848
    4c9e:	81 50       	subi	r24, 0x01	; 1
    4ca0:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0D) && (46 <= candidate_count) && vote_indicator_46 == 0)
    4ca4:	86 b1       	in	r24, 0x06	; 6
    4ca6:	80 fd       	sbrc	r24, 0
    4ca8:	80 c0       	rjmp	.+256    	; 0x4daa <__stack+0x2bab>
    4caa:	86 b1       	in	r24, 0x06	; 6
    4cac:	81 fd       	sbrc	r24, 1
    4cae:	7d c0       	rjmp	.+250    	; 0x4daa <__stack+0x2bab>
    4cb0:	86 b1       	in	r24, 0x06	; 6
    4cb2:	82 ff       	sbrs	r24, 2
    4cb4:	7a c0       	rjmp	.+244    	; 0x4daa <__stack+0x2bab>
    4cb6:	86 b1       	in	r24, 0x06	; 6
    4cb8:	83 fd       	sbrc	r24, 3
    4cba:	77 c0       	rjmp	.+238    	; 0x4daa <__stack+0x2bab>
    4cbc:	83 b1       	in	r24, 0x03	; 3
    4cbe:	8f 70       	andi	r24, 0x0F	; 15
    4cc0:	8d 30       	cpi	r24, 0x0D	; 13
    4cc2:	09 f0       	breq	.+2      	; 0x4cc6 <__stack+0x2ac7>
    4cc4:	72 c0       	rjmp	.+228    	; 0x4daa <__stack+0x2bab>
    4cc6:	80 91 f6 05 	lds	r24, 0x05F6
    4cca:	8e 32       	cpi	r24, 0x2E	; 46
    4ccc:	08 f4       	brcc	.+2      	; 0x4cd0 <__stack+0x2ad1>
    4cce:	6d c0       	rjmp	.+218    	; 0x4daa <__stack+0x2bab>
    4cd0:	80 91 ca 08 	lds	r24, 0x08CA
    4cd4:	85 fd       	sbrc	r24, 5
    4cd6:	69 c0       	rjmp	.+210    	; 0x4daa <__stack+0x2bab>
				//vote_indicator_46 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 46);
				//deactivate_category_buttons_and_save(button46_addr, 46);  // provide starting and ending buttons as arguments
			//}
			if((46 > category_size_3) && (46 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4cd8:	bd e2       	ldi	r27, 0x2D	; 45
    4cda:	b7 15       	cp	r27, r7
    4cdc:	80 f0       	brcs	.+32     	; 0x4cfe <__stack+0x2aff>
    4cde:	b9 15       	cp	r27, r9
    4ce0:	88 f4       	brcc	.+34     	; 0x4d04 <__stack+0x2b05>
    4ce2:	22 20       	and	r2, r2
    4ce4:	01 f1       	breq	.+64     	; 0x4d26 <__stack+0x2b27>
			{
				//USART_putstring("46C4 ");				// comment this out in final product
				vote_indicator_46 = 1;					// Indicating button 1 was pressed
    4ce6:	80 91 ca 08 	lds	r24, 0x08CA
    4cea:	80 62       	ori	r24, 0x20	; 32
    4cec:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat4--;
    4cf0:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 46);
				deactivate_category_buttons_and_save(button46_addr, 46);  // provide starting and ending buttons as arguments
    4cf2:	8a e5       	ldi	r24, 0x5A	; 90
    4cf4:	90 e0       	ldi	r25, 0x00	; 0
    4cf6:	6e e2       	ldi	r22, 0x2E	; 46
    4cf8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4cfc:	56 c0       	rjmp	.+172    	; 0x4daa <__stack+0x2bab>
			}
			else if((46 > category_size_4) && (46 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    4cfe:	ed e2       	ldi	r30, 0x2D	; 45
    4d00:	e9 15       	cp	r30, r9
    4d02:	88 f0       	brcs	.+34     	; 0x4d26 <__stack+0x2b27>
    4d04:	fd e2       	ldi	r31, 0x2D	; 45
    4d06:	fa 15       	cp	r31, r10
    4d08:	88 f4       	brcc	.+34     	; 0x4d2c <__stack+0x2b2d>
    4d0a:	33 20       	and	r3, r3
    4d0c:	01 f1       	breq	.+64     	; 0x4d4e <__stack+0x2b4f>
			{
				//USART_putstring("46C5 ");				// comment this out in final product
				vote_indicator_46 = 1;					// Indicating button 1 was pressed
    4d0e:	80 91 ca 08 	lds	r24, 0x08CA
    4d12:	80 62       	ori	r24, 0x20	; 32
    4d14:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat5--;
    4d18:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 46);
				deactivate_category_buttons_and_save(button46_addr, 46);  // provide starting and ending buttons as arguments
    4d1a:	8a e5       	ldi	r24, 0x5A	; 90
    4d1c:	90 e0       	ldi	r25, 0x00	; 0
    4d1e:	6e e2       	ldi	r22, 0x2E	; 46
    4d20:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4d24:	42 c0       	rjmp	.+132    	; 0x4daa <__stack+0x2bab>
			}
			else if((46 > category_size_5) && (46 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    4d26:	8d e2       	ldi	r24, 0x2D	; 45
    4d28:	8a 15       	cp	r24, r10
    4d2a:	88 f0       	brcs	.+34     	; 0x4d4e <__stack+0x2b4f>
    4d2c:	9d e2       	ldi	r25, 0x2D	; 45
    4d2e:	98 15       	cp	r25, r8
    4d30:	88 f4       	brcc	.+34     	; 0x4d54 <__stack+0x2b55>
    4d32:	11 23       	and	r17, r17
    4d34:	01 f1       	breq	.+64     	; 0x4d76 <__stack+0x2b77>
			{
				//USART_putstring("46C6 ");				// comment this out in final product
				vote_indicator_46 = 1;					// Indicating button 1 was pressed
    4d36:	80 91 ca 08 	lds	r24, 0x08CA
    4d3a:	80 62       	ori	r24, 0x20	; 32
    4d3c:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat6--;
    4d40:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 46);
				deactivate_category_buttons_and_save(button46_addr, 46);  // provide starting and ending buttons as arguments
    4d42:	8a e5       	ldi	r24, 0x5A	; 90
    4d44:	90 e0       	ldi	r25, 0x00	; 0
    4d46:	6e e2       	ldi	r22, 0x2E	; 46
    4d48:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4d4c:	2e c0       	rjmp	.+92     	; 0x4daa <__stack+0x2bab>
			}
			else if((46 > category_size_6) && (46 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4d4e:	ad e2       	ldi	r26, 0x2D	; 45
    4d50:	a8 15       	cp	r26, r8
    4d52:	88 f0       	brcs	.+34     	; 0x4d76 <__stack+0x2b77>
    4d54:	bd e2       	ldi	r27, 0x2D	; 45
    4d56:	b6 15       	cp	r27, r6
    4d58:	70 f4       	brcc	.+28     	; 0x4d76 <__stack+0x2b77>
    4d5a:	00 23       	and	r16, r16
    4d5c:	61 f0       	breq	.+24     	; 0x4d76 <__stack+0x2b77>
			{
				//USART_putstring("46C7 ");				// comment this out in final product
				vote_indicator_46 = 1;					// Indicating button 1 was pressed
    4d5e:	80 91 ca 08 	lds	r24, 0x08CA
    4d62:	80 62       	ori	r24, 0x20	; 32
    4d64:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat7--;
    4d68:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 46);
				deactivate_category_buttons_and_save(button46_addr, 46);  // provide starting and ending buttons as arguments
    4d6a:	8a e5       	ldi	r24, 0x5A	; 90
    4d6c:	90 e0       	ldi	r25, 0x00	; 0
    4d6e:	6e e2       	ldi	r22, 0x2E	; 46
    4d70:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4d74:	1a c0       	rjmp	.+52     	; 0x4daa <__stack+0x2bab>
				//vote_indicator_46 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 46);
				//deactivate_category_buttons_and_save(button46_addr, 46);  // provide starting and ending buttons as arguments
			//}
			else if ((46 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4d76:	80 91 64 05 	lds	r24, 0x0564
    4d7a:	90 91 65 05 	lds	r25, 0x0565
    4d7e:	8e 32       	cpi	r24, 0x2E	; 46
    4d80:	91 05       	cpc	r25, r1
    4d82:	98 f4       	brcc	.+38     	; 0x4daa <__stack+0x2bab>
    4d84:	80 91 48 08 	lds	r24, 0x0848
    4d88:	88 23       	and	r24, r24
    4d8a:	79 f0       	breq	.+30     	; 0x4daa <__stack+0x2bab>
			{
				//USART_putstring("46G ");		// comment this out in final product
				vote_indicator_46 = 1;			// Indicating button 1 was pressed
    4d8c:	80 91 ca 08 	lds	r24, 0x08CA
    4d90:	80 62       	ori	r24, 0x20	; 32
    4d92:	80 93 ca 08 	sts	0x08CA, r24
				deactivate_category_buttons_and_save(button46_addr, 46);
    4d96:	8a e5       	ldi	r24, 0x5A	; 90
    4d98:	90 e0       	ldi	r25, 0x00	; 0
    4d9a:	6e e2       	ldi	r22, 0x2E	; 46
    4d9c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 46);
				gen_vote_count--;
    4da0:	80 91 48 08 	lds	r24, 0x0848
    4da4:	81 50       	subi	r24, 0x01	; 1
    4da6:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0E) && (47 <= candidate_count) && vote_indicator_47 == 0)
    4daa:	86 b1       	in	r24, 0x06	; 6
    4dac:	80 fd       	sbrc	r24, 0
    4dae:	80 c0       	rjmp	.+256    	; 0x4eb0 <__stack+0x2cb1>
    4db0:	86 b1       	in	r24, 0x06	; 6
    4db2:	81 fd       	sbrc	r24, 1
    4db4:	7d c0       	rjmp	.+250    	; 0x4eb0 <__stack+0x2cb1>
    4db6:	86 b1       	in	r24, 0x06	; 6
    4db8:	82 ff       	sbrs	r24, 2
    4dba:	7a c0       	rjmp	.+244    	; 0x4eb0 <__stack+0x2cb1>
    4dbc:	86 b1       	in	r24, 0x06	; 6
    4dbe:	83 fd       	sbrc	r24, 3
    4dc0:	77 c0       	rjmp	.+238    	; 0x4eb0 <__stack+0x2cb1>
    4dc2:	83 b1       	in	r24, 0x03	; 3
    4dc4:	8f 70       	andi	r24, 0x0F	; 15
    4dc6:	8e 30       	cpi	r24, 0x0E	; 14
    4dc8:	09 f0       	breq	.+2      	; 0x4dcc <__stack+0x2bcd>
    4dca:	72 c0       	rjmp	.+228    	; 0x4eb0 <__stack+0x2cb1>
    4dcc:	80 91 f6 05 	lds	r24, 0x05F6
    4dd0:	8f 32       	cpi	r24, 0x2F	; 47
    4dd2:	08 f4       	brcc	.+2      	; 0x4dd6 <__stack+0x2bd7>
    4dd4:	6d c0       	rjmp	.+218    	; 0x4eb0 <__stack+0x2cb1>
    4dd6:	80 91 ca 08 	lds	r24, 0x08CA
    4dda:	86 fd       	sbrc	r24, 6
    4ddc:	69 c0       	rjmp	.+210    	; 0x4eb0 <__stack+0x2cb1>
				//vote_indicator_47 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 47);
				//deactivate_category_buttons_and_save(button47_addr, 47);  // provide starting and ending buttons as arguments
			//}
			if((47 > category_size_3) && (47 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4dde:	ee e2       	ldi	r30, 0x2E	; 46
    4de0:	e7 15       	cp	r30, r7
    4de2:	80 f0       	brcs	.+32     	; 0x4e04 <__stack+0x2c05>
    4de4:	e9 15       	cp	r30, r9
    4de6:	88 f4       	brcc	.+34     	; 0x4e0a <__stack+0x2c0b>
    4de8:	22 20       	and	r2, r2
    4dea:	01 f1       	breq	.+64     	; 0x4e2c <__stack+0x2c2d>
			{
				//USART_putstring("47C4 ");				// comment this out in final product
				vote_indicator_47 = 1;					// Indicating button 1 was pressed
    4dec:	80 91 ca 08 	lds	r24, 0x08CA
    4df0:	80 64       	ori	r24, 0x40	; 64
    4df2:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat4--;
    4df6:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 47);
				deactivate_category_buttons_and_save(button47_addr, 47);  // provide starting and ending buttons as arguments
    4df8:	8c e5       	ldi	r24, 0x5C	; 92
    4dfa:	90 e0       	ldi	r25, 0x00	; 0
    4dfc:	6f e2       	ldi	r22, 0x2F	; 47
    4dfe:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4e02:	56 c0       	rjmp	.+172    	; 0x4eb0 <__stack+0x2cb1>
			}
			else if((47 > category_size_4) && (47 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    4e04:	fe e2       	ldi	r31, 0x2E	; 46
    4e06:	f9 15       	cp	r31, r9
    4e08:	88 f0       	brcs	.+34     	; 0x4e2c <__stack+0x2c2d>
    4e0a:	8e e2       	ldi	r24, 0x2E	; 46
    4e0c:	8a 15       	cp	r24, r10
    4e0e:	88 f4       	brcc	.+34     	; 0x4e32 <__stack+0x2c33>
    4e10:	33 20       	and	r3, r3
    4e12:	01 f1       	breq	.+64     	; 0x4e54 <__stack+0x2c55>
			{
				//USART_putstring("47C5 ");				// comment this out in final product
				vote_indicator_47 = 1;					// Indicating button 1 was pressed
    4e14:	80 91 ca 08 	lds	r24, 0x08CA
    4e18:	80 64       	ori	r24, 0x40	; 64
    4e1a:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat5--;
    4e1e:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 47);
				deactivate_category_buttons_and_save(button47_addr, 47);  // provide starting and ending buttons as arguments
    4e20:	8c e5       	ldi	r24, 0x5C	; 92
    4e22:	90 e0       	ldi	r25, 0x00	; 0
    4e24:	6f e2       	ldi	r22, 0x2F	; 47
    4e26:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4e2a:	42 c0       	rjmp	.+132    	; 0x4eb0 <__stack+0x2cb1>
			}
			else if((47 > category_size_5) && (47 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    4e2c:	9e e2       	ldi	r25, 0x2E	; 46
    4e2e:	9a 15       	cp	r25, r10
    4e30:	88 f0       	brcs	.+34     	; 0x4e54 <__stack+0x2c55>
    4e32:	ae e2       	ldi	r26, 0x2E	; 46
    4e34:	a8 15       	cp	r26, r8
    4e36:	88 f4       	brcc	.+34     	; 0x4e5a <__stack+0x2c5b>
    4e38:	11 23       	and	r17, r17
    4e3a:	01 f1       	breq	.+64     	; 0x4e7c <__stack+0x2c7d>
			{
				//USART_putstring("47C6 ");				// comment this out in final product
				vote_indicator_47 = 1;					// Indicating button 1 was pressed
    4e3c:	80 91 ca 08 	lds	r24, 0x08CA
    4e40:	80 64       	ori	r24, 0x40	; 64
    4e42:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat6--;
    4e46:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 47);
				deactivate_category_buttons_and_save(button47_addr, 47);  // provide starting and ending buttons as arguments
    4e48:	8c e5       	ldi	r24, 0x5C	; 92
    4e4a:	90 e0       	ldi	r25, 0x00	; 0
    4e4c:	6f e2       	ldi	r22, 0x2F	; 47
    4e4e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4e52:	2e c0       	rjmp	.+92     	; 0x4eb0 <__stack+0x2cb1>
			}
			else if((47 > category_size_6) && (47 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4e54:	be e2       	ldi	r27, 0x2E	; 46
    4e56:	b8 15       	cp	r27, r8
    4e58:	88 f0       	brcs	.+34     	; 0x4e7c <__stack+0x2c7d>
    4e5a:	ee e2       	ldi	r30, 0x2E	; 46
    4e5c:	e6 15       	cp	r30, r6
    4e5e:	70 f4       	brcc	.+28     	; 0x4e7c <__stack+0x2c7d>
    4e60:	00 23       	and	r16, r16
    4e62:	61 f0       	breq	.+24     	; 0x4e7c <__stack+0x2c7d>
			{
				//USART_putstring("47C7 ");				// comment this out in final product
				vote_indicator_47 = 1;					// Indicating button 1 was pressed
    4e64:	80 91 ca 08 	lds	r24, 0x08CA
    4e68:	80 64       	ori	r24, 0x40	; 64
    4e6a:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat7--;
    4e6e:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 47);
				deactivate_category_buttons_and_save(button47_addr, 47);  // provide starting and ending buttons as arguments
    4e70:	8c e5       	ldi	r24, 0x5C	; 92
    4e72:	90 e0       	ldi	r25, 0x00	; 0
    4e74:	6f e2       	ldi	r22, 0x2F	; 47
    4e76:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4e7a:	1a c0       	rjmp	.+52     	; 0x4eb0 <__stack+0x2cb1>
				//vote_indicator_47 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 47);
				//deactivate_category_buttons_and_save(button47_addr, 47);  // provide starting and ending buttons as arguments
			//}
			else if ((47 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4e7c:	80 91 64 05 	lds	r24, 0x0564
    4e80:	90 91 65 05 	lds	r25, 0x0565
    4e84:	8f 32       	cpi	r24, 0x2F	; 47
    4e86:	91 05       	cpc	r25, r1
    4e88:	98 f4       	brcc	.+38     	; 0x4eb0 <__stack+0x2cb1>
    4e8a:	80 91 48 08 	lds	r24, 0x0848
    4e8e:	88 23       	and	r24, r24
    4e90:	79 f0       	breq	.+30     	; 0x4eb0 <__stack+0x2cb1>
			{
				//USART_putstring("47G ");		// comment this out in final product
				vote_indicator_47 = 1;			// Indicating button 1 was pressed
    4e92:	80 91 ca 08 	lds	r24, 0x08CA
    4e96:	80 64       	ori	r24, 0x40	; 64
    4e98:	80 93 ca 08 	sts	0x08CA, r24
				deactivate_category_buttons_and_save(button47_addr, 47);
    4e9c:	8c e5       	ldi	r24, 0x5C	; 92
    4e9e:	90 e0       	ldi	r25, 0x00	; 0
    4ea0:	6f e2       	ldi	r22, 0x2F	; 47
    4ea2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 47);
				gen_vote_count--;
    4ea6:	80 91 48 08 	lds	r24, 0x0848
    4eaa:	81 50       	subi	r24, 0x01	; 1
    4eac:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 1) && (matrix_D_data == 0) && ((PINB & 0x0F) == 0x0F) && (48 <= candidate_count) && vote_indicator_48 == 0)
    4eb0:	86 b1       	in	r24, 0x06	; 6
    4eb2:	80 fd       	sbrc	r24, 0
    4eb4:	81 c0       	rjmp	.+258    	; 0x4fb8 <__stack+0x2db9>
    4eb6:	86 b1       	in	r24, 0x06	; 6
    4eb8:	81 fd       	sbrc	r24, 1
    4eba:	7e c0       	rjmp	.+252    	; 0x4fb8 <__stack+0x2db9>
    4ebc:	86 b1       	in	r24, 0x06	; 6
    4ebe:	82 ff       	sbrs	r24, 2
    4ec0:	7b c0       	rjmp	.+246    	; 0x4fb8 <__stack+0x2db9>
    4ec2:	86 b1       	in	r24, 0x06	; 6
    4ec4:	83 fd       	sbrc	r24, 3
    4ec6:	78 c0       	rjmp	.+240    	; 0x4fb8 <__stack+0x2db9>
    4ec8:	83 b1       	in	r24, 0x03	; 3
    4eca:	8f 70       	andi	r24, 0x0F	; 15
    4ecc:	8f 30       	cpi	r24, 0x0F	; 15
    4ece:	09 f0       	breq	.+2      	; 0x4ed2 <__stack+0x2cd3>
    4ed0:	73 c0       	rjmp	.+230    	; 0x4fb8 <__stack+0x2db9>
    4ed2:	80 91 f6 05 	lds	r24, 0x05F6
    4ed6:	80 33       	cpi	r24, 0x30	; 48
    4ed8:	08 f4       	brcc	.+2      	; 0x4edc <__stack+0x2cdd>
    4eda:	6e c0       	rjmp	.+220    	; 0x4fb8 <__stack+0x2db9>
    4edc:	80 91 ca 08 	lds	r24, 0x08CA
    4ee0:	88 23       	and	r24, r24
    4ee2:	0c f4       	brge	.+2      	; 0x4ee6 <__stack+0x2ce7>
    4ee4:	69 c0       	rjmp	.+210    	; 0x4fb8 <__stack+0x2db9>
				//vote_indicator_48 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 48);
				//deactivate_category_buttons_and_save(button48_addr, 48);  // provide starting and ending buttons as arguments
			//}
			if((48 > category_size_3) && (48 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4ee6:	ff e2       	ldi	r31, 0x2F	; 47
    4ee8:	f7 15       	cp	r31, r7
    4eea:	80 f0       	brcs	.+32     	; 0x4f0c <__stack+0x2d0d>
    4eec:	f9 15       	cp	r31, r9
    4eee:	88 f4       	brcc	.+34     	; 0x4f12 <__stack+0x2d13>
    4ef0:	22 20       	and	r2, r2
    4ef2:	01 f1       	breq	.+64     	; 0x4f34 <__stack+0x2d35>
			{
				//USART_putstring("48C4 ");				// comment this out in final product
				vote_indicator_48 = 1;					// Indicating button 1 was pressed
    4ef4:	80 91 ca 08 	lds	r24, 0x08CA
    4ef8:	80 68       	ori	r24, 0x80	; 128
    4efa:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat4--;
    4efe:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 48);
				deactivate_category_buttons_and_save(button48_addr, 48);  // provide starting and ending buttons as arguments
    4f00:	8e e5       	ldi	r24, 0x5E	; 94
    4f02:	90 e0       	ldi	r25, 0x00	; 0
    4f04:	60 e3       	ldi	r22, 0x30	; 48
    4f06:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4f0a:	56 c0       	rjmp	.+172    	; 0x4fb8 <__stack+0x2db9>
			}
			else if((48 > category_size_4) && (48 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    4f0c:	8f e2       	ldi	r24, 0x2F	; 47
    4f0e:	89 15       	cp	r24, r9
    4f10:	88 f0       	brcs	.+34     	; 0x4f34 <__stack+0x2d35>
    4f12:	9f e2       	ldi	r25, 0x2F	; 47
    4f14:	9a 15       	cp	r25, r10
    4f16:	88 f4       	brcc	.+34     	; 0x4f3a <__stack+0x2d3b>
    4f18:	33 20       	and	r3, r3
    4f1a:	01 f1       	breq	.+64     	; 0x4f5c <__stack+0x2d5d>
			{
				//USART_putstring("48C5 ");				// comment this out in final product
				vote_indicator_48 = 1;					// Indicating button 1 was pressed
    4f1c:	80 91 ca 08 	lds	r24, 0x08CA
    4f20:	80 68       	ori	r24, 0x80	; 128
    4f22:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat5--;
    4f26:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 48);
				deactivate_category_buttons_and_save(button48_addr, 48);  // provide starting and ending buttons as arguments
    4f28:	8e e5       	ldi	r24, 0x5E	; 94
    4f2a:	90 e0       	ldi	r25, 0x00	; 0
    4f2c:	60 e3       	ldi	r22, 0x30	; 48
    4f2e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4f32:	42 c0       	rjmp	.+132    	; 0x4fb8 <__stack+0x2db9>
			}
			else if((48 > category_size_5) && (48 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    4f34:	af e2       	ldi	r26, 0x2F	; 47
    4f36:	aa 15       	cp	r26, r10
    4f38:	88 f0       	brcs	.+34     	; 0x4f5c <__stack+0x2d5d>
    4f3a:	bf e2       	ldi	r27, 0x2F	; 47
    4f3c:	b8 15       	cp	r27, r8
    4f3e:	88 f4       	brcc	.+34     	; 0x4f62 <__stack+0x2d63>
    4f40:	11 23       	and	r17, r17
    4f42:	01 f1       	breq	.+64     	; 0x4f84 <__stack+0x2d85>
			{
				//USART_putstring("48C6 ");				// comment this out in final product
				vote_indicator_48 = 1;					// Indicating button 1 was pressed
    4f44:	80 91 ca 08 	lds	r24, 0x08CA
    4f48:	80 68       	ori	r24, 0x80	; 128
    4f4a:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat6--;
    4f4e:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 48);
				deactivate_category_buttons_and_save(button48_addr, 48);  // provide starting and ending buttons as arguments
    4f50:	8e e5       	ldi	r24, 0x5E	; 94
    4f52:	90 e0       	ldi	r25, 0x00	; 0
    4f54:	60 e3       	ldi	r22, 0x30	; 48
    4f56:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4f5a:	2e c0       	rjmp	.+92     	; 0x4fb8 <__stack+0x2db9>
			}
			else if((48 > category_size_6) && (48 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    4f5c:	ef e2       	ldi	r30, 0x2F	; 47
    4f5e:	e8 15       	cp	r30, r8
    4f60:	88 f0       	brcs	.+34     	; 0x4f84 <__stack+0x2d85>
    4f62:	ff e2       	ldi	r31, 0x2F	; 47
    4f64:	f6 15       	cp	r31, r6
    4f66:	70 f4       	brcc	.+28     	; 0x4f84 <__stack+0x2d85>
    4f68:	00 23       	and	r16, r16
    4f6a:	61 f0       	breq	.+24     	; 0x4f84 <__stack+0x2d85>
			{
				//USART_putstring("48C7 ");				// comment this out in final product
				vote_indicator_48 = 1;					// Indicating button 1 was pressed
    4f6c:	80 91 ca 08 	lds	r24, 0x08CA
    4f70:	80 68       	ori	r24, 0x80	; 128
    4f72:	80 93 ca 08 	sts	0x08CA, r24
				no_of_votes_cat7--;
    4f76:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 48);
				deactivate_category_buttons_and_save(button48_addr, 48);  // provide starting and ending buttons as arguments
    4f78:	8e e5       	ldi	r24, 0x5E	; 94
    4f7a:	90 e0       	ldi	r25, 0x00	; 0
    4f7c:	60 e3       	ldi	r22, 0x30	; 48
    4f7e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    4f82:	1a c0       	rjmp	.+52     	; 0x4fb8 <__stack+0x2db9>
				//vote_indicator_48 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 48);
				//deactivate_category_buttons_and_save(button48_addr, 48);  // provide starting and ending buttons as arguments
			//}
			else if ((48 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    4f84:	80 91 64 05 	lds	r24, 0x0564
    4f88:	90 91 65 05 	lds	r25, 0x0565
    4f8c:	80 33       	cpi	r24, 0x30	; 48
    4f8e:	91 05       	cpc	r25, r1
    4f90:	98 f4       	brcc	.+38     	; 0x4fb8 <__stack+0x2db9>
    4f92:	80 91 48 08 	lds	r24, 0x0848
    4f96:	88 23       	and	r24, r24
    4f98:	79 f0       	breq	.+30     	; 0x4fb8 <__stack+0x2db9>
			{
				//USART_putstring("48G ");		// comment this out in final product
				vote_indicator_48 = 1;			// Indicating button 1 was pressed
    4f9a:	80 91 ca 08 	lds	r24, 0x08CA
    4f9e:	80 68       	ori	r24, 0x80	; 128
    4fa0:	80 93 ca 08 	sts	0x08CA, r24
				deactivate_category_buttons_and_save(button48_addr, 48);
    4fa4:	8e e5       	ldi	r24, 0x5E	; 94
    4fa6:	90 e0       	ldi	r25, 0x00	; 0
    4fa8:	60 e3       	ldi	r22, 0x30	; 48
    4faa:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 48);
				gen_vote_count--;
    4fae:	80 91 48 08 	lds	r24, 0x0848
    4fb2:	81 50       	subi	r24, 0x01	; 1
    4fb4:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x00) && (49 <= candidate_count) && vote_indicator_49 == 0)
    4fb8:	86 b1       	in	r24, 0x06	; 6
    4fba:	80 fd       	sbrc	r24, 0
    4fbc:	82 c0       	rjmp	.+260    	; 0x50c2 <__stack+0x2ec3>
    4fbe:	86 b1       	in	r24, 0x06	; 6
    4fc0:	81 fd       	sbrc	r24, 1
    4fc2:	7f c0       	rjmp	.+254    	; 0x50c2 <__stack+0x2ec3>
    4fc4:	86 b1       	in	r24, 0x06	; 6
    4fc6:	82 fd       	sbrc	r24, 2
    4fc8:	7c c0       	rjmp	.+248    	; 0x50c2 <__stack+0x2ec3>
    4fca:	86 b1       	in	r24, 0x06	; 6
    4fcc:	83 ff       	sbrs	r24, 3
    4fce:	79 c0       	rjmp	.+242    	; 0x50c2 <__stack+0x2ec3>
    4fd0:	83 b1       	in	r24, 0x03	; 3
    4fd2:	90 e0       	ldi	r25, 0x00	; 0
    4fd4:	8f 70       	andi	r24, 0x0F	; 15
    4fd6:	90 70       	andi	r25, 0x00	; 0
    4fd8:	00 97       	sbiw	r24, 0x00	; 0
    4fda:	09 f0       	breq	.+2      	; 0x4fde <__stack+0x2ddf>
    4fdc:	72 c0       	rjmp	.+228    	; 0x50c2 <__stack+0x2ec3>
    4fde:	80 91 f6 05 	lds	r24, 0x05F6
    4fe2:	81 33       	cpi	r24, 0x31	; 49
    4fe4:	08 f4       	brcc	.+2      	; 0x4fe8 <__stack+0x2de9>
    4fe6:	6d c0       	rjmp	.+218    	; 0x50c2 <__stack+0x2ec3>
    4fe8:	80 91 67 05 	lds	r24, 0x0567
    4fec:	80 fd       	sbrc	r24, 0
    4fee:	69 c0       	rjmp	.+210    	; 0x50c2 <__stack+0x2ec3>
				//vote_indicator_49 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 49);
				//deactivate_category_buttons_and_save(button49_addr, 49);  // provide starting and ending buttons as arguments
			//}
			if((49 > category_size_3) && (49 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    4ff0:	80 e3       	ldi	r24, 0x30	; 48
    4ff2:	87 15       	cp	r24, r7
    4ff4:	80 f0       	brcs	.+32     	; 0x5016 <__stack+0x2e17>
    4ff6:	89 15       	cp	r24, r9
    4ff8:	88 f4       	brcc	.+34     	; 0x501c <__stack+0x2e1d>
    4ffa:	22 20       	and	r2, r2
    4ffc:	01 f1       	breq	.+64     	; 0x503e <__stack+0x2e3f>
			{
				//USART_putstring("49C4 ");				// comment this out in final product
				vote_indicator_49 = 1;					// Indicating button 1 was pressed
    4ffe:	80 91 67 05 	lds	r24, 0x0567
    5002:	81 60       	ori	r24, 0x01	; 1
    5004:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat4--;
    5008:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 49);
				deactivate_category_buttons_and_save(button49_addr, 49);  // provide starting and ending buttons as arguments
    500a:	80 e6       	ldi	r24, 0x60	; 96
    500c:	90 e0       	ldi	r25, 0x00	; 0
    500e:	61 e3       	ldi	r22, 0x31	; 49
    5010:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5014:	56 c0       	rjmp	.+172    	; 0x50c2 <__stack+0x2ec3>
			}
			else if((49 > category_size_4) && (49 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5016:	90 e3       	ldi	r25, 0x30	; 48
    5018:	99 15       	cp	r25, r9
    501a:	88 f0       	brcs	.+34     	; 0x503e <__stack+0x2e3f>
    501c:	a0 e3       	ldi	r26, 0x30	; 48
    501e:	aa 15       	cp	r26, r10
    5020:	88 f4       	brcc	.+34     	; 0x5044 <__stack+0x2e45>
    5022:	33 20       	and	r3, r3
    5024:	01 f1       	breq	.+64     	; 0x5066 <__stack+0x2e67>
			{
				//USART_putstring("49C5 ");				// comment this out in final product
				vote_indicator_49 = 1;					// Indicating button 1 was pressed
    5026:	80 91 67 05 	lds	r24, 0x0567
    502a:	81 60       	ori	r24, 0x01	; 1
    502c:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat5--;
    5030:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 49);
				deactivate_category_buttons_and_save(button49_addr, 49);  // provide starting and ending buttons as arguments
    5032:	80 e6       	ldi	r24, 0x60	; 96
    5034:	90 e0       	ldi	r25, 0x00	; 0
    5036:	61 e3       	ldi	r22, 0x31	; 49
    5038:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    503c:	42 c0       	rjmp	.+132    	; 0x50c2 <__stack+0x2ec3>
			}
			else if((49 > category_size_5) && (49 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    503e:	b0 e3       	ldi	r27, 0x30	; 48
    5040:	ba 15       	cp	r27, r10
    5042:	88 f0       	brcs	.+34     	; 0x5066 <__stack+0x2e67>
    5044:	e0 e3       	ldi	r30, 0x30	; 48
    5046:	e8 15       	cp	r30, r8
    5048:	88 f4       	brcc	.+34     	; 0x506c <__stack+0x2e6d>
    504a:	11 23       	and	r17, r17
    504c:	01 f1       	breq	.+64     	; 0x508e <__stack+0x2e8f>
			{
				//USART_putstring("49C6 ");				// comment this out in final product
				vote_indicator_49 = 1;					// Indicating button 1 was pressed
    504e:	80 91 67 05 	lds	r24, 0x0567
    5052:	81 60       	ori	r24, 0x01	; 1
    5054:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat6--;
    5058:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 49);
				deactivate_category_buttons_and_save(button49_addr, 49);  // provide starting and ending buttons as arguments
    505a:	80 e6       	ldi	r24, 0x60	; 96
    505c:	90 e0       	ldi	r25, 0x00	; 0
    505e:	61 e3       	ldi	r22, 0x31	; 49
    5060:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5064:	2e c0       	rjmp	.+92     	; 0x50c2 <__stack+0x2ec3>
			}
			else if((49 > category_size_6) && (49 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5066:	f0 e3       	ldi	r31, 0x30	; 48
    5068:	f8 15       	cp	r31, r8
    506a:	88 f0       	brcs	.+34     	; 0x508e <__stack+0x2e8f>
    506c:	80 e3       	ldi	r24, 0x30	; 48
    506e:	86 15       	cp	r24, r6
    5070:	70 f4       	brcc	.+28     	; 0x508e <__stack+0x2e8f>
    5072:	00 23       	and	r16, r16
    5074:	61 f0       	breq	.+24     	; 0x508e <__stack+0x2e8f>
			{
				//USART_putstring("49C7 ");				// comment this out in final product
				vote_indicator_49 = 1;					// Indicating button 1 was pressed
    5076:	80 91 67 05 	lds	r24, 0x0567
    507a:	81 60       	ori	r24, 0x01	; 1
    507c:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat7--;
    5080:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 49);
				deactivate_category_buttons_and_save(button49_addr, 49);  // provide starting and ending buttons as arguments
    5082:	80 e6       	ldi	r24, 0x60	; 96
    5084:	90 e0       	ldi	r25, 0x00	; 0
    5086:	61 e3       	ldi	r22, 0x31	; 49
    5088:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    508c:	1a c0       	rjmp	.+52     	; 0x50c2 <__stack+0x2ec3>
				//vote_indicator_49 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 49);
				//deactivate_category_buttons_and_save(button49_addr, 49);  // provide starting and ending buttons as arguments
			//}
			else if ((49 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    508e:	80 91 64 05 	lds	r24, 0x0564
    5092:	90 91 65 05 	lds	r25, 0x0565
    5096:	81 33       	cpi	r24, 0x31	; 49
    5098:	91 05       	cpc	r25, r1
    509a:	98 f4       	brcc	.+38     	; 0x50c2 <__stack+0x2ec3>
    509c:	80 91 48 08 	lds	r24, 0x0848
    50a0:	88 23       	and	r24, r24
    50a2:	79 f0       	breq	.+30     	; 0x50c2 <__stack+0x2ec3>
			{
				////USART_putstring("49 G ");		// comment this out in final product
				vote_indicator_49 = 1;			// Indicating button 1 was pressed
    50a4:	80 91 67 05 	lds	r24, 0x0567
    50a8:	81 60       	ori	r24, 0x01	; 1
    50aa:	80 93 67 05 	sts	0x0567, r24
				deactivate_category_buttons_and_save(button49_addr, 49);
    50ae:	80 e6       	ldi	r24, 0x60	; 96
    50b0:	90 e0       	ldi	r25, 0x00	; 0
    50b2:	61 e3       	ldi	r22, 0x31	; 49
    50b4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 49);
				gen_vote_count--;
    50b8:	80 91 48 08 	lds	r24, 0x0848
    50bc:	81 50       	subi	r24, 0x01	; 1
    50be:	80 93 48 08 	sts	0x0848, r24
			}
		}
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x01) && (50 <= candidate_count) && vote_indicator_50 == 0)
    50c2:	86 b1       	in	r24, 0x06	; 6
    50c4:	80 fd       	sbrc	r24, 0
    50c6:	80 c0       	rjmp	.+256    	; 0x51c8 <__stack+0x2fc9>
    50c8:	86 b1       	in	r24, 0x06	; 6
    50ca:	81 fd       	sbrc	r24, 1
    50cc:	7d c0       	rjmp	.+250    	; 0x51c8 <__stack+0x2fc9>
    50ce:	86 b1       	in	r24, 0x06	; 6
    50d0:	82 fd       	sbrc	r24, 2
    50d2:	7a c0       	rjmp	.+244    	; 0x51c8 <__stack+0x2fc9>
    50d4:	86 b1       	in	r24, 0x06	; 6
    50d6:	83 ff       	sbrs	r24, 3
    50d8:	77 c0       	rjmp	.+238    	; 0x51c8 <__stack+0x2fc9>
    50da:	83 b1       	in	r24, 0x03	; 3
    50dc:	8f 70       	andi	r24, 0x0F	; 15
    50de:	81 30       	cpi	r24, 0x01	; 1
    50e0:	09 f0       	breq	.+2      	; 0x50e4 <__stack+0x2ee5>
    50e2:	72 c0       	rjmp	.+228    	; 0x51c8 <__stack+0x2fc9>
    50e4:	80 91 f6 05 	lds	r24, 0x05F6
    50e8:	82 33       	cpi	r24, 0x32	; 50
    50ea:	08 f4       	brcc	.+2      	; 0x50ee <__stack+0x2eef>
    50ec:	6d c0       	rjmp	.+218    	; 0x51c8 <__stack+0x2fc9>
    50ee:	80 91 67 05 	lds	r24, 0x0567
    50f2:	81 fd       	sbrc	r24, 1
    50f4:	69 c0       	rjmp	.+210    	; 0x51c8 <__stack+0x2fc9>
				//vote_indicator_50 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 50);
				//deactivate_category_buttons_and_save(button50_addr, 50);  // provide starting and ending buttons as arguments
			//}
			if((50 > category_size_3) && (50 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    50f6:	91 e3       	ldi	r25, 0x31	; 49
    50f8:	97 15       	cp	r25, r7
    50fa:	80 f0       	brcs	.+32     	; 0x511c <__stack+0x2f1d>
    50fc:	99 15       	cp	r25, r9
    50fe:	88 f4       	brcc	.+34     	; 0x5122 <__stack+0x2f23>
    5100:	22 20       	and	r2, r2
    5102:	01 f1       	breq	.+64     	; 0x5144 <__stack+0x2f45>
			{
				//USART_putstring("50C4 ");				// comment this out in final product
				vote_indicator_50 = 1;					// Indicating button 1 was pressed
    5104:	80 91 67 05 	lds	r24, 0x0567
    5108:	82 60       	ori	r24, 0x02	; 2
    510a:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat4--;
    510e:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 50);
				deactivate_category_buttons_and_save(button50_addr, 50);  // provide starting and ending buttons as arguments
    5110:	82 e6       	ldi	r24, 0x62	; 98
    5112:	90 e0       	ldi	r25, 0x00	; 0
    5114:	62 e3       	ldi	r22, 0x32	; 50
    5116:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    511a:	56 c0       	rjmp	.+172    	; 0x51c8 <__stack+0x2fc9>
			}
			else if((50 > category_size_4) && (50 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    511c:	a1 e3       	ldi	r26, 0x31	; 49
    511e:	a9 15       	cp	r26, r9
    5120:	88 f0       	brcs	.+34     	; 0x5144 <__stack+0x2f45>
    5122:	b1 e3       	ldi	r27, 0x31	; 49
    5124:	ba 15       	cp	r27, r10
    5126:	88 f4       	brcc	.+34     	; 0x514a <__stack+0x2f4b>
    5128:	33 20       	and	r3, r3
    512a:	01 f1       	breq	.+64     	; 0x516c <__stack+0x2f6d>
			{
				//USART_putstring("50C5 ");				// comment this out in final product
				vote_indicator_50 = 1;					// Indicating button 1 was pressed
    512c:	80 91 67 05 	lds	r24, 0x0567
    5130:	82 60       	ori	r24, 0x02	; 2
    5132:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat5--;
    5136:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 50);
				deactivate_category_buttons_and_save(button50_addr, 50);  // provide starting and ending buttons as arguments
    5138:	82 e6       	ldi	r24, 0x62	; 98
    513a:	90 e0       	ldi	r25, 0x00	; 0
    513c:	62 e3       	ldi	r22, 0x32	; 50
    513e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5142:	42 c0       	rjmp	.+132    	; 0x51c8 <__stack+0x2fc9>
			}
			else if((50 > category_size_5) && (50 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5144:	e1 e3       	ldi	r30, 0x31	; 49
    5146:	ea 15       	cp	r30, r10
    5148:	88 f0       	brcs	.+34     	; 0x516c <__stack+0x2f6d>
    514a:	f1 e3       	ldi	r31, 0x31	; 49
    514c:	f8 15       	cp	r31, r8
    514e:	88 f4       	brcc	.+34     	; 0x5172 <__stack+0x2f73>
    5150:	11 23       	and	r17, r17
    5152:	01 f1       	breq	.+64     	; 0x5194 <__stack+0x2f95>
			{
				//USART_putstring("50C6 ");				// comment this out in final product
				vote_indicator_50 = 1;					// Indicating button 1 was pressed
    5154:	80 91 67 05 	lds	r24, 0x0567
    5158:	82 60       	ori	r24, 0x02	; 2
    515a:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat6--;
    515e:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 50);
				deactivate_category_buttons_and_save(button50_addr, 50);  // provide starting and ending buttons as arguments
    5160:	82 e6       	ldi	r24, 0x62	; 98
    5162:	90 e0       	ldi	r25, 0x00	; 0
    5164:	62 e3       	ldi	r22, 0x32	; 50
    5166:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    516a:	2e c0       	rjmp	.+92     	; 0x51c8 <__stack+0x2fc9>
			}
			else if((50 > category_size_6) && (50 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    516c:	81 e3       	ldi	r24, 0x31	; 49
    516e:	88 15       	cp	r24, r8
    5170:	88 f0       	brcs	.+34     	; 0x5194 <__stack+0x2f95>
    5172:	91 e3       	ldi	r25, 0x31	; 49
    5174:	96 15       	cp	r25, r6
    5176:	70 f4       	brcc	.+28     	; 0x5194 <__stack+0x2f95>
    5178:	00 23       	and	r16, r16
    517a:	61 f0       	breq	.+24     	; 0x5194 <__stack+0x2f95>
			{
				//USART_putstring("50C7 ");				// comment this out in final product
				vote_indicator_50 = 1;					// Indicating button 1 was pressed
    517c:	80 91 67 05 	lds	r24, 0x0567
    5180:	82 60       	ori	r24, 0x02	; 2
    5182:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat7--;
    5186:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 50);
				deactivate_category_buttons_and_save(button50_addr, 50);  // provide starting and ending buttons as arguments
    5188:	82 e6       	ldi	r24, 0x62	; 98
    518a:	90 e0       	ldi	r25, 0x00	; 0
    518c:	62 e3       	ldi	r22, 0x32	; 50
    518e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5192:	1a c0       	rjmp	.+52     	; 0x51c8 <__stack+0x2fc9>
				//vote_indicator_50 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 50);
				//deactivate_category_buttons_and_save(button50_addr, 50);  // provide starting and ending buttons as arguments
			//}
			else if ((50 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    5194:	80 91 64 05 	lds	r24, 0x0564
    5198:	90 91 65 05 	lds	r25, 0x0565
    519c:	82 33       	cpi	r24, 0x32	; 50
    519e:	91 05       	cpc	r25, r1
    51a0:	98 f4       	brcc	.+38     	; 0x51c8 <__stack+0x2fc9>
    51a2:	80 91 48 08 	lds	r24, 0x0848
    51a6:	88 23       	and	r24, r24
    51a8:	79 f0       	breq	.+30     	; 0x51c8 <__stack+0x2fc9>
			{
				//USART_putstring("50G ");		// comment this out in final product
				vote_indicator_50 = 1;			// Indicating button 1 was pressed
    51aa:	80 91 67 05 	lds	r24, 0x0567
    51ae:	82 60       	ori	r24, 0x02	; 2
    51b0:	80 93 67 05 	sts	0x0567, r24
				deactivate_category_buttons_and_save(button50_addr, 50);
    51b4:	82 e6       	ldi	r24, 0x62	; 98
    51b6:	90 e0       	ldi	r25, 0x00	; 0
    51b8:	62 e3       	ldi	r22, 0x32	; 50
    51ba:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 50);
				gen_vote_count--;
    51be:	80 91 48 08 	lds	r24, 0x0848
    51c2:	81 50       	subi	r24, 0x01	; 1
    51c4:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x02) && (51 <= candidate_count) && vote_indicator_51 == 0)
    51c8:	86 b1       	in	r24, 0x06	; 6
    51ca:	80 fd       	sbrc	r24, 0
    51cc:	80 c0       	rjmp	.+256    	; 0x52ce <__stack+0x30cf>
    51ce:	86 b1       	in	r24, 0x06	; 6
    51d0:	81 fd       	sbrc	r24, 1
    51d2:	7d c0       	rjmp	.+250    	; 0x52ce <__stack+0x30cf>
    51d4:	86 b1       	in	r24, 0x06	; 6
    51d6:	82 fd       	sbrc	r24, 2
    51d8:	7a c0       	rjmp	.+244    	; 0x52ce <__stack+0x30cf>
    51da:	86 b1       	in	r24, 0x06	; 6
    51dc:	83 ff       	sbrs	r24, 3
    51de:	77 c0       	rjmp	.+238    	; 0x52ce <__stack+0x30cf>
    51e0:	83 b1       	in	r24, 0x03	; 3
    51e2:	8f 70       	andi	r24, 0x0F	; 15
    51e4:	82 30       	cpi	r24, 0x02	; 2
    51e6:	09 f0       	breq	.+2      	; 0x51ea <__stack+0x2feb>
    51e8:	72 c0       	rjmp	.+228    	; 0x52ce <__stack+0x30cf>
    51ea:	80 91 f6 05 	lds	r24, 0x05F6
    51ee:	83 33       	cpi	r24, 0x33	; 51
    51f0:	08 f4       	brcc	.+2      	; 0x51f4 <__stack+0x2ff5>
    51f2:	6d c0       	rjmp	.+218    	; 0x52ce <__stack+0x30cf>
    51f4:	80 91 67 05 	lds	r24, 0x0567
    51f8:	82 fd       	sbrc	r24, 2
    51fa:	69 c0       	rjmp	.+210    	; 0x52ce <__stack+0x30cf>
				//vote_indicator_51 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 51);
				//deactivate_category_buttons_and_save(button51_addr, 51);  // provide starting and ending buttons as arguments
			//}
			if((51 > category_size_3) && (51 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    51fc:	a2 e3       	ldi	r26, 0x32	; 50
    51fe:	a7 15       	cp	r26, r7
    5200:	80 f0       	brcs	.+32     	; 0x5222 <__stack+0x3023>
    5202:	a9 15       	cp	r26, r9
    5204:	88 f4       	brcc	.+34     	; 0x5228 <__stack+0x3029>
    5206:	22 20       	and	r2, r2
    5208:	01 f1       	breq	.+64     	; 0x524a <__stack+0x304b>
			{
				//USART_putstring("51C4 ");				// comment this out in final product
				vote_indicator_51 = 1;					// Indicating button 1 was pressed
    520a:	80 91 67 05 	lds	r24, 0x0567
    520e:	84 60       	ori	r24, 0x04	; 4
    5210:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat4--;
    5214:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 51);
				deactivate_category_buttons_and_save(button51_addr, 51);  // provide starting and ending buttons as arguments
    5216:	84 e6       	ldi	r24, 0x64	; 100
    5218:	90 e0       	ldi	r25, 0x00	; 0
    521a:	63 e3       	ldi	r22, 0x33	; 51
    521c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5220:	56 c0       	rjmp	.+172    	; 0x52ce <__stack+0x30cf>
			}
			else if((51 > category_size_4) && (51 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5222:	b2 e3       	ldi	r27, 0x32	; 50
    5224:	b9 15       	cp	r27, r9
    5226:	88 f0       	brcs	.+34     	; 0x524a <__stack+0x304b>
    5228:	e2 e3       	ldi	r30, 0x32	; 50
    522a:	ea 15       	cp	r30, r10
    522c:	88 f4       	brcc	.+34     	; 0x5250 <__stack+0x3051>
    522e:	33 20       	and	r3, r3
    5230:	01 f1       	breq	.+64     	; 0x5272 <__stack+0x3073>
			{
				//USART_putstring("51C5 ");				// comment this out in final product
				vote_indicator_51 = 1;					// Indicating button 1 was pressed
    5232:	80 91 67 05 	lds	r24, 0x0567
    5236:	84 60       	ori	r24, 0x04	; 4
    5238:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat5--;
    523c:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 51);
				deactivate_category_buttons_and_save(button51_addr, 51);  // provide starting and ending buttons as arguments
    523e:	84 e6       	ldi	r24, 0x64	; 100
    5240:	90 e0       	ldi	r25, 0x00	; 0
    5242:	63 e3       	ldi	r22, 0x33	; 51
    5244:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5248:	42 c0       	rjmp	.+132    	; 0x52ce <__stack+0x30cf>
			}
			else if((51 > category_size_5) && (51 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    524a:	f2 e3       	ldi	r31, 0x32	; 50
    524c:	fa 15       	cp	r31, r10
    524e:	88 f0       	brcs	.+34     	; 0x5272 <__stack+0x3073>
    5250:	82 e3       	ldi	r24, 0x32	; 50
    5252:	88 15       	cp	r24, r8
    5254:	88 f4       	brcc	.+34     	; 0x5278 <__stack+0x3079>
    5256:	11 23       	and	r17, r17
    5258:	01 f1       	breq	.+64     	; 0x529a <__stack+0x309b>
			{
				//USART_putstring("51C6 ");				// comment this out in final product
				vote_indicator_51 = 1;					// Indicating button 1 was pressed
    525a:	80 91 67 05 	lds	r24, 0x0567
    525e:	84 60       	ori	r24, 0x04	; 4
    5260:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat6--;
    5264:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 51);
				deactivate_category_buttons_and_save(button51_addr, 51);  // provide starting and ending buttons as arguments
    5266:	84 e6       	ldi	r24, 0x64	; 100
    5268:	90 e0       	ldi	r25, 0x00	; 0
    526a:	63 e3       	ldi	r22, 0x33	; 51
    526c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5270:	2e c0       	rjmp	.+92     	; 0x52ce <__stack+0x30cf>
			}
			else if((51 > category_size_6) && (51 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5272:	92 e3       	ldi	r25, 0x32	; 50
    5274:	98 15       	cp	r25, r8
    5276:	88 f0       	brcs	.+34     	; 0x529a <__stack+0x309b>
    5278:	a2 e3       	ldi	r26, 0x32	; 50
    527a:	a6 15       	cp	r26, r6
    527c:	70 f4       	brcc	.+28     	; 0x529a <__stack+0x309b>
    527e:	00 23       	and	r16, r16
    5280:	61 f0       	breq	.+24     	; 0x529a <__stack+0x309b>
			{
				//USART_putstring("51C7 ");				// comment this out in final product
				vote_indicator_51 = 1;					// Indicating button 1 was pressed
    5282:	80 91 67 05 	lds	r24, 0x0567
    5286:	84 60       	ori	r24, 0x04	; 4
    5288:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat7--;
    528c:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 51);
				deactivate_category_buttons_and_save(button51_addr, 51);  // provide starting and ending buttons as arguments
    528e:	84 e6       	ldi	r24, 0x64	; 100
    5290:	90 e0       	ldi	r25, 0x00	; 0
    5292:	63 e3       	ldi	r22, 0x33	; 51
    5294:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5298:	1a c0       	rjmp	.+52     	; 0x52ce <__stack+0x30cf>
				//vote_indicator_51 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 51);
				//deactivate_category_buttons_and_save(button51_addr, 51);  // provide starting and ending buttons as arguments
			//}
			else if ((51 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    529a:	80 91 64 05 	lds	r24, 0x0564
    529e:	90 91 65 05 	lds	r25, 0x0565
    52a2:	83 33       	cpi	r24, 0x33	; 51
    52a4:	91 05       	cpc	r25, r1
    52a6:	98 f4       	brcc	.+38     	; 0x52ce <__stack+0x30cf>
    52a8:	80 91 48 08 	lds	r24, 0x0848
    52ac:	88 23       	and	r24, r24
    52ae:	79 f0       	breq	.+30     	; 0x52ce <__stack+0x30cf>
			{
				//USART_putstring("51G ");		// comment this out in final product
				vote_indicator_51 = 1;			// Indicating button 1 was pressed
    52b0:	80 91 67 05 	lds	r24, 0x0567
    52b4:	84 60       	ori	r24, 0x04	; 4
    52b6:	80 93 67 05 	sts	0x0567, r24
				deactivate_category_buttons_and_save(button51_addr, 51);
    52ba:	84 e6       	ldi	r24, 0x64	; 100
    52bc:	90 e0       	ldi	r25, 0x00	; 0
    52be:	63 e3       	ldi	r22, 0x33	; 51
    52c0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 51);
				gen_vote_count--;
    52c4:	80 91 48 08 	lds	r24, 0x0848
    52c8:	81 50       	subi	r24, 0x01	; 1
    52ca:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x03) && (52 <= candidate_count) && vote_indicator_52 == 0)
    52ce:	86 b1       	in	r24, 0x06	; 6
    52d0:	80 fd       	sbrc	r24, 0
    52d2:	80 c0       	rjmp	.+256    	; 0x53d4 <__stack+0x31d5>
    52d4:	86 b1       	in	r24, 0x06	; 6
    52d6:	81 fd       	sbrc	r24, 1
    52d8:	7d c0       	rjmp	.+250    	; 0x53d4 <__stack+0x31d5>
    52da:	86 b1       	in	r24, 0x06	; 6
    52dc:	82 fd       	sbrc	r24, 2
    52de:	7a c0       	rjmp	.+244    	; 0x53d4 <__stack+0x31d5>
    52e0:	86 b1       	in	r24, 0x06	; 6
    52e2:	83 ff       	sbrs	r24, 3
    52e4:	77 c0       	rjmp	.+238    	; 0x53d4 <__stack+0x31d5>
    52e6:	83 b1       	in	r24, 0x03	; 3
    52e8:	8f 70       	andi	r24, 0x0F	; 15
    52ea:	83 30       	cpi	r24, 0x03	; 3
    52ec:	09 f0       	breq	.+2      	; 0x52f0 <__stack+0x30f1>
    52ee:	72 c0       	rjmp	.+228    	; 0x53d4 <__stack+0x31d5>
    52f0:	80 91 f6 05 	lds	r24, 0x05F6
    52f4:	84 33       	cpi	r24, 0x34	; 52
    52f6:	08 f4       	brcc	.+2      	; 0x52fa <__stack+0x30fb>
    52f8:	6d c0       	rjmp	.+218    	; 0x53d4 <__stack+0x31d5>
    52fa:	80 91 67 05 	lds	r24, 0x0567
    52fe:	83 fd       	sbrc	r24, 3
    5300:	69 c0       	rjmp	.+210    	; 0x53d4 <__stack+0x31d5>
				//vote_indicator_52 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 52);
				//deactivate_category_buttons_and_save(button52_addr, 52);  // provide starting and ending buttons as arguments
			//}
			if((52 > category_size_3) && (52 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    5302:	b3 e3       	ldi	r27, 0x33	; 51
    5304:	b7 15       	cp	r27, r7
    5306:	80 f0       	brcs	.+32     	; 0x5328 <__stack+0x3129>
    5308:	b9 15       	cp	r27, r9
    530a:	88 f4       	brcc	.+34     	; 0x532e <__stack+0x312f>
    530c:	22 20       	and	r2, r2
    530e:	01 f1       	breq	.+64     	; 0x5350 <__stack+0x3151>
			{
				//USART_putstring("52C4 ");				// comment this out in final product
				vote_indicator_52 = 1;					// Indicating button 1 was pressed
    5310:	80 91 67 05 	lds	r24, 0x0567
    5314:	88 60       	ori	r24, 0x08	; 8
    5316:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat4--;
    531a:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 52);
				deactivate_category_buttons_and_save(button52_addr, 52);  // provide starting and ending buttons as arguments
    531c:	86 e6       	ldi	r24, 0x66	; 102
    531e:	90 e0       	ldi	r25, 0x00	; 0
    5320:	64 e3       	ldi	r22, 0x34	; 52
    5322:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5326:	56 c0       	rjmp	.+172    	; 0x53d4 <__stack+0x31d5>
			}
			else if((52 > category_size_4) && (52 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5328:	e3 e3       	ldi	r30, 0x33	; 51
    532a:	e9 15       	cp	r30, r9
    532c:	88 f0       	brcs	.+34     	; 0x5350 <__stack+0x3151>
    532e:	f3 e3       	ldi	r31, 0x33	; 51
    5330:	fa 15       	cp	r31, r10
    5332:	88 f4       	brcc	.+34     	; 0x5356 <__stack+0x3157>
    5334:	33 20       	and	r3, r3
    5336:	01 f1       	breq	.+64     	; 0x5378 <__stack+0x3179>
			{
				//USART_putstring("52C5 ");				// comment this out in final product
				vote_indicator_52 = 1;					// Indicating button 1 was pressed
    5338:	80 91 67 05 	lds	r24, 0x0567
    533c:	88 60       	ori	r24, 0x08	; 8
    533e:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat5--;
    5342:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 52);
				deactivate_category_buttons_and_save(button52_addr, 52);  // provide starting and ending buttons as arguments
    5344:	86 e6       	ldi	r24, 0x66	; 102
    5346:	90 e0       	ldi	r25, 0x00	; 0
    5348:	64 e3       	ldi	r22, 0x34	; 52
    534a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    534e:	42 c0       	rjmp	.+132    	; 0x53d4 <__stack+0x31d5>
			}
			else if((52 > category_size_5) && (52 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5350:	83 e3       	ldi	r24, 0x33	; 51
    5352:	8a 15       	cp	r24, r10
    5354:	88 f0       	brcs	.+34     	; 0x5378 <__stack+0x3179>
    5356:	93 e3       	ldi	r25, 0x33	; 51
    5358:	98 15       	cp	r25, r8
    535a:	88 f4       	brcc	.+34     	; 0x537e <__stack+0x317f>
    535c:	11 23       	and	r17, r17
    535e:	01 f1       	breq	.+64     	; 0x53a0 <__stack+0x31a1>
			{
				//USART_putstring("52C6 ");				// comment this out in final product
				vote_indicator_52 = 1;					// Indicating button 1 was pressed
    5360:	80 91 67 05 	lds	r24, 0x0567
    5364:	88 60       	ori	r24, 0x08	; 8
    5366:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat6--;
    536a:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 52);
				deactivate_category_buttons_and_save(button52_addr, 52);  // provide starting and ending buttons as arguments
    536c:	86 e6       	ldi	r24, 0x66	; 102
    536e:	90 e0       	ldi	r25, 0x00	; 0
    5370:	64 e3       	ldi	r22, 0x34	; 52
    5372:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5376:	2e c0       	rjmp	.+92     	; 0x53d4 <__stack+0x31d5>
			}
			else if((52 > category_size_6) && (52 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5378:	a3 e3       	ldi	r26, 0x33	; 51
    537a:	a8 15       	cp	r26, r8
    537c:	88 f0       	brcs	.+34     	; 0x53a0 <__stack+0x31a1>
    537e:	b3 e3       	ldi	r27, 0x33	; 51
    5380:	b6 15       	cp	r27, r6
    5382:	70 f4       	brcc	.+28     	; 0x53a0 <__stack+0x31a1>
    5384:	00 23       	and	r16, r16
    5386:	61 f0       	breq	.+24     	; 0x53a0 <__stack+0x31a1>
			{
				//USART_putstring("52C7 ");				// comment this out in final product
				vote_indicator_52 = 1;					// Indicating button 1 was pressed
    5388:	80 91 67 05 	lds	r24, 0x0567
    538c:	88 60       	ori	r24, 0x08	; 8
    538e:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat7--;
    5392:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 52);
				deactivate_category_buttons_and_save(button52_addr, 52);  // provide starting and ending buttons as arguments
    5394:	86 e6       	ldi	r24, 0x66	; 102
    5396:	90 e0       	ldi	r25, 0x00	; 0
    5398:	64 e3       	ldi	r22, 0x34	; 52
    539a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    539e:	1a c0       	rjmp	.+52     	; 0x53d4 <__stack+0x31d5>
				//vote_indicator_52 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 52);
				//deactivate_category_buttons_and_save(button52_addr, 52);  // provide starting and ending buttons as arguments
			//}
			else if ((52 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    53a0:	80 91 64 05 	lds	r24, 0x0564
    53a4:	90 91 65 05 	lds	r25, 0x0565
    53a8:	84 33       	cpi	r24, 0x34	; 52
    53aa:	91 05       	cpc	r25, r1
    53ac:	98 f4       	brcc	.+38     	; 0x53d4 <__stack+0x31d5>
    53ae:	80 91 48 08 	lds	r24, 0x0848
    53b2:	88 23       	and	r24, r24
    53b4:	79 f0       	breq	.+30     	; 0x53d4 <__stack+0x31d5>
			{
				//USART_putstring("52G ");		// comment this out in final product
				vote_indicator_52 = 1;			// Indicating button 1 was pressed
    53b6:	80 91 67 05 	lds	r24, 0x0567
    53ba:	88 60       	ori	r24, 0x08	; 8
    53bc:	80 93 67 05 	sts	0x0567, r24
				deactivate_category_buttons_and_save(button52_addr, 52);
    53c0:	86 e6       	ldi	r24, 0x66	; 102
    53c2:	90 e0       	ldi	r25, 0x00	; 0
    53c4:	64 e3       	ldi	r22, 0x34	; 52
    53c6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 52);
				gen_vote_count--;
    53ca:	80 91 48 08 	lds	r24, 0x0848
    53ce:	81 50       	subi	r24, 0x01	; 1
    53d0:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x04) && (53 <= candidate_count) && vote_indicator_53 == 0)
    53d4:	86 b1       	in	r24, 0x06	; 6
    53d6:	80 fd       	sbrc	r24, 0
    53d8:	80 c0       	rjmp	.+256    	; 0x54da <__stack+0x32db>
    53da:	86 b1       	in	r24, 0x06	; 6
    53dc:	81 fd       	sbrc	r24, 1
    53de:	7d c0       	rjmp	.+250    	; 0x54da <__stack+0x32db>
    53e0:	86 b1       	in	r24, 0x06	; 6
    53e2:	82 fd       	sbrc	r24, 2
    53e4:	7a c0       	rjmp	.+244    	; 0x54da <__stack+0x32db>
    53e6:	86 b1       	in	r24, 0x06	; 6
    53e8:	83 ff       	sbrs	r24, 3
    53ea:	77 c0       	rjmp	.+238    	; 0x54da <__stack+0x32db>
    53ec:	83 b1       	in	r24, 0x03	; 3
    53ee:	8f 70       	andi	r24, 0x0F	; 15
    53f0:	84 30       	cpi	r24, 0x04	; 4
    53f2:	09 f0       	breq	.+2      	; 0x53f6 <__stack+0x31f7>
    53f4:	72 c0       	rjmp	.+228    	; 0x54da <__stack+0x32db>
    53f6:	80 91 f6 05 	lds	r24, 0x05F6
    53fa:	85 33       	cpi	r24, 0x35	; 53
    53fc:	08 f4       	brcc	.+2      	; 0x5400 <__stack+0x3201>
    53fe:	6d c0       	rjmp	.+218    	; 0x54da <__stack+0x32db>
    5400:	80 91 67 05 	lds	r24, 0x0567
    5404:	84 fd       	sbrc	r24, 4
    5406:	69 c0       	rjmp	.+210    	; 0x54da <__stack+0x32db>
				//vote_indicator_53 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 53);
				//deactivate_category_buttons_and_save(button53_addr, 53);  // provide starting and ending buttons as arguments
			//}
			if((53 > category_size_3) && (53 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    5408:	e4 e3       	ldi	r30, 0x34	; 52
    540a:	e7 15       	cp	r30, r7
    540c:	80 f0       	brcs	.+32     	; 0x542e <__stack+0x322f>
    540e:	e9 15       	cp	r30, r9
    5410:	88 f4       	brcc	.+34     	; 0x5434 <__stack+0x3235>
    5412:	22 20       	and	r2, r2
    5414:	01 f1       	breq	.+64     	; 0x5456 <__stack+0x3257>
			{
				//USART_putstring("53C4 ");				// comment this out in final product
				vote_indicator_53 = 1;					// Indicating button 1 was pressed
    5416:	80 91 67 05 	lds	r24, 0x0567
    541a:	80 61       	ori	r24, 0x10	; 16
    541c:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat4--;
    5420:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 53);
				deactivate_category_buttons_and_save(button53_addr, 53);  // provide starting and ending buttons as arguments
    5422:	88 e6       	ldi	r24, 0x68	; 104
    5424:	90 e0       	ldi	r25, 0x00	; 0
    5426:	65 e3       	ldi	r22, 0x35	; 53
    5428:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    542c:	56 c0       	rjmp	.+172    	; 0x54da <__stack+0x32db>
			}
			else if((53 > category_size_4) && (53 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    542e:	f4 e3       	ldi	r31, 0x34	; 52
    5430:	f9 15       	cp	r31, r9
    5432:	88 f0       	brcs	.+34     	; 0x5456 <__stack+0x3257>
    5434:	84 e3       	ldi	r24, 0x34	; 52
    5436:	8a 15       	cp	r24, r10
    5438:	88 f4       	brcc	.+34     	; 0x545c <__stack+0x325d>
    543a:	33 20       	and	r3, r3
    543c:	01 f1       	breq	.+64     	; 0x547e <__stack+0x327f>
			{
				//USART_putstring("53C5 ");				// comment this out in final product
				vote_indicator_53 = 1;					// Indicating button 1 was pressed
    543e:	80 91 67 05 	lds	r24, 0x0567
    5442:	80 61       	ori	r24, 0x10	; 16
    5444:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat5--;
    5448:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 53);
				deactivate_category_buttons_and_save(button53_addr, 53);  // provide starting and ending buttons as arguments
    544a:	88 e6       	ldi	r24, 0x68	; 104
    544c:	90 e0       	ldi	r25, 0x00	; 0
    544e:	65 e3       	ldi	r22, 0x35	; 53
    5450:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5454:	42 c0       	rjmp	.+132    	; 0x54da <__stack+0x32db>
			}
			else if((53 > category_size_5) && (53 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5456:	94 e3       	ldi	r25, 0x34	; 52
    5458:	9a 15       	cp	r25, r10
    545a:	88 f0       	brcs	.+34     	; 0x547e <__stack+0x327f>
    545c:	a4 e3       	ldi	r26, 0x34	; 52
    545e:	a8 15       	cp	r26, r8
    5460:	88 f4       	brcc	.+34     	; 0x5484 <__stack+0x3285>
    5462:	11 23       	and	r17, r17
    5464:	01 f1       	breq	.+64     	; 0x54a6 <__stack+0x32a7>
			{
				//USART_putstring("53C6 ");				// comment this out in final product
				vote_indicator_53 = 1;					// Indicating button 1 was pressed
    5466:	80 91 67 05 	lds	r24, 0x0567
    546a:	80 61       	ori	r24, 0x10	; 16
    546c:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat6--;
    5470:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 53);
				deactivate_category_buttons_and_save(button53_addr, 53);  // provide starting and ending buttons as arguments
    5472:	88 e6       	ldi	r24, 0x68	; 104
    5474:	90 e0       	ldi	r25, 0x00	; 0
    5476:	65 e3       	ldi	r22, 0x35	; 53
    5478:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    547c:	2e c0       	rjmp	.+92     	; 0x54da <__stack+0x32db>
			}
			else if((53 > category_size_6) && (53 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    547e:	b4 e3       	ldi	r27, 0x34	; 52
    5480:	b8 15       	cp	r27, r8
    5482:	88 f0       	brcs	.+34     	; 0x54a6 <__stack+0x32a7>
    5484:	e4 e3       	ldi	r30, 0x34	; 52
    5486:	e6 15       	cp	r30, r6
    5488:	70 f4       	brcc	.+28     	; 0x54a6 <__stack+0x32a7>
    548a:	00 23       	and	r16, r16
    548c:	61 f0       	breq	.+24     	; 0x54a6 <__stack+0x32a7>
			{
				//USART_putstring("53C7 ");				// comment this out in final product
				vote_indicator_53 = 1;					// Indicating button 1 was pressed
    548e:	80 91 67 05 	lds	r24, 0x0567
    5492:	80 61       	ori	r24, 0x10	; 16
    5494:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat7--;
    5498:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 53);
				deactivate_category_buttons_and_save(button53_addr, 53);  // provide starting and ending buttons as arguments
    549a:	88 e6       	ldi	r24, 0x68	; 104
    549c:	90 e0       	ldi	r25, 0x00	; 0
    549e:	65 e3       	ldi	r22, 0x35	; 53
    54a0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    54a4:	1a c0       	rjmp	.+52     	; 0x54da <__stack+0x32db>
				//vote_indicator_53 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 53);
				//deactivate_category_buttons_and_save(button53_addr, 53);  // provide starting and ending buttons as arguments
			//}
			else if ((53 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    54a6:	80 91 64 05 	lds	r24, 0x0564
    54aa:	90 91 65 05 	lds	r25, 0x0565
    54ae:	85 33       	cpi	r24, 0x35	; 53
    54b0:	91 05       	cpc	r25, r1
    54b2:	98 f4       	brcc	.+38     	; 0x54da <__stack+0x32db>
    54b4:	80 91 48 08 	lds	r24, 0x0848
    54b8:	88 23       	and	r24, r24
    54ba:	79 f0       	breq	.+30     	; 0x54da <__stack+0x32db>
			{
				//USART_putstring("53G ");		// comment this out in final product
				vote_indicator_53 = 1;			// Indicating button 1 was pressed
    54bc:	80 91 67 05 	lds	r24, 0x0567
    54c0:	80 61       	ori	r24, 0x10	; 16
    54c2:	80 93 67 05 	sts	0x0567, r24
				deactivate_category_buttons_and_save(button53_addr, 53);
    54c6:	88 e6       	ldi	r24, 0x68	; 104
    54c8:	90 e0       	ldi	r25, 0x00	; 0
    54ca:	65 e3       	ldi	r22, 0x35	; 53
    54cc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 53);
				gen_vote_count--;
    54d0:	80 91 48 08 	lds	r24, 0x0848
    54d4:	81 50       	subi	r24, 0x01	; 1
    54d6:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x05) && (54 <= candidate_count) && vote_indicator_54 == 0)
    54da:	86 b1       	in	r24, 0x06	; 6
    54dc:	80 fd       	sbrc	r24, 0
    54de:	80 c0       	rjmp	.+256    	; 0x55e0 <__stack+0x33e1>
    54e0:	86 b1       	in	r24, 0x06	; 6
    54e2:	81 fd       	sbrc	r24, 1
    54e4:	7d c0       	rjmp	.+250    	; 0x55e0 <__stack+0x33e1>
    54e6:	86 b1       	in	r24, 0x06	; 6
    54e8:	82 fd       	sbrc	r24, 2
    54ea:	7a c0       	rjmp	.+244    	; 0x55e0 <__stack+0x33e1>
    54ec:	86 b1       	in	r24, 0x06	; 6
    54ee:	83 ff       	sbrs	r24, 3
    54f0:	77 c0       	rjmp	.+238    	; 0x55e0 <__stack+0x33e1>
    54f2:	83 b1       	in	r24, 0x03	; 3
    54f4:	8f 70       	andi	r24, 0x0F	; 15
    54f6:	85 30       	cpi	r24, 0x05	; 5
    54f8:	09 f0       	breq	.+2      	; 0x54fc <__stack+0x32fd>
    54fa:	72 c0       	rjmp	.+228    	; 0x55e0 <__stack+0x33e1>
    54fc:	80 91 f6 05 	lds	r24, 0x05F6
    5500:	86 33       	cpi	r24, 0x36	; 54
    5502:	08 f4       	brcc	.+2      	; 0x5506 <__stack+0x3307>
    5504:	6d c0       	rjmp	.+218    	; 0x55e0 <__stack+0x33e1>
    5506:	80 91 67 05 	lds	r24, 0x0567
    550a:	85 fd       	sbrc	r24, 5
    550c:	69 c0       	rjmp	.+210    	; 0x55e0 <__stack+0x33e1>
				//vote_indicator_54 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 54);
				//deactivate_category_buttons_and_save(button54_addr, 54);  // provide starting and ending buttons as arguments
			//}
			if((54 > category_size_3) && (54 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    550e:	f5 e3       	ldi	r31, 0x35	; 53
    5510:	f7 15       	cp	r31, r7
    5512:	80 f0       	brcs	.+32     	; 0x5534 <__stack+0x3335>
    5514:	f9 15       	cp	r31, r9
    5516:	88 f4       	brcc	.+34     	; 0x553a <__stack+0x333b>
    5518:	22 20       	and	r2, r2
    551a:	01 f1       	breq	.+64     	; 0x555c <__stack+0x335d>
			{
				//USART_putstring("54C4 ");				// comment this out in final product
				vote_indicator_54 = 1;					// Indicating button 1 was pressed
    551c:	80 91 67 05 	lds	r24, 0x0567
    5520:	80 62       	ori	r24, 0x20	; 32
    5522:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat4--;
    5526:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 54);
				deactivate_category_buttons_and_save(button54_addr, 54);  // provide starting and ending buttons as arguments
    5528:	8a e6       	ldi	r24, 0x6A	; 106
    552a:	90 e0       	ldi	r25, 0x00	; 0
    552c:	66 e3       	ldi	r22, 0x36	; 54
    552e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5532:	56 c0       	rjmp	.+172    	; 0x55e0 <__stack+0x33e1>
			}
			else if((54 > category_size_4) && (54 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5534:	85 e3       	ldi	r24, 0x35	; 53
    5536:	89 15       	cp	r24, r9
    5538:	88 f0       	brcs	.+34     	; 0x555c <__stack+0x335d>
    553a:	95 e3       	ldi	r25, 0x35	; 53
    553c:	9a 15       	cp	r25, r10
    553e:	88 f4       	brcc	.+34     	; 0x5562 <__stack+0x3363>
    5540:	33 20       	and	r3, r3
    5542:	01 f1       	breq	.+64     	; 0x5584 <__stack+0x3385>
			{
				//USART_putstring("54C5 ");				// comment this out in final product
				vote_indicator_54 = 1;					// Indicating button 1 was pressed
    5544:	80 91 67 05 	lds	r24, 0x0567
    5548:	80 62       	ori	r24, 0x20	; 32
    554a:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat5--;
    554e:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 54);
				deactivate_category_buttons_and_save(button54_addr, 54);  // provide starting and ending buttons as arguments
    5550:	8a e6       	ldi	r24, 0x6A	; 106
    5552:	90 e0       	ldi	r25, 0x00	; 0
    5554:	66 e3       	ldi	r22, 0x36	; 54
    5556:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    555a:	42 c0       	rjmp	.+132    	; 0x55e0 <__stack+0x33e1>
			}
			else if((54 > category_size_5) && (54 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    555c:	a5 e3       	ldi	r26, 0x35	; 53
    555e:	aa 15       	cp	r26, r10
    5560:	88 f0       	brcs	.+34     	; 0x5584 <__stack+0x3385>
    5562:	b5 e3       	ldi	r27, 0x35	; 53
    5564:	b8 15       	cp	r27, r8
    5566:	88 f4       	brcc	.+34     	; 0x558a <__stack+0x338b>
    5568:	11 23       	and	r17, r17
    556a:	01 f1       	breq	.+64     	; 0x55ac <__stack+0x33ad>
			{
				//USART_putstring("54C6 ");				// comment this out in final product
				vote_indicator_54 = 1;					// Indicating button 1 was pressed
    556c:	80 91 67 05 	lds	r24, 0x0567
    5570:	80 62       	ori	r24, 0x20	; 32
    5572:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat6--;
    5576:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 54);
				deactivate_category_buttons_and_save(button54_addr, 54);  // provide starting and ending buttons as arguments
    5578:	8a e6       	ldi	r24, 0x6A	; 106
    557a:	90 e0       	ldi	r25, 0x00	; 0
    557c:	66 e3       	ldi	r22, 0x36	; 54
    557e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5582:	2e c0       	rjmp	.+92     	; 0x55e0 <__stack+0x33e1>
			}
			else if((54 > category_size_6) && (54 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5584:	e5 e3       	ldi	r30, 0x35	; 53
    5586:	e8 15       	cp	r30, r8
    5588:	88 f0       	brcs	.+34     	; 0x55ac <__stack+0x33ad>
    558a:	f5 e3       	ldi	r31, 0x35	; 53
    558c:	f6 15       	cp	r31, r6
    558e:	70 f4       	brcc	.+28     	; 0x55ac <__stack+0x33ad>
    5590:	00 23       	and	r16, r16
    5592:	61 f0       	breq	.+24     	; 0x55ac <__stack+0x33ad>
			{
				//USART_putstring("54C7 ");				// comment this out in final product
				vote_indicator_54 = 1;					// Indicating button 1 was pressed
    5594:	80 91 67 05 	lds	r24, 0x0567
    5598:	80 62       	ori	r24, 0x20	; 32
    559a:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat7--;
    559e:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 54);
				deactivate_category_buttons_and_save(button54_addr, 54);  // provide starting and ending buttons as arguments
    55a0:	8a e6       	ldi	r24, 0x6A	; 106
    55a2:	90 e0       	ldi	r25, 0x00	; 0
    55a4:	66 e3       	ldi	r22, 0x36	; 54
    55a6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    55aa:	1a c0       	rjmp	.+52     	; 0x55e0 <__stack+0x33e1>
				//vote_indicator_54 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 54);
				//deactivate_category_buttons_and_save(button54_addr, 54);  // provide starting and ending buttons as arguments
			//}
			else if ((54 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    55ac:	80 91 64 05 	lds	r24, 0x0564
    55b0:	90 91 65 05 	lds	r25, 0x0565
    55b4:	86 33       	cpi	r24, 0x36	; 54
    55b6:	91 05       	cpc	r25, r1
    55b8:	98 f4       	brcc	.+38     	; 0x55e0 <__stack+0x33e1>
    55ba:	80 91 48 08 	lds	r24, 0x0848
    55be:	88 23       	and	r24, r24
    55c0:	79 f0       	breq	.+30     	; 0x55e0 <__stack+0x33e1>
			{
				//USART_putstring("54G ");		// comment this out in final product
				vote_indicator_54 = 1;			// Indicating button 1 was pressed
    55c2:	80 91 67 05 	lds	r24, 0x0567
    55c6:	80 62       	ori	r24, 0x20	; 32
    55c8:	80 93 67 05 	sts	0x0567, r24
				deactivate_category_buttons_and_save(button54_addr, 54);
    55cc:	8a e6       	ldi	r24, 0x6A	; 106
    55ce:	90 e0       	ldi	r25, 0x00	; 0
    55d0:	66 e3       	ldi	r22, 0x36	; 54
    55d2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 54);
				gen_vote_count--;
    55d6:	80 91 48 08 	lds	r24, 0x0848
    55da:	81 50       	subi	r24, 0x01	; 1
    55dc:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x06) && (55 <= candidate_count) && vote_indicator_55 == 0)
    55e0:	86 b1       	in	r24, 0x06	; 6
    55e2:	80 fd       	sbrc	r24, 0
    55e4:	80 c0       	rjmp	.+256    	; 0x56e6 <__stack+0x34e7>
    55e6:	86 b1       	in	r24, 0x06	; 6
    55e8:	81 fd       	sbrc	r24, 1
    55ea:	7d c0       	rjmp	.+250    	; 0x56e6 <__stack+0x34e7>
    55ec:	86 b1       	in	r24, 0x06	; 6
    55ee:	82 fd       	sbrc	r24, 2
    55f0:	7a c0       	rjmp	.+244    	; 0x56e6 <__stack+0x34e7>
    55f2:	86 b1       	in	r24, 0x06	; 6
    55f4:	83 ff       	sbrs	r24, 3
    55f6:	77 c0       	rjmp	.+238    	; 0x56e6 <__stack+0x34e7>
    55f8:	83 b1       	in	r24, 0x03	; 3
    55fa:	8f 70       	andi	r24, 0x0F	; 15
    55fc:	86 30       	cpi	r24, 0x06	; 6
    55fe:	09 f0       	breq	.+2      	; 0x5602 <__stack+0x3403>
    5600:	72 c0       	rjmp	.+228    	; 0x56e6 <__stack+0x34e7>
    5602:	80 91 f6 05 	lds	r24, 0x05F6
    5606:	87 33       	cpi	r24, 0x37	; 55
    5608:	08 f4       	brcc	.+2      	; 0x560c <__stack+0x340d>
    560a:	6d c0       	rjmp	.+218    	; 0x56e6 <__stack+0x34e7>
    560c:	80 91 67 05 	lds	r24, 0x0567
    5610:	86 fd       	sbrc	r24, 6
    5612:	69 c0       	rjmp	.+210    	; 0x56e6 <__stack+0x34e7>
				//vote_indicator_55 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 55);
				//deactivate_category_buttons_and_save(button55_addr, 55);  // provide starting and ending buttons as arguments
			//}
			if((55 > category_size_3) && (55 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    5614:	86 e3       	ldi	r24, 0x36	; 54
    5616:	87 15       	cp	r24, r7
    5618:	80 f0       	brcs	.+32     	; 0x563a <__stack+0x343b>
    561a:	89 15       	cp	r24, r9
    561c:	88 f4       	brcc	.+34     	; 0x5640 <__stack+0x3441>
    561e:	22 20       	and	r2, r2
    5620:	01 f1       	breq	.+64     	; 0x5662 <__stack+0x3463>
			{
				//USART_putstring("55C4 ");				// comment this out in final product
				vote_indicator_55 = 1;					// Indicating button 1 was pressed
    5622:	80 91 67 05 	lds	r24, 0x0567
    5626:	80 64       	ori	r24, 0x40	; 64
    5628:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat4--;
    562c:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 55);
				deactivate_category_buttons_and_save(button55_addr, 55);  // provide starting and ending buttons as arguments
    562e:	8c e6       	ldi	r24, 0x6C	; 108
    5630:	90 e0       	ldi	r25, 0x00	; 0
    5632:	67 e3       	ldi	r22, 0x37	; 55
    5634:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5638:	56 c0       	rjmp	.+172    	; 0x56e6 <__stack+0x34e7>
			}
			else if((55 > category_size_4) && (55 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    563a:	96 e3       	ldi	r25, 0x36	; 54
    563c:	99 15       	cp	r25, r9
    563e:	88 f0       	brcs	.+34     	; 0x5662 <__stack+0x3463>
    5640:	a6 e3       	ldi	r26, 0x36	; 54
    5642:	aa 15       	cp	r26, r10
    5644:	88 f4       	brcc	.+34     	; 0x5668 <__stack+0x3469>
    5646:	33 20       	and	r3, r3
    5648:	01 f1       	breq	.+64     	; 0x568a <__stack+0x348b>
			{
				//USART_putstring("55C5 ");				// comment this out in final product
				vote_indicator_55 = 1;					// Indicating button 1 was pressed
    564a:	80 91 67 05 	lds	r24, 0x0567
    564e:	80 64       	ori	r24, 0x40	; 64
    5650:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat5--;
    5654:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 55);
				deactivate_category_buttons_and_save(button55_addr, 55);  // provide starting and ending buttons as arguments
    5656:	8c e6       	ldi	r24, 0x6C	; 108
    5658:	90 e0       	ldi	r25, 0x00	; 0
    565a:	67 e3       	ldi	r22, 0x37	; 55
    565c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5660:	42 c0       	rjmp	.+132    	; 0x56e6 <__stack+0x34e7>
			}
			else if((55 > category_size_5) && (55 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5662:	b6 e3       	ldi	r27, 0x36	; 54
    5664:	ba 15       	cp	r27, r10
    5666:	88 f0       	brcs	.+34     	; 0x568a <__stack+0x348b>
    5668:	e6 e3       	ldi	r30, 0x36	; 54
    566a:	e8 15       	cp	r30, r8
    566c:	88 f4       	brcc	.+34     	; 0x5690 <__stack+0x3491>
    566e:	11 23       	and	r17, r17
    5670:	01 f1       	breq	.+64     	; 0x56b2 <__stack+0x34b3>
			{
				//USART_putstring("55C6 ");				// comment this out in final product
				vote_indicator_55 = 1;					// Indicating button 1 was pressed
    5672:	80 91 67 05 	lds	r24, 0x0567
    5676:	80 64       	ori	r24, 0x40	; 64
    5678:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat6--;
    567c:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 55);
				deactivate_category_buttons_and_save(button55_addr, 55);  // provide starting and ending buttons as arguments
    567e:	8c e6       	ldi	r24, 0x6C	; 108
    5680:	90 e0       	ldi	r25, 0x00	; 0
    5682:	67 e3       	ldi	r22, 0x37	; 55
    5684:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5688:	2e c0       	rjmp	.+92     	; 0x56e6 <__stack+0x34e7>
			}
			else if((55 > category_size_6) && (55 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    568a:	f6 e3       	ldi	r31, 0x36	; 54
    568c:	f8 15       	cp	r31, r8
    568e:	88 f0       	brcs	.+34     	; 0x56b2 <__stack+0x34b3>
    5690:	86 e3       	ldi	r24, 0x36	; 54
    5692:	86 15       	cp	r24, r6
    5694:	70 f4       	brcc	.+28     	; 0x56b2 <__stack+0x34b3>
    5696:	00 23       	and	r16, r16
    5698:	61 f0       	breq	.+24     	; 0x56b2 <__stack+0x34b3>
			{
				//USART_putstring("55C7 ");				// comment this out in final product
				vote_indicator_55 = 1;					// Indicating button 1 was pressed
    569a:	80 91 67 05 	lds	r24, 0x0567
    569e:	80 64       	ori	r24, 0x40	; 64
    56a0:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat7--;
    56a4:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 55);
				deactivate_category_buttons_and_save(button55_addr, 55);  // provide starting and ending buttons as arguments
    56a6:	8c e6       	ldi	r24, 0x6C	; 108
    56a8:	90 e0       	ldi	r25, 0x00	; 0
    56aa:	67 e3       	ldi	r22, 0x37	; 55
    56ac:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    56b0:	1a c0       	rjmp	.+52     	; 0x56e6 <__stack+0x34e7>
				//vote_indicator_55 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 55);
				//deactivate_category_buttons_and_save(button55_addr, 55);  // provide starting and ending buttons as arguments
			//}
			else if ((55 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    56b2:	80 91 64 05 	lds	r24, 0x0564
    56b6:	90 91 65 05 	lds	r25, 0x0565
    56ba:	87 33       	cpi	r24, 0x37	; 55
    56bc:	91 05       	cpc	r25, r1
    56be:	98 f4       	brcc	.+38     	; 0x56e6 <__stack+0x34e7>
    56c0:	80 91 48 08 	lds	r24, 0x0848
    56c4:	88 23       	and	r24, r24
    56c6:	79 f0       	breq	.+30     	; 0x56e6 <__stack+0x34e7>
			{
				//USART_putstring("55G ");		// comment this out in final product
				vote_indicator_55 = 1;			// Indicating button 1 was pressed
    56c8:	80 91 67 05 	lds	r24, 0x0567
    56cc:	80 64       	ori	r24, 0x40	; 64
    56ce:	80 93 67 05 	sts	0x0567, r24
				deactivate_category_buttons_and_save(button55_addr, 55);
    56d2:	8c e6       	ldi	r24, 0x6C	; 108
    56d4:	90 e0       	ldi	r25, 0x00	; 0
    56d6:	67 e3       	ldi	r22, 0x37	; 55
    56d8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 55);
				gen_vote_count--;
    56dc:	80 91 48 08 	lds	r24, 0x0848
    56e0:	81 50       	subi	r24, 0x01	; 1
    56e2:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x07) && (56 <= candidate_count) && vote_indicator_56 == 0)
    56e6:	86 b1       	in	r24, 0x06	; 6
    56e8:	80 fd       	sbrc	r24, 0
    56ea:	81 c0       	rjmp	.+258    	; 0x57ee <__stack+0x35ef>
    56ec:	86 b1       	in	r24, 0x06	; 6
    56ee:	81 fd       	sbrc	r24, 1
    56f0:	7e c0       	rjmp	.+252    	; 0x57ee <__stack+0x35ef>
    56f2:	86 b1       	in	r24, 0x06	; 6
    56f4:	82 fd       	sbrc	r24, 2
    56f6:	7b c0       	rjmp	.+246    	; 0x57ee <__stack+0x35ef>
    56f8:	86 b1       	in	r24, 0x06	; 6
    56fa:	83 ff       	sbrs	r24, 3
    56fc:	78 c0       	rjmp	.+240    	; 0x57ee <__stack+0x35ef>
    56fe:	83 b1       	in	r24, 0x03	; 3
    5700:	8f 70       	andi	r24, 0x0F	; 15
    5702:	87 30       	cpi	r24, 0x07	; 7
    5704:	09 f0       	breq	.+2      	; 0x5708 <__stack+0x3509>
    5706:	73 c0       	rjmp	.+230    	; 0x57ee <__stack+0x35ef>
    5708:	80 91 f6 05 	lds	r24, 0x05F6
    570c:	88 33       	cpi	r24, 0x38	; 56
    570e:	08 f4       	brcc	.+2      	; 0x5712 <__stack+0x3513>
    5710:	6e c0       	rjmp	.+220    	; 0x57ee <__stack+0x35ef>
    5712:	80 91 67 05 	lds	r24, 0x0567
    5716:	88 23       	and	r24, r24
    5718:	0c f4       	brge	.+2      	; 0x571c <__stack+0x351d>
    571a:	69 c0       	rjmp	.+210    	; 0x57ee <__stack+0x35ef>
				//vote_indicator_56 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 56);
				//deactivate_category_buttons_and_save(button56_addr, 56);  // provide starting and ending buttons as arguments
			//}
			if((56 > category_size_3) && (56 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    571c:	97 e3       	ldi	r25, 0x37	; 55
    571e:	97 15       	cp	r25, r7
    5720:	80 f0       	brcs	.+32     	; 0x5742 <__stack+0x3543>
    5722:	99 15       	cp	r25, r9
    5724:	88 f4       	brcc	.+34     	; 0x5748 <__stack+0x3549>
    5726:	22 20       	and	r2, r2
    5728:	01 f1       	breq	.+64     	; 0x576a <__stack+0x356b>
			{
				//USART_putstring("56C4 ");				// comment this out in final product
				vote_indicator_56 = 1;					// Indicating button 1 was pressed
    572a:	80 91 67 05 	lds	r24, 0x0567
    572e:	80 68       	ori	r24, 0x80	; 128
    5730:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat4--;
    5734:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 56);
				deactivate_category_buttons_and_save(button56_addr, 56);  // provide starting and ending buttons as arguments
    5736:	8e e6       	ldi	r24, 0x6E	; 110
    5738:	90 e0       	ldi	r25, 0x00	; 0
    573a:	68 e3       	ldi	r22, 0x38	; 56
    573c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5740:	56 c0       	rjmp	.+172    	; 0x57ee <__stack+0x35ef>
			}
			else if((56 > category_size_4) && (56 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5742:	a7 e3       	ldi	r26, 0x37	; 55
    5744:	a9 15       	cp	r26, r9
    5746:	88 f0       	brcs	.+34     	; 0x576a <__stack+0x356b>
    5748:	b7 e3       	ldi	r27, 0x37	; 55
    574a:	ba 15       	cp	r27, r10
    574c:	88 f4       	brcc	.+34     	; 0x5770 <__stack+0x3571>
    574e:	33 20       	and	r3, r3
    5750:	01 f1       	breq	.+64     	; 0x5792 <__stack+0x3593>
			{
				//USART_putstring("56C5 ");				// comment this out in final product
				vote_indicator_56 = 1;					// Indicating button 1 was pressed
    5752:	80 91 67 05 	lds	r24, 0x0567
    5756:	80 68       	ori	r24, 0x80	; 128
    5758:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat5--;
    575c:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 56);
				deactivate_category_buttons_and_save(button56_addr, 56);  // provide starting and ending buttons as arguments
    575e:	8e e6       	ldi	r24, 0x6E	; 110
    5760:	90 e0       	ldi	r25, 0x00	; 0
    5762:	68 e3       	ldi	r22, 0x38	; 56
    5764:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5768:	42 c0       	rjmp	.+132    	; 0x57ee <__stack+0x35ef>
			}
			else if((56 > category_size_5) && (56 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    576a:	e7 e3       	ldi	r30, 0x37	; 55
    576c:	ea 15       	cp	r30, r10
    576e:	88 f0       	brcs	.+34     	; 0x5792 <__stack+0x3593>
    5770:	f7 e3       	ldi	r31, 0x37	; 55
    5772:	f8 15       	cp	r31, r8
    5774:	88 f4       	brcc	.+34     	; 0x5798 <__stack+0x3599>
    5776:	11 23       	and	r17, r17
    5778:	01 f1       	breq	.+64     	; 0x57ba <__stack+0x35bb>
			{
				//USART_putstring("56C6 ");				// comment this out in final product
				vote_indicator_56 = 1;					// Indicating button 1 was pressed
    577a:	80 91 67 05 	lds	r24, 0x0567
    577e:	80 68       	ori	r24, 0x80	; 128
    5780:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat6--;
    5784:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 56);
				deactivate_category_buttons_and_save(button56_addr, 56);  // provide starting and ending buttons as arguments
    5786:	8e e6       	ldi	r24, 0x6E	; 110
    5788:	90 e0       	ldi	r25, 0x00	; 0
    578a:	68 e3       	ldi	r22, 0x38	; 56
    578c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5790:	2e c0       	rjmp	.+92     	; 0x57ee <__stack+0x35ef>
			}
			else if((56 > category_size_6) && (56 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5792:	87 e3       	ldi	r24, 0x37	; 55
    5794:	88 15       	cp	r24, r8
    5796:	88 f0       	brcs	.+34     	; 0x57ba <__stack+0x35bb>
    5798:	97 e3       	ldi	r25, 0x37	; 55
    579a:	96 15       	cp	r25, r6
    579c:	70 f4       	brcc	.+28     	; 0x57ba <__stack+0x35bb>
    579e:	00 23       	and	r16, r16
    57a0:	61 f0       	breq	.+24     	; 0x57ba <__stack+0x35bb>
			{
				//USART_putstring("56C7 ");				// comment this out in final product
				vote_indicator_56 = 1;					// Indicating button 1 was pressed
    57a2:	80 91 67 05 	lds	r24, 0x0567
    57a6:	80 68       	ori	r24, 0x80	; 128
    57a8:	80 93 67 05 	sts	0x0567, r24
				no_of_votes_cat7--;
    57ac:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 56);
				deactivate_category_buttons_and_save(button56_addr, 56);  // provide starting and ending buttons as arguments
    57ae:	8e e6       	ldi	r24, 0x6E	; 110
    57b0:	90 e0       	ldi	r25, 0x00	; 0
    57b2:	68 e3       	ldi	r22, 0x38	; 56
    57b4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    57b8:	1a c0       	rjmp	.+52     	; 0x57ee <__stack+0x35ef>
				//vote_indicator_56 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 56);
				//deactivate_category_buttons_and_save(button56_addr, 56);  // provide starting and ending buttons as arguments
			//}
			else if ((56 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    57ba:	80 91 64 05 	lds	r24, 0x0564
    57be:	90 91 65 05 	lds	r25, 0x0565
    57c2:	88 33       	cpi	r24, 0x38	; 56
    57c4:	91 05       	cpc	r25, r1
    57c6:	98 f4       	brcc	.+38     	; 0x57ee <__stack+0x35ef>
    57c8:	80 91 48 08 	lds	r24, 0x0848
    57cc:	88 23       	and	r24, r24
    57ce:	79 f0       	breq	.+30     	; 0x57ee <__stack+0x35ef>
			{
				//USART_putstring("56G ");		// comment this out in final product
				vote_indicator_56 = 1;			// Indicating button 1 was pressed
    57d0:	80 91 67 05 	lds	r24, 0x0567
    57d4:	80 68       	ori	r24, 0x80	; 128
    57d6:	80 93 67 05 	sts	0x0567, r24
				deactivate_category_buttons_and_save(button56_addr, 56);
    57da:	8e e6       	ldi	r24, 0x6E	; 110
    57dc:	90 e0       	ldi	r25, 0x00	; 0
    57de:	68 e3       	ldi	r22, 0x38	; 56
    57e0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 56);
				gen_vote_count--;
    57e4:	80 91 48 08 	lds	r24, 0x0848
    57e8:	81 50       	subi	r24, 0x01	; 1
    57ea:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x08) && (57 <= candidate_count) && vote_indicator_57 == 0)
    57ee:	86 b1       	in	r24, 0x06	; 6
    57f0:	80 fd       	sbrc	r24, 0
    57f2:	80 c0       	rjmp	.+256    	; 0x58f4 <__stack+0x36f5>
    57f4:	86 b1       	in	r24, 0x06	; 6
    57f6:	81 fd       	sbrc	r24, 1
    57f8:	7d c0       	rjmp	.+250    	; 0x58f4 <__stack+0x36f5>
    57fa:	86 b1       	in	r24, 0x06	; 6
    57fc:	82 fd       	sbrc	r24, 2
    57fe:	7a c0       	rjmp	.+244    	; 0x58f4 <__stack+0x36f5>
    5800:	86 b1       	in	r24, 0x06	; 6
    5802:	83 ff       	sbrs	r24, 3
    5804:	77 c0       	rjmp	.+238    	; 0x58f4 <__stack+0x36f5>
    5806:	83 b1       	in	r24, 0x03	; 3
    5808:	8f 70       	andi	r24, 0x0F	; 15
    580a:	88 30       	cpi	r24, 0x08	; 8
    580c:	09 f0       	breq	.+2      	; 0x5810 <__stack+0x3611>
    580e:	72 c0       	rjmp	.+228    	; 0x58f4 <__stack+0x36f5>
    5810:	80 91 f6 05 	lds	r24, 0x05F6
    5814:	89 33       	cpi	r24, 0x39	; 57
    5816:	08 f4       	brcc	.+2      	; 0x581a <__stack+0x361b>
    5818:	6d c0       	rjmp	.+218    	; 0x58f4 <__stack+0x36f5>
    581a:	80 91 54 08 	lds	r24, 0x0854
    581e:	80 fd       	sbrc	r24, 0
    5820:	69 c0       	rjmp	.+210    	; 0x58f4 <__stack+0x36f5>
				//vote_indicator_57 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 57);
				//deactivate_category_buttons_and_save(button57_addr, 57);  // provide starting and ending buttons as arguments
			//}
			if((57 > category_size_3) && (57 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    5822:	a8 e3       	ldi	r26, 0x38	; 56
    5824:	a7 15       	cp	r26, r7
    5826:	80 f0       	brcs	.+32     	; 0x5848 <__stack+0x3649>
    5828:	a9 15       	cp	r26, r9
    582a:	88 f4       	brcc	.+34     	; 0x584e <__stack+0x364f>
    582c:	22 20       	and	r2, r2
    582e:	01 f1       	breq	.+64     	; 0x5870 <__stack+0x3671>
			{
				//USART_putstring("57C4 ");				// comment this out in final product
				vote_indicator_57 = 1;					// Indicating button 1 was pressed
    5830:	80 91 54 08 	lds	r24, 0x0854
    5834:	81 60       	ori	r24, 0x01	; 1
    5836:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat4--;
    583a:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 57);
				deactivate_category_buttons_and_save(button57_addr, 57);  // provide starting and ending buttons as arguments
    583c:	80 e7       	ldi	r24, 0x70	; 112
    583e:	90 e0       	ldi	r25, 0x00	; 0
    5840:	69 e3       	ldi	r22, 0x39	; 57
    5842:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5846:	56 c0       	rjmp	.+172    	; 0x58f4 <__stack+0x36f5>
			}
			else if((57 > category_size_4) && (57 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5848:	b8 e3       	ldi	r27, 0x38	; 56
    584a:	b9 15       	cp	r27, r9
    584c:	88 f0       	brcs	.+34     	; 0x5870 <__stack+0x3671>
    584e:	e8 e3       	ldi	r30, 0x38	; 56
    5850:	ea 15       	cp	r30, r10
    5852:	88 f4       	brcc	.+34     	; 0x5876 <__stack+0x3677>
    5854:	33 20       	and	r3, r3
    5856:	01 f1       	breq	.+64     	; 0x5898 <__stack+0x3699>
			{
				//USART_putstring("57C5 ");				// comment this out in final product
				vote_indicator_57 = 1;					// Indicating button 1 was pressed
    5858:	80 91 54 08 	lds	r24, 0x0854
    585c:	81 60       	ori	r24, 0x01	; 1
    585e:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat5--;
    5862:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 57);
				deactivate_category_buttons_and_save(button57_addr, 57);  // provide starting and ending buttons as arguments
    5864:	80 e7       	ldi	r24, 0x70	; 112
    5866:	90 e0       	ldi	r25, 0x00	; 0
    5868:	69 e3       	ldi	r22, 0x39	; 57
    586a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    586e:	42 c0       	rjmp	.+132    	; 0x58f4 <__stack+0x36f5>
			}
			else if((57 > category_size_5) && (57 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5870:	f8 e3       	ldi	r31, 0x38	; 56
    5872:	fa 15       	cp	r31, r10
    5874:	88 f0       	brcs	.+34     	; 0x5898 <__stack+0x3699>
    5876:	88 e3       	ldi	r24, 0x38	; 56
    5878:	88 15       	cp	r24, r8
    587a:	88 f4       	brcc	.+34     	; 0x589e <__stack+0x369f>
    587c:	11 23       	and	r17, r17
    587e:	01 f1       	breq	.+64     	; 0x58c0 <__stack+0x36c1>
			{
				//USART_putstring("57C6 ");				// comment this out in final product
				vote_indicator_57 = 1;					// Indicating button 1 was pressed
    5880:	80 91 54 08 	lds	r24, 0x0854
    5884:	81 60       	ori	r24, 0x01	; 1
    5886:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat6--;
    588a:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 57);
				deactivate_category_buttons_and_save(button57_addr, 57);  // provide starting and ending buttons as arguments
    588c:	80 e7       	ldi	r24, 0x70	; 112
    588e:	90 e0       	ldi	r25, 0x00	; 0
    5890:	69 e3       	ldi	r22, 0x39	; 57
    5892:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5896:	2e c0       	rjmp	.+92     	; 0x58f4 <__stack+0x36f5>
			}
			else if((57 > category_size_6) && (57 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5898:	98 e3       	ldi	r25, 0x38	; 56
    589a:	98 15       	cp	r25, r8
    589c:	88 f0       	brcs	.+34     	; 0x58c0 <__stack+0x36c1>
    589e:	a8 e3       	ldi	r26, 0x38	; 56
    58a0:	a6 15       	cp	r26, r6
    58a2:	70 f4       	brcc	.+28     	; 0x58c0 <__stack+0x36c1>
    58a4:	00 23       	and	r16, r16
    58a6:	61 f0       	breq	.+24     	; 0x58c0 <__stack+0x36c1>
			{
				//USART_putstring("57C7 ");				// comment this out in final product
				vote_indicator_57 = 1;					// Indicating button 1 was pressed
    58a8:	80 91 54 08 	lds	r24, 0x0854
    58ac:	81 60       	ori	r24, 0x01	; 1
    58ae:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat7--;
    58b2:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 57);
				deactivate_category_buttons_and_save(button57_addr, 57);  // provide starting and ending buttons as arguments
    58b4:	80 e7       	ldi	r24, 0x70	; 112
    58b6:	90 e0       	ldi	r25, 0x00	; 0
    58b8:	69 e3       	ldi	r22, 0x39	; 57
    58ba:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    58be:	1a c0       	rjmp	.+52     	; 0x58f4 <__stack+0x36f5>
				//vote_indicator_57 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 57);
				//deactivate_category_buttons_and_save(button57_addr, 57);  // provide starting and ending buttons as arguments
			//}
			else if ((57 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    58c0:	80 91 64 05 	lds	r24, 0x0564
    58c4:	90 91 65 05 	lds	r25, 0x0565
    58c8:	89 33       	cpi	r24, 0x39	; 57
    58ca:	91 05       	cpc	r25, r1
    58cc:	98 f4       	brcc	.+38     	; 0x58f4 <__stack+0x36f5>
    58ce:	80 91 48 08 	lds	r24, 0x0848
    58d2:	88 23       	and	r24, r24
    58d4:	79 f0       	breq	.+30     	; 0x58f4 <__stack+0x36f5>
			{
				//USART_putstring("57G ");		// comment this out in final product
				vote_indicator_57 = 1;			// Indicating button 1 was pressed
    58d6:	80 91 54 08 	lds	r24, 0x0854
    58da:	81 60       	ori	r24, 0x01	; 1
    58dc:	80 93 54 08 	sts	0x0854, r24
				deactivate_category_buttons_and_save(button57_addr, 57);
    58e0:	80 e7       	ldi	r24, 0x70	; 112
    58e2:	90 e0       	ldi	r25, 0x00	; 0
    58e4:	69 e3       	ldi	r22, 0x39	; 57
    58e6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 57);
				gen_vote_count--;
    58ea:	80 91 48 08 	lds	r24, 0x0848
    58ee:	81 50       	subi	r24, 0x01	; 1
    58f0:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x09) && (58 <= candidate_count) && vote_indicator_58 == 0)
    58f4:	86 b1       	in	r24, 0x06	; 6
    58f6:	80 fd       	sbrc	r24, 0
    58f8:	80 c0       	rjmp	.+256    	; 0x59fa <__stack+0x37fb>
    58fa:	86 b1       	in	r24, 0x06	; 6
    58fc:	81 fd       	sbrc	r24, 1
    58fe:	7d c0       	rjmp	.+250    	; 0x59fa <__stack+0x37fb>
    5900:	86 b1       	in	r24, 0x06	; 6
    5902:	82 fd       	sbrc	r24, 2
    5904:	7a c0       	rjmp	.+244    	; 0x59fa <__stack+0x37fb>
    5906:	86 b1       	in	r24, 0x06	; 6
    5908:	83 ff       	sbrs	r24, 3
    590a:	77 c0       	rjmp	.+238    	; 0x59fa <__stack+0x37fb>
    590c:	83 b1       	in	r24, 0x03	; 3
    590e:	8f 70       	andi	r24, 0x0F	; 15
    5910:	89 30       	cpi	r24, 0x09	; 9
    5912:	09 f0       	breq	.+2      	; 0x5916 <__stack+0x3717>
    5914:	72 c0       	rjmp	.+228    	; 0x59fa <__stack+0x37fb>
    5916:	80 91 f6 05 	lds	r24, 0x05F6
    591a:	8a 33       	cpi	r24, 0x3A	; 58
    591c:	08 f4       	brcc	.+2      	; 0x5920 <__stack+0x3721>
    591e:	6d c0       	rjmp	.+218    	; 0x59fa <__stack+0x37fb>
    5920:	80 91 54 08 	lds	r24, 0x0854
    5924:	81 fd       	sbrc	r24, 1
    5926:	69 c0       	rjmp	.+210    	; 0x59fa <__stack+0x37fb>
				//vote_indicator_58 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 58);
				//deactivate_category_buttons_and_save(button58_addr, 58);  // provide starting and ending buttons as arguments
			//}
			if((58 > category_size_3) && (58 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    5928:	b9 e3       	ldi	r27, 0x39	; 57
    592a:	b7 15       	cp	r27, r7
    592c:	80 f0       	brcs	.+32     	; 0x594e <__stack+0x374f>
    592e:	b9 15       	cp	r27, r9
    5930:	88 f4       	brcc	.+34     	; 0x5954 <__stack+0x3755>
    5932:	22 20       	and	r2, r2
    5934:	01 f1       	breq	.+64     	; 0x5976 <__stack+0x3777>
			{
				//USART_putstring("58C4 ");				// comment this out in final product
				vote_indicator_58 = 1;					// Indicating button 1 was pressed
    5936:	80 91 54 08 	lds	r24, 0x0854
    593a:	82 60       	ori	r24, 0x02	; 2
    593c:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat4--;
    5940:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 58);
				deactivate_category_buttons_and_save(button58_addr, 58);  // provide starting and ending buttons as arguments
    5942:	82 e7       	ldi	r24, 0x72	; 114
    5944:	90 e0       	ldi	r25, 0x00	; 0
    5946:	6a e3       	ldi	r22, 0x3A	; 58
    5948:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    594c:	56 c0       	rjmp	.+172    	; 0x59fa <__stack+0x37fb>
			}
			else if((58 > category_size_4) && (58 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    594e:	e9 e3       	ldi	r30, 0x39	; 57
    5950:	e9 15       	cp	r30, r9
    5952:	88 f0       	brcs	.+34     	; 0x5976 <__stack+0x3777>
    5954:	f9 e3       	ldi	r31, 0x39	; 57
    5956:	fa 15       	cp	r31, r10
    5958:	88 f4       	brcc	.+34     	; 0x597c <__stack+0x377d>
    595a:	33 20       	and	r3, r3
    595c:	01 f1       	breq	.+64     	; 0x599e <__stack+0x379f>
			{
				//USART_putstring("58C5 ");				// comment this out in final product
				vote_indicator_58 = 1;					// Indicating button 1 was pressed
    595e:	80 91 54 08 	lds	r24, 0x0854
    5962:	82 60       	ori	r24, 0x02	; 2
    5964:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat5--;
    5968:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 58);
				deactivate_category_buttons_and_save(button58_addr, 58);  // provide starting and ending buttons as arguments
    596a:	82 e7       	ldi	r24, 0x72	; 114
    596c:	90 e0       	ldi	r25, 0x00	; 0
    596e:	6a e3       	ldi	r22, 0x3A	; 58
    5970:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5974:	42 c0       	rjmp	.+132    	; 0x59fa <__stack+0x37fb>
			}
			else if((58 > category_size_5) && (58 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5976:	89 e3       	ldi	r24, 0x39	; 57
    5978:	8a 15       	cp	r24, r10
    597a:	88 f0       	brcs	.+34     	; 0x599e <__stack+0x379f>
    597c:	99 e3       	ldi	r25, 0x39	; 57
    597e:	98 15       	cp	r25, r8
    5980:	88 f4       	brcc	.+34     	; 0x59a4 <__stack+0x37a5>
    5982:	11 23       	and	r17, r17
    5984:	01 f1       	breq	.+64     	; 0x59c6 <__stack+0x37c7>
			{
				//USART_putstring("58C6 ");				// comment this out in final product
				vote_indicator_58 = 1;					// Indicating button 1 was pressed
    5986:	80 91 54 08 	lds	r24, 0x0854
    598a:	82 60       	ori	r24, 0x02	; 2
    598c:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat6--;
    5990:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 58);
				deactivate_category_buttons_and_save(button58_addr, 58);  // provide starting and ending buttons as arguments
    5992:	82 e7       	ldi	r24, 0x72	; 114
    5994:	90 e0       	ldi	r25, 0x00	; 0
    5996:	6a e3       	ldi	r22, 0x3A	; 58
    5998:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    599c:	2e c0       	rjmp	.+92     	; 0x59fa <__stack+0x37fb>
			}
			else if((58 > category_size_6) && (58 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    599e:	a9 e3       	ldi	r26, 0x39	; 57
    59a0:	a8 15       	cp	r26, r8
    59a2:	88 f0       	brcs	.+34     	; 0x59c6 <__stack+0x37c7>
    59a4:	b9 e3       	ldi	r27, 0x39	; 57
    59a6:	b6 15       	cp	r27, r6
    59a8:	70 f4       	brcc	.+28     	; 0x59c6 <__stack+0x37c7>
    59aa:	00 23       	and	r16, r16
    59ac:	61 f0       	breq	.+24     	; 0x59c6 <__stack+0x37c7>
			{
				//USART_putstring("58C7 ");				// comment this out in final product
				vote_indicator_58 = 1;					// Indicating button 1 was pressed
    59ae:	80 91 54 08 	lds	r24, 0x0854
    59b2:	82 60       	ori	r24, 0x02	; 2
    59b4:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat7--;
    59b8:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 58);
				deactivate_category_buttons_and_save(button58_addr, 58);  // provide starting and ending buttons as arguments
    59ba:	82 e7       	ldi	r24, 0x72	; 114
    59bc:	90 e0       	ldi	r25, 0x00	; 0
    59be:	6a e3       	ldi	r22, 0x3A	; 58
    59c0:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    59c4:	1a c0       	rjmp	.+52     	; 0x59fa <__stack+0x37fb>
				//vote_indicator_58 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 58);
				//deactivate_category_buttons_and_save(button58_addr, 58);  // provide starting and ending buttons as arguments
			//}
			else if ((58 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    59c6:	80 91 64 05 	lds	r24, 0x0564
    59ca:	90 91 65 05 	lds	r25, 0x0565
    59ce:	8a 33       	cpi	r24, 0x3A	; 58
    59d0:	91 05       	cpc	r25, r1
    59d2:	98 f4       	brcc	.+38     	; 0x59fa <__stack+0x37fb>
    59d4:	80 91 48 08 	lds	r24, 0x0848
    59d8:	88 23       	and	r24, r24
    59da:	79 f0       	breq	.+30     	; 0x59fa <__stack+0x37fb>
			{
				//USART_putstring("58G ");		// comment this out in final product
				vote_indicator_58 = 1;			// Indicating button 1 was pressed
    59dc:	80 91 54 08 	lds	r24, 0x0854
    59e0:	82 60       	ori	r24, 0x02	; 2
    59e2:	80 93 54 08 	sts	0x0854, r24
				deactivate_category_buttons_and_save(button58_addr, 58);
    59e6:	82 e7       	ldi	r24, 0x72	; 114
    59e8:	90 e0       	ldi	r25, 0x00	; 0
    59ea:	6a e3       	ldi	r22, 0x3A	; 58
    59ec:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 58);
				gen_vote_count--;
    59f0:	80 91 48 08 	lds	r24, 0x0848
    59f4:	81 50       	subi	r24, 0x01	; 1
    59f6:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x0A) && (59 <= candidate_count) && vote_indicator_59 == 0)
    59fa:	86 b1       	in	r24, 0x06	; 6
    59fc:	80 fd       	sbrc	r24, 0
    59fe:	80 c0       	rjmp	.+256    	; 0x5b00 <__stack+0x3901>
    5a00:	86 b1       	in	r24, 0x06	; 6
    5a02:	81 fd       	sbrc	r24, 1
    5a04:	7d c0       	rjmp	.+250    	; 0x5b00 <__stack+0x3901>
    5a06:	86 b1       	in	r24, 0x06	; 6
    5a08:	82 fd       	sbrc	r24, 2
    5a0a:	7a c0       	rjmp	.+244    	; 0x5b00 <__stack+0x3901>
    5a0c:	86 b1       	in	r24, 0x06	; 6
    5a0e:	83 ff       	sbrs	r24, 3
    5a10:	77 c0       	rjmp	.+238    	; 0x5b00 <__stack+0x3901>
    5a12:	83 b1       	in	r24, 0x03	; 3
    5a14:	8f 70       	andi	r24, 0x0F	; 15
    5a16:	8a 30       	cpi	r24, 0x0A	; 10
    5a18:	09 f0       	breq	.+2      	; 0x5a1c <__stack+0x381d>
    5a1a:	72 c0       	rjmp	.+228    	; 0x5b00 <__stack+0x3901>
    5a1c:	80 91 f6 05 	lds	r24, 0x05F6
    5a20:	8b 33       	cpi	r24, 0x3B	; 59
    5a22:	08 f4       	brcc	.+2      	; 0x5a26 <__stack+0x3827>
    5a24:	6d c0       	rjmp	.+218    	; 0x5b00 <__stack+0x3901>
    5a26:	80 91 54 08 	lds	r24, 0x0854
    5a2a:	82 fd       	sbrc	r24, 2
    5a2c:	69 c0       	rjmp	.+210    	; 0x5b00 <__stack+0x3901>
				//vote_indicator_59 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 59);
				//deactivate_category_buttons_and_save(button59_addr, 59);  // provide starting and ending buttons as arguments
			//}
			if((59 > category_size_3) && (59 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    5a2e:	ea e3       	ldi	r30, 0x3A	; 58
    5a30:	e7 15       	cp	r30, r7
    5a32:	80 f0       	brcs	.+32     	; 0x5a54 <__stack+0x3855>
    5a34:	e9 15       	cp	r30, r9
    5a36:	88 f4       	brcc	.+34     	; 0x5a5a <__stack+0x385b>
    5a38:	22 20       	and	r2, r2
    5a3a:	01 f1       	breq	.+64     	; 0x5a7c <__stack+0x387d>
			{
				//USART_putstring("59C4 ");				// comment this out in final product
				vote_indicator_59 = 1;					// Indicating button 1 was pressed
    5a3c:	80 91 54 08 	lds	r24, 0x0854
    5a40:	84 60       	ori	r24, 0x04	; 4
    5a42:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat4--;
    5a46:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 59);
				deactivate_category_buttons_and_save(button59_addr, 59);  // provide starting and ending buttons as arguments
    5a48:	84 e7       	ldi	r24, 0x74	; 116
    5a4a:	90 e0       	ldi	r25, 0x00	; 0
    5a4c:	6b e3       	ldi	r22, 0x3B	; 59
    5a4e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5a52:	56 c0       	rjmp	.+172    	; 0x5b00 <__stack+0x3901>
			}
			else if((59 > category_size_4) && (59 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5a54:	fa e3       	ldi	r31, 0x3A	; 58
    5a56:	f9 15       	cp	r31, r9
    5a58:	88 f0       	brcs	.+34     	; 0x5a7c <__stack+0x387d>
    5a5a:	8a e3       	ldi	r24, 0x3A	; 58
    5a5c:	8a 15       	cp	r24, r10
    5a5e:	88 f4       	brcc	.+34     	; 0x5a82 <__stack+0x3883>
    5a60:	33 20       	and	r3, r3
    5a62:	01 f1       	breq	.+64     	; 0x5aa4 <__stack+0x38a5>
			{
				//USART_putstring("59C5 ");				// comment this out in final product
				vote_indicator_59 = 1;					// Indicating button 1 was pressed
    5a64:	80 91 54 08 	lds	r24, 0x0854
    5a68:	84 60       	ori	r24, 0x04	; 4
    5a6a:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat5--;
    5a6e:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 59);
				deactivate_category_buttons_and_save(button59_addr, 59);  // provide starting and ending buttons as arguments
    5a70:	84 e7       	ldi	r24, 0x74	; 116
    5a72:	90 e0       	ldi	r25, 0x00	; 0
    5a74:	6b e3       	ldi	r22, 0x3B	; 59
    5a76:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5a7a:	42 c0       	rjmp	.+132    	; 0x5b00 <__stack+0x3901>
			}
			else if((59 > category_size_5) && (59 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5a7c:	9a e3       	ldi	r25, 0x3A	; 58
    5a7e:	9a 15       	cp	r25, r10
    5a80:	88 f0       	brcs	.+34     	; 0x5aa4 <__stack+0x38a5>
    5a82:	aa e3       	ldi	r26, 0x3A	; 58
    5a84:	a8 15       	cp	r26, r8
    5a86:	88 f4       	brcc	.+34     	; 0x5aaa <__stack+0x38ab>
    5a88:	11 23       	and	r17, r17
    5a8a:	01 f1       	breq	.+64     	; 0x5acc <__stack+0x38cd>
			{
				//USART_putstring("59C6 ");				// comment this out in final product
				vote_indicator_59 = 1;					// Indicating button 1 was pressed
    5a8c:	80 91 54 08 	lds	r24, 0x0854
    5a90:	84 60       	ori	r24, 0x04	; 4
    5a92:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat6--;
    5a96:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 59);
				deactivate_category_buttons_and_save(button59_addr, 59);  // provide starting and ending buttons as arguments
    5a98:	84 e7       	ldi	r24, 0x74	; 116
    5a9a:	90 e0       	ldi	r25, 0x00	; 0
    5a9c:	6b e3       	ldi	r22, 0x3B	; 59
    5a9e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5aa2:	2e c0       	rjmp	.+92     	; 0x5b00 <__stack+0x3901>
			}
			else if((59 > category_size_6) && (59 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5aa4:	ba e3       	ldi	r27, 0x3A	; 58
    5aa6:	b8 15       	cp	r27, r8
    5aa8:	88 f0       	brcs	.+34     	; 0x5acc <__stack+0x38cd>
    5aaa:	ea e3       	ldi	r30, 0x3A	; 58
    5aac:	e6 15       	cp	r30, r6
    5aae:	70 f4       	brcc	.+28     	; 0x5acc <__stack+0x38cd>
    5ab0:	00 23       	and	r16, r16
    5ab2:	61 f0       	breq	.+24     	; 0x5acc <__stack+0x38cd>
			{
				//USART_putstring("59C7 ");				// comment this out in final product
				vote_indicator_59 = 1;					// Indicating button 1 was pressed
    5ab4:	80 91 54 08 	lds	r24, 0x0854
    5ab8:	84 60       	ori	r24, 0x04	; 4
    5aba:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat7--;
    5abe:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 59);
				deactivate_category_buttons_and_save(button59_addr, 59);  // provide starting and ending buttons as arguments
    5ac0:	84 e7       	ldi	r24, 0x74	; 116
    5ac2:	90 e0       	ldi	r25, 0x00	; 0
    5ac4:	6b e3       	ldi	r22, 0x3B	; 59
    5ac6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5aca:	1a c0       	rjmp	.+52     	; 0x5b00 <__stack+0x3901>
				//vote_indicator_59 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 59);
				//deactivate_category_buttons_and_save(button59_addr, 59);  // provide starting and ending buttons as arguments
			//}
			else if ((59 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    5acc:	80 91 64 05 	lds	r24, 0x0564
    5ad0:	90 91 65 05 	lds	r25, 0x0565
    5ad4:	8b 33       	cpi	r24, 0x3B	; 59
    5ad6:	91 05       	cpc	r25, r1
    5ad8:	98 f4       	brcc	.+38     	; 0x5b00 <__stack+0x3901>
    5ada:	80 91 48 08 	lds	r24, 0x0848
    5ade:	88 23       	and	r24, r24
    5ae0:	79 f0       	breq	.+30     	; 0x5b00 <__stack+0x3901>
			{
				//USART_putstring("59G ");		// comment this out in final product
				vote_indicator_59 = 1;			// Indicating button 1 was pressed
    5ae2:	80 91 54 08 	lds	r24, 0x0854
    5ae6:	84 60       	ori	r24, 0x04	; 4
    5ae8:	80 93 54 08 	sts	0x0854, r24
				deactivate_category_buttons_and_save(button59_addr, 59);
    5aec:	84 e7       	ldi	r24, 0x74	; 116
    5aee:	90 e0       	ldi	r25, 0x00	; 0
    5af0:	6b e3       	ldi	r22, 0x3B	; 59
    5af2:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 59);
				gen_vote_count--;
    5af6:	80 91 48 08 	lds	r24, 0x0848
    5afa:	81 50       	subi	r24, 0x01	; 1
    5afc:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x0B) && (60 <= candidate_count) && vote_indicator_60 == 0)
    5b00:	86 b1       	in	r24, 0x06	; 6
    5b02:	80 fd       	sbrc	r24, 0
    5b04:	80 c0       	rjmp	.+256    	; 0x5c06 <__stack+0x3a07>
    5b06:	86 b1       	in	r24, 0x06	; 6
    5b08:	81 fd       	sbrc	r24, 1
    5b0a:	7d c0       	rjmp	.+250    	; 0x5c06 <__stack+0x3a07>
    5b0c:	86 b1       	in	r24, 0x06	; 6
    5b0e:	82 fd       	sbrc	r24, 2
    5b10:	7a c0       	rjmp	.+244    	; 0x5c06 <__stack+0x3a07>
    5b12:	86 b1       	in	r24, 0x06	; 6
    5b14:	83 ff       	sbrs	r24, 3
    5b16:	77 c0       	rjmp	.+238    	; 0x5c06 <__stack+0x3a07>
    5b18:	83 b1       	in	r24, 0x03	; 3
    5b1a:	8f 70       	andi	r24, 0x0F	; 15
    5b1c:	8b 30       	cpi	r24, 0x0B	; 11
    5b1e:	09 f0       	breq	.+2      	; 0x5b22 <__stack+0x3923>
    5b20:	72 c0       	rjmp	.+228    	; 0x5c06 <__stack+0x3a07>
    5b22:	80 91 f6 05 	lds	r24, 0x05F6
    5b26:	8c 33       	cpi	r24, 0x3C	; 60
    5b28:	08 f4       	brcc	.+2      	; 0x5b2c <__stack+0x392d>
    5b2a:	6d c0       	rjmp	.+218    	; 0x5c06 <__stack+0x3a07>
    5b2c:	80 91 54 08 	lds	r24, 0x0854
    5b30:	83 fd       	sbrc	r24, 3
    5b32:	69 c0       	rjmp	.+210    	; 0x5c06 <__stack+0x3a07>
				//vote_indicator_60 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat3--;
				////i2c_send_byte(PIC_DEV_ADDR, 60);
				//deactivate_category_buttons_and_save(button60_addr, 60);  // provide starting and ending buttons as arguments
			//}
			if((60 > category_size_3) && (60 <= category_size_4) && (no_of_votes_cat4 != 0x00))				// Mask out the MSB nibble.
    5b34:	fb e3       	ldi	r31, 0x3B	; 59
    5b36:	f7 15       	cp	r31, r7
    5b38:	80 f0       	brcs	.+32     	; 0x5b5a <__stack+0x395b>
    5b3a:	f9 15       	cp	r31, r9
    5b3c:	88 f4       	brcc	.+34     	; 0x5b60 <__stack+0x3961>
    5b3e:	22 20       	and	r2, r2
    5b40:	01 f1       	breq	.+64     	; 0x5b82 <__stack+0x3983>
			{
				//USART_putstring("60C4 ");				// comment this out in final product
				vote_indicator_60 = 1;					// Indicating button 1 was pressed
    5b42:	80 91 54 08 	lds	r24, 0x0854
    5b46:	88 60       	ori	r24, 0x08	; 8
    5b48:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat4--;
    5b4c:	2a 94       	dec	r2
				//i2c_send_byte(PIC_DEV_ADDR, 60);
				deactivate_category_buttons_and_save(button60_addr, 60);  // provide starting and ending buttons as arguments
    5b4e:	86 e7       	ldi	r24, 0x76	; 118
    5b50:	90 e0       	ldi	r25, 0x00	; 0
    5b52:	6c e3       	ldi	r22, 0x3C	; 60
    5b54:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5b58:	56 c0       	rjmp	.+172    	; 0x5c06 <__stack+0x3a07>
			}
			else if((60 > category_size_4) && (60 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5b5a:	8b e3       	ldi	r24, 0x3B	; 59
    5b5c:	89 15       	cp	r24, r9
    5b5e:	88 f0       	brcs	.+34     	; 0x5b82 <__stack+0x3983>
    5b60:	9b e3       	ldi	r25, 0x3B	; 59
    5b62:	9a 15       	cp	r25, r10
    5b64:	88 f4       	brcc	.+34     	; 0x5b88 <__stack+0x3989>
    5b66:	33 20       	and	r3, r3
    5b68:	01 f1       	breq	.+64     	; 0x5baa <__stack+0x39ab>
			{
				//USART_putstring("60C5 ");				// comment this out in final product
				vote_indicator_60 = 1;					// Indicating button 1 was pressed
    5b6a:	80 91 54 08 	lds	r24, 0x0854
    5b6e:	88 60       	ori	r24, 0x08	; 8
    5b70:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat5--;
    5b74:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 60);
				deactivate_category_buttons_and_save(button60_addr, 60);  // provide starting and ending buttons as arguments
    5b76:	86 e7       	ldi	r24, 0x76	; 118
    5b78:	90 e0       	ldi	r25, 0x00	; 0
    5b7a:	6c e3       	ldi	r22, 0x3C	; 60
    5b7c:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5b80:	42 c0       	rjmp	.+132    	; 0x5c06 <__stack+0x3a07>
			}
			else if((60 > category_size_5) && (60 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5b82:	ab e3       	ldi	r26, 0x3B	; 59
    5b84:	aa 15       	cp	r26, r10
    5b86:	88 f0       	brcs	.+34     	; 0x5baa <__stack+0x39ab>
    5b88:	bb e3       	ldi	r27, 0x3B	; 59
    5b8a:	b8 15       	cp	r27, r8
    5b8c:	88 f4       	brcc	.+34     	; 0x5bb0 <__stack+0x39b1>
    5b8e:	11 23       	and	r17, r17
    5b90:	01 f1       	breq	.+64     	; 0x5bd2 <__stack+0x39d3>
			{
				//USART_putstring("60C6 ");				// comment this out in final product
				vote_indicator_60 = 1;					// Indicating button 1 was pressed
    5b92:	80 91 54 08 	lds	r24, 0x0854
    5b96:	88 60       	ori	r24, 0x08	; 8
    5b98:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat6--;
    5b9c:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 60);
				deactivate_category_buttons_and_save(button60_addr, 60);  // provide starting and ending buttons as arguments
    5b9e:	86 e7       	ldi	r24, 0x76	; 118
    5ba0:	90 e0       	ldi	r25, 0x00	; 0
    5ba2:	6c e3       	ldi	r22, 0x3C	; 60
    5ba4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5ba8:	2e c0       	rjmp	.+92     	; 0x5c06 <__stack+0x3a07>
			}
			else if((60 > category_size_6) && (60 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5baa:	eb e3       	ldi	r30, 0x3B	; 59
    5bac:	e8 15       	cp	r30, r8
    5bae:	88 f0       	brcs	.+34     	; 0x5bd2 <__stack+0x39d3>
    5bb0:	fb e3       	ldi	r31, 0x3B	; 59
    5bb2:	f6 15       	cp	r31, r6
    5bb4:	70 f4       	brcc	.+28     	; 0x5bd2 <__stack+0x39d3>
    5bb6:	00 23       	and	r16, r16
    5bb8:	61 f0       	breq	.+24     	; 0x5bd2 <__stack+0x39d3>
			{
				//USART_putstring("60C7 ");				// comment this out in final product
				vote_indicator_60 = 1;					// Indicating button 1 was pressed
    5bba:	80 91 54 08 	lds	r24, 0x0854
    5bbe:	88 60       	ori	r24, 0x08	; 8
    5bc0:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat7--;
    5bc4:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 60);
				deactivate_category_buttons_and_save(button60_addr, 60);  // provide starting and ending buttons as arguments
    5bc6:	86 e7       	ldi	r24, 0x76	; 118
    5bc8:	90 e0       	ldi	r25, 0x00	; 0
    5bca:	6c e3       	ldi	r22, 0x3C	; 60
    5bcc:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5bd0:	1a c0       	rjmp	.+52     	; 0x5c06 <__stack+0x3a07>
				//vote_indicator_60 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 60);
				//deactivate_category_buttons_and_save(button60_addr, 60);  // provide starting and ending buttons as arguments
			//}
			else if ((60 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    5bd2:	80 91 64 05 	lds	r24, 0x0564
    5bd6:	90 91 65 05 	lds	r25, 0x0565
    5bda:	8c 33       	cpi	r24, 0x3C	; 60
    5bdc:	91 05       	cpc	r25, r1
    5bde:	98 f4       	brcc	.+38     	; 0x5c06 <__stack+0x3a07>
    5be0:	80 91 48 08 	lds	r24, 0x0848
    5be4:	88 23       	and	r24, r24
    5be6:	79 f0       	breq	.+30     	; 0x5c06 <__stack+0x3a07>
			{
				//USART_putstring("60G ");		// comment this out in final product
				vote_indicator_60 = 1;			// Indicating button 1 was pressed
    5be8:	80 91 54 08 	lds	r24, 0x0854
    5bec:	88 60       	ori	r24, 0x08	; 8
    5bee:	80 93 54 08 	sts	0x0854, r24
				deactivate_category_buttons_and_save(button60_addr, 60);
    5bf2:	86 e7       	ldi	r24, 0x76	; 118
    5bf4:	90 e0       	ldi	r25, 0x00	; 0
    5bf6:	6c e3       	ldi	r22, 0x3C	; 60
    5bf8:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 60);
				gen_vote_count--;
    5bfc:	80 91 48 08 	lds	r24, 0x0848
    5c00:	81 50       	subi	r24, 0x01	; 1
    5c02:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x0C) && (61 <= candidate_count) && vote_indicator_61 == 0)
    5c06:	86 b1       	in	r24, 0x06	; 6
    5c08:	80 fd       	sbrc	r24, 0
    5c0a:	6c c0       	rjmp	.+216    	; 0x5ce4 <__stack+0x3ae5>
    5c0c:	86 b1       	in	r24, 0x06	; 6
    5c0e:	81 fd       	sbrc	r24, 1
    5c10:	69 c0       	rjmp	.+210    	; 0x5ce4 <__stack+0x3ae5>
    5c12:	86 b1       	in	r24, 0x06	; 6
    5c14:	82 fd       	sbrc	r24, 2
    5c16:	66 c0       	rjmp	.+204    	; 0x5ce4 <__stack+0x3ae5>
    5c18:	86 b1       	in	r24, 0x06	; 6
    5c1a:	83 ff       	sbrs	r24, 3
    5c1c:	63 c0       	rjmp	.+198    	; 0x5ce4 <__stack+0x3ae5>
    5c1e:	83 b1       	in	r24, 0x03	; 3
    5c20:	8f 70       	andi	r24, 0x0F	; 15
    5c22:	8c 30       	cpi	r24, 0x0C	; 12
    5c24:	09 f0       	breq	.+2      	; 0x5c28 <__stack+0x3a29>
    5c26:	5e c0       	rjmp	.+188    	; 0x5ce4 <__stack+0x3ae5>
    5c28:	80 91 f6 05 	lds	r24, 0x05F6
    5c2c:	8d 33       	cpi	r24, 0x3D	; 61
    5c2e:	08 f4       	brcc	.+2      	; 0x5c32 <__stack+0x3a33>
    5c30:	59 c0       	rjmp	.+178    	; 0x5ce4 <__stack+0x3ae5>
    5c32:	80 91 54 08 	lds	r24, 0x0854
    5c36:	84 fd       	sbrc	r24, 4
    5c38:	55 c0       	rjmp	.+170    	; 0x5ce4 <__stack+0x3ae5>
				//vote_indicator_61 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat4--;
				////i2c_send_byte(PIC_DEV_ADDR, 61);
				//deactivate_category_buttons_and_save(button61_addr, 61);  // provide starting and ending buttons as arguments
			//}
			if((61 > category_size_4) && (61 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5c3a:	8c e3       	ldi	r24, 0x3C	; 60
    5c3c:	89 15       	cp	r24, r9
    5c3e:	80 f0       	brcs	.+32     	; 0x5c60 <__stack+0x3a61>
    5c40:	8a 15       	cp	r24, r10
    5c42:	88 f4       	brcc	.+34     	; 0x5c66 <__stack+0x3a67>
    5c44:	33 20       	and	r3, r3
    5c46:	01 f1       	breq	.+64     	; 0x5c88 <__stack+0x3a89>
			{
				//USART_putstring("61C5 ");				// comment this out in final product
				vote_indicator_61 = 1;					// Indicating button 1 was pressed
    5c48:	80 91 54 08 	lds	r24, 0x0854
    5c4c:	80 61       	ori	r24, 0x10	; 16
    5c4e:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat5--;
    5c52:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 61);
				deactivate_category_buttons_and_save(button61_addr, 61);  // provide starting and ending buttons as arguments
    5c54:	88 e7       	ldi	r24, 0x78	; 120
    5c56:	90 e0       	ldi	r25, 0x00	; 0
    5c58:	6d e3       	ldi	r22, 0x3D	; 61
    5c5a:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5c5e:	42 c0       	rjmp	.+132    	; 0x5ce4 <__stack+0x3ae5>
			}
			else if((61 > category_size_5) && (61 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5c60:	9c e3       	ldi	r25, 0x3C	; 60
    5c62:	9a 15       	cp	r25, r10
    5c64:	88 f0       	brcs	.+34     	; 0x5c88 <__stack+0x3a89>
    5c66:	ac e3       	ldi	r26, 0x3C	; 60
    5c68:	a8 15       	cp	r26, r8
    5c6a:	88 f4       	brcc	.+34     	; 0x5c8e <__stack+0x3a8f>
    5c6c:	11 23       	and	r17, r17
    5c6e:	01 f1       	breq	.+64     	; 0x5cb0 <__stack+0x3ab1>
			{
				//USART_putstring("61C6 ");				// comment this out in final product
				vote_indicator_61 = 1;					// Indicating button 1 was pressed
    5c70:	80 91 54 08 	lds	r24, 0x0854
    5c74:	80 61       	ori	r24, 0x10	; 16
    5c76:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat6--;
    5c7a:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 61);
				deactivate_category_buttons_and_save(button61_addr, 61);  // provide starting and ending buttons as arguments
    5c7c:	88 e7       	ldi	r24, 0x78	; 120
    5c7e:	90 e0       	ldi	r25, 0x00	; 0
    5c80:	6d e3       	ldi	r22, 0x3D	; 61
    5c82:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5c86:	2e c0       	rjmp	.+92     	; 0x5ce4 <__stack+0x3ae5>
			}
			else if((61 > category_size_6) && (61 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5c88:	bc e3       	ldi	r27, 0x3C	; 60
    5c8a:	b8 15       	cp	r27, r8
    5c8c:	88 f0       	brcs	.+34     	; 0x5cb0 <__stack+0x3ab1>
    5c8e:	ec e3       	ldi	r30, 0x3C	; 60
    5c90:	e6 15       	cp	r30, r6
    5c92:	70 f4       	brcc	.+28     	; 0x5cb0 <__stack+0x3ab1>
    5c94:	00 23       	and	r16, r16
    5c96:	61 f0       	breq	.+24     	; 0x5cb0 <__stack+0x3ab1>
			{
				//USART_putstring("61C7 ");				// comment this out in final product
				vote_indicator_61 = 1;					// Indicating button 1 was pressed
    5c98:	80 91 54 08 	lds	r24, 0x0854
    5c9c:	80 61       	ori	r24, 0x10	; 16
    5c9e:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat7--;
    5ca2:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 61);
				deactivate_category_buttons_and_save(button61_addr, 61);  // provide starting and ending buttons as arguments
    5ca4:	88 e7       	ldi	r24, 0x78	; 120
    5ca6:	90 e0       	ldi	r25, 0x00	; 0
    5ca8:	6d e3       	ldi	r22, 0x3D	; 61
    5caa:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5cae:	1a c0       	rjmp	.+52     	; 0x5ce4 <__stack+0x3ae5>
				//vote_indicator_61 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 61);
				//deactivate_category_buttons_and_save(button61_addr, 61);  // provide starting and ending buttons as arguments
			//}
			else if ((61 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    5cb0:	80 91 64 05 	lds	r24, 0x0564
    5cb4:	90 91 65 05 	lds	r25, 0x0565
    5cb8:	8d 33       	cpi	r24, 0x3D	; 61
    5cba:	91 05       	cpc	r25, r1
    5cbc:	98 f4       	brcc	.+38     	; 0x5ce4 <__stack+0x3ae5>
    5cbe:	80 91 48 08 	lds	r24, 0x0848
    5cc2:	88 23       	and	r24, r24
    5cc4:	79 f0       	breq	.+30     	; 0x5ce4 <__stack+0x3ae5>
			{
				//USART_putstring("61G ");		// comment this out in final product
				vote_indicator_61 = 1;			// Indicating button 1 was pressed
    5cc6:	80 91 54 08 	lds	r24, 0x0854
    5cca:	80 61       	ori	r24, 0x10	; 16
    5ccc:	80 93 54 08 	sts	0x0854, r24
				deactivate_category_buttons_and_save(button61_addr, 61);
    5cd0:	88 e7       	ldi	r24, 0x78	; 120
    5cd2:	90 e0       	ldi	r25, 0x00	; 0
    5cd4:	6d e3       	ldi	r22, 0x3D	; 61
    5cd6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 61);
				gen_vote_count--;
    5cda:	80 91 48 08 	lds	r24, 0x0848
    5cde:	81 50       	subi	r24, 0x01	; 1
    5ce0:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x0D) && (62 <= candidate_count) && vote_indicator_62 == 0)
    5ce4:	86 b1       	in	r24, 0x06	; 6
    5ce6:	80 fd       	sbrc	r24, 0
    5ce8:	6c c0       	rjmp	.+216    	; 0x5dc2 <__stack+0x3bc3>
    5cea:	86 b1       	in	r24, 0x06	; 6
    5cec:	81 fd       	sbrc	r24, 1
    5cee:	69 c0       	rjmp	.+210    	; 0x5dc2 <__stack+0x3bc3>
    5cf0:	86 b1       	in	r24, 0x06	; 6
    5cf2:	82 fd       	sbrc	r24, 2
    5cf4:	66 c0       	rjmp	.+204    	; 0x5dc2 <__stack+0x3bc3>
    5cf6:	86 b1       	in	r24, 0x06	; 6
    5cf8:	83 ff       	sbrs	r24, 3
    5cfa:	63 c0       	rjmp	.+198    	; 0x5dc2 <__stack+0x3bc3>
    5cfc:	83 b1       	in	r24, 0x03	; 3
    5cfe:	8f 70       	andi	r24, 0x0F	; 15
    5d00:	8d 30       	cpi	r24, 0x0D	; 13
    5d02:	09 f0       	breq	.+2      	; 0x5d06 <__stack+0x3b07>
    5d04:	5e c0       	rjmp	.+188    	; 0x5dc2 <__stack+0x3bc3>
    5d06:	80 91 f6 05 	lds	r24, 0x05F6
    5d0a:	8e 33       	cpi	r24, 0x3E	; 62
    5d0c:	08 f4       	brcc	.+2      	; 0x5d10 <__stack+0x3b11>
    5d0e:	59 c0       	rjmp	.+178    	; 0x5dc2 <__stack+0x3bc3>
    5d10:	80 91 54 08 	lds	r24, 0x0854
    5d14:	85 fd       	sbrc	r24, 5
    5d16:	55 c0       	rjmp	.+170    	; 0x5dc2 <__stack+0x3bc3>
				//vote_indicator_62 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat4--;
				////i2c_send_byte(PIC_DEV_ADDR, 62);
				//deactivate_category_buttons_and_save(button62_addr, 62);  // provide starting and ending buttons as arguments
			//}
			if((62 > category_size_4) && (62 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5d18:	fd e3       	ldi	r31, 0x3D	; 61
    5d1a:	f9 15       	cp	r31, r9
    5d1c:	80 f0       	brcs	.+32     	; 0x5d3e <__stack+0x3b3f>
    5d1e:	fa 15       	cp	r31, r10
    5d20:	88 f4       	brcc	.+34     	; 0x5d44 <__stack+0x3b45>
    5d22:	33 20       	and	r3, r3
    5d24:	01 f1       	breq	.+64     	; 0x5d66 <__stack+0x3b67>
			{
				//USART_putstring("62C5 ");				// comment this out in final product
				vote_indicator_62 = 1;					// Indicating button 1 was pressed
    5d26:	80 91 54 08 	lds	r24, 0x0854
    5d2a:	80 62       	ori	r24, 0x20	; 32
    5d2c:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat5--;
    5d30:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 62);
				deactivate_category_buttons_and_save(button62_addr, 62);  // provide starting and ending buttons as arguments
    5d32:	8a e7       	ldi	r24, 0x7A	; 122
    5d34:	90 e0       	ldi	r25, 0x00	; 0
    5d36:	6e e3       	ldi	r22, 0x3E	; 62
    5d38:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5d3c:	42 c0       	rjmp	.+132    	; 0x5dc2 <__stack+0x3bc3>
			}
			else if((62 > category_size_5) && (62 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5d3e:	8d e3       	ldi	r24, 0x3D	; 61
    5d40:	8a 15       	cp	r24, r10
    5d42:	88 f0       	brcs	.+34     	; 0x5d66 <__stack+0x3b67>
    5d44:	9d e3       	ldi	r25, 0x3D	; 61
    5d46:	98 15       	cp	r25, r8
    5d48:	88 f4       	brcc	.+34     	; 0x5d6c <__stack+0x3b6d>
    5d4a:	11 23       	and	r17, r17
    5d4c:	01 f1       	breq	.+64     	; 0x5d8e <__stack+0x3b8f>
			{
				//USART_putstring("62C6 ");				// comment this out in final product
				vote_indicator_62 = 1;					// Indicating button 1 was pressed
    5d4e:	80 91 54 08 	lds	r24, 0x0854
    5d52:	80 62       	ori	r24, 0x20	; 32
    5d54:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat6--;
    5d58:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 62);
				deactivate_category_buttons_and_save(button62_addr, 62);  // provide starting and ending buttons as arguments
    5d5a:	8a e7       	ldi	r24, 0x7A	; 122
    5d5c:	90 e0       	ldi	r25, 0x00	; 0
    5d5e:	6e e3       	ldi	r22, 0x3E	; 62
    5d60:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5d64:	2e c0       	rjmp	.+92     	; 0x5dc2 <__stack+0x3bc3>
			}
			else if((62 > category_size_6) && (62 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5d66:	ad e3       	ldi	r26, 0x3D	; 61
    5d68:	a8 15       	cp	r26, r8
    5d6a:	88 f0       	brcs	.+34     	; 0x5d8e <__stack+0x3b8f>
    5d6c:	bd e3       	ldi	r27, 0x3D	; 61
    5d6e:	b6 15       	cp	r27, r6
    5d70:	70 f4       	brcc	.+28     	; 0x5d8e <__stack+0x3b8f>
    5d72:	00 23       	and	r16, r16
    5d74:	61 f0       	breq	.+24     	; 0x5d8e <__stack+0x3b8f>
			{
				//USART_putstring("62C7 ");				// comment this out in final product
				vote_indicator_62 = 1;					// Indicating button 1 was pressed
    5d76:	80 91 54 08 	lds	r24, 0x0854
    5d7a:	80 62       	ori	r24, 0x20	; 32
    5d7c:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat7--;
    5d80:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 62);
				deactivate_category_buttons_and_save(button62_addr, 62);  // provide starting and ending buttons as arguments
    5d82:	8a e7       	ldi	r24, 0x7A	; 122
    5d84:	90 e0       	ldi	r25, 0x00	; 0
    5d86:	6e e3       	ldi	r22, 0x3E	; 62
    5d88:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5d8c:	1a c0       	rjmp	.+52     	; 0x5dc2 <__stack+0x3bc3>
				//vote_indicator_62 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 62);
				//deactivate_category_buttons_and_save(button62_addr, 62);  // provide starting and ending buttons as arguments
			//}
			else if ((62 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    5d8e:	80 91 64 05 	lds	r24, 0x0564
    5d92:	90 91 65 05 	lds	r25, 0x0565
    5d96:	8e 33       	cpi	r24, 0x3E	; 62
    5d98:	91 05       	cpc	r25, r1
    5d9a:	98 f4       	brcc	.+38     	; 0x5dc2 <__stack+0x3bc3>
    5d9c:	80 91 48 08 	lds	r24, 0x0848
    5da0:	88 23       	and	r24, r24
    5da2:	79 f0       	breq	.+30     	; 0x5dc2 <__stack+0x3bc3>
			{
				//USART_putstring("62G ");		// comment this out in final product
				vote_indicator_62 = 1;			// Indicating button 1 was pressed
    5da4:	80 91 54 08 	lds	r24, 0x0854
    5da8:	80 62       	ori	r24, 0x20	; 32
    5daa:	80 93 54 08 	sts	0x0854, r24
				deactivate_category_buttons_and_save(button62_addr, 62);
    5dae:	8a e7       	ldi	r24, 0x7A	; 122
    5db0:	90 e0       	ldi	r25, 0x00	; 0
    5db2:	6e e3       	ldi	r22, 0x3E	; 62
    5db4:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 62);
				gen_vote_count--;
    5db8:	80 91 48 08 	lds	r24, 0x0848
    5dbc:	81 50       	subi	r24, 0x01	; 1
    5dbe:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x0E) && (63 <= candidate_count) && vote_indicator_63 == 0)
    5dc2:	86 b1       	in	r24, 0x06	; 6
    5dc4:	80 fd       	sbrc	r24, 0
    5dc6:	6c c0       	rjmp	.+216    	; 0x5ea0 <__stack+0x3ca1>
    5dc8:	86 b1       	in	r24, 0x06	; 6
    5dca:	81 fd       	sbrc	r24, 1
    5dcc:	69 c0       	rjmp	.+210    	; 0x5ea0 <__stack+0x3ca1>
    5dce:	86 b1       	in	r24, 0x06	; 6
    5dd0:	82 fd       	sbrc	r24, 2
    5dd2:	66 c0       	rjmp	.+204    	; 0x5ea0 <__stack+0x3ca1>
    5dd4:	86 b1       	in	r24, 0x06	; 6
    5dd6:	83 ff       	sbrs	r24, 3
    5dd8:	63 c0       	rjmp	.+198    	; 0x5ea0 <__stack+0x3ca1>
    5dda:	83 b1       	in	r24, 0x03	; 3
    5ddc:	8f 70       	andi	r24, 0x0F	; 15
    5dde:	8e 30       	cpi	r24, 0x0E	; 14
    5de0:	09 f0       	breq	.+2      	; 0x5de4 <__stack+0x3be5>
    5de2:	5e c0       	rjmp	.+188    	; 0x5ea0 <__stack+0x3ca1>
    5de4:	80 91 f6 05 	lds	r24, 0x05F6
    5de8:	8f 33       	cpi	r24, 0x3F	; 63
    5dea:	08 f4       	brcc	.+2      	; 0x5dee <__stack+0x3bef>
    5dec:	59 c0       	rjmp	.+178    	; 0x5ea0 <__stack+0x3ca1>
    5dee:	80 91 54 08 	lds	r24, 0x0854
    5df2:	86 fd       	sbrc	r24, 6
    5df4:	55 c0       	rjmp	.+170    	; 0x5ea0 <__stack+0x3ca1>
				//vote_indicator_63 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat4--;
				////i2c_send_byte(PIC_DEV_ADDR, 63);
				//deactivate_category_buttons_and_save(button63_addr, 63);  // provide starting and ending buttons as arguments
			//}
			if((63 > category_size_4) && (63 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5df6:	ee e3       	ldi	r30, 0x3E	; 62
    5df8:	e9 15       	cp	r30, r9
    5dfa:	80 f0       	brcs	.+32     	; 0x5e1c <__stack+0x3c1d>
    5dfc:	ea 15       	cp	r30, r10
    5dfe:	88 f4       	brcc	.+34     	; 0x5e22 <__stack+0x3c23>
    5e00:	33 20       	and	r3, r3
    5e02:	01 f1       	breq	.+64     	; 0x5e44 <__stack+0x3c45>
			{
				//USART_putstring("63C5 ");				// comment this out in final product
				vote_indicator_63 = 1;					// Indicating button 1 was pressed
    5e04:	80 91 54 08 	lds	r24, 0x0854
    5e08:	80 64       	ori	r24, 0x40	; 64
    5e0a:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat5--;
    5e0e:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 63);
				deactivate_category_buttons_and_save(button63_addr, 63);  // provide starting and ending buttons as arguments
    5e10:	8c e7       	ldi	r24, 0x7C	; 124
    5e12:	90 e0       	ldi	r25, 0x00	; 0
    5e14:	6f e3       	ldi	r22, 0x3F	; 63
    5e16:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5e1a:	42 c0       	rjmp	.+132    	; 0x5ea0 <__stack+0x3ca1>
			}
			else if((63 > category_size_5) && (63 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5e1c:	fe e3       	ldi	r31, 0x3E	; 62
    5e1e:	fa 15       	cp	r31, r10
    5e20:	88 f0       	brcs	.+34     	; 0x5e44 <__stack+0x3c45>
    5e22:	8e e3       	ldi	r24, 0x3E	; 62
    5e24:	88 15       	cp	r24, r8
    5e26:	88 f4       	brcc	.+34     	; 0x5e4a <__stack+0x3c4b>
    5e28:	11 23       	and	r17, r17
    5e2a:	01 f1       	breq	.+64     	; 0x5e6c <__stack+0x3c6d>
			{
				//USART_putstring("63C6 ");				// comment this out in final product
				vote_indicator_63 = 1;					// Indicating button 1 was pressed
    5e2c:	80 91 54 08 	lds	r24, 0x0854
    5e30:	80 64       	ori	r24, 0x40	; 64
    5e32:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat6--;
    5e36:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 63);
				deactivate_category_buttons_and_save(button63_addr, 63);  // provide starting and ending buttons as arguments
    5e38:	8c e7       	ldi	r24, 0x7C	; 124
    5e3a:	90 e0       	ldi	r25, 0x00	; 0
    5e3c:	6f e3       	ldi	r22, 0x3F	; 63
    5e3e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5e42:	2e c0       	rjmp	.+92     	; 0x5ea0 <__stack+0x3ca1>
			}
			else if((63 > category_size_6) && (63 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5e44:	9e e3       	ldi	r25, 0x3E	; 62
    5e46:	98 15       	cp	r25, r8
    5e48:	88 f0       	brcs	.+34     	; 0x5e6c <__stack+0x3c6d>
    5e4a:	ae e3       	ldi	r26, 0x3E	; 62
    5e4c:	a6 15       	cp	r26, r6
    5e4e:	70 f4       	brcc	.+28     	; 0x5e6c <__stack+0x3c6d>
    5e50:	00 23       	and	r16, r16
    5e52:	61 f0       	breq	.+24     	; 0x5e6c <__stack+0x3c6d>
			{
				//USART_putstring("63C7 ");				// comment this out in final product
				vote_indicator_63 = 1;					// Indicating button 1 was pressed
    5e54:	80 91 54 08 	lds	r24, 0x0854
    5e58:	80 64       	ori	r24, 0x40	; 64
    5e5a:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat7--;
    5e5e:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 63);
				deactivate_category_buttons_and_save(button63_addr, 63);  // provide starting and ending buttons as arguments
    5e60:	8c e7       	ldi	r24, 0x7C	; 124
    5e62:	90 e0       	ldi	r25, 0x00	; 0
    5e64:	6f e3       	ldi	r22, 0x3F	; 63
    5e66:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5e6a:	1a c0       	rjmp	.+52     	; 0x5ea0 <__stack+0x3ca1>
				//vote_indicator_63 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 63);
				//deactivate_category_buttons_and_save(button63_addr, 63);  // provide starting and ending buttons as arguments
			//}
			else if ((63 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    5e6c:	80 91 64 05 	lds	r24, 0x0564
    5e70:	90 91 65 05 	lds	r25, 0x0565
    5e74:	8f 33       	cpi	r24, 0x3F	; 63
    5e76:	91 05       	cpc	r25, r1
    5e78:	98 f4       	brcc	.+38     	; 0x5ea0 <__stack+0x3ca1>
    5e7a:	80 91 48 08 	lds	r24, 0x0848
    5e7e:	88 23       	and	r24, r24
    5e80:	79 f0       	breq	.+30     	; 0x5ea0 <__stack+0x3ca1>
			{
				//USART_putstring("63G ");		// comment this out in final product
				vote_indicator_63 = 1;			// Indicating button 1 was pressed
    5e82:	80 91 54 08 	lds	r24, 0x0854
    5e86:	80 64       	ori	r24, 0x40	; 64
    5e88:	80 93 54 08 	sts	0x0854, r24
				deactivate_category_buttons_and_save(button63_addr, 63);
    5e8c:	8c e7       	ldi	r24, 0x7C	; 124
    5e8e:	90 e0       	ldi	r25, 0x00	; 0
    5e90:	6f e3       	ldi	r22, 0x3F	; 63
    5e92:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 63);
				gen_vote_count--;
    5e96:	80 91 48 08 	lds	r24, 0x0848
    5e9a:	81 50       	subi	r24, 0x01	; 1
    5e9c:	80 93 48 08 	sts	0x0848, r24
			}
		}
		
		if ((matrix_A_data == 0) && (matrix_B_data == 0) && (matrix_C_data == 0) && (matrix_D_data == 1) && ((PINB & 0x0F) == 0x0F) && (64 <= candidate_count) && vote_indicator_64 == 0)
    5ea0:	86 b1       	in	r24, 0x06	; 6
    5ea2:	80 fd       	sbrc	r24, 0
    5ea4:	6e c0       	rjmp	.+220    	; 0x5f82 <__stack+0x3d83>
    5ea6:	86 b1       	in	r24, 0x06	; 6
    5ea8:	81 fd       	sbrc	r24, 1
    5eaa:	6b c0       	rjmp	.+214    	; 0x5f82 <__stack+0x3d83>
    5eac:	86 b1       	in	r24, 0x06	; 6
    5eae:	82 fd       	sbrc	r24, 2
    5eb0:	68 c0       	rjmp	.+208    	; 0x5f82 <__stack+0x3d83>
    5eb2:	86 b1       	in	r24, 0x06	; 6
    5eb4:	83 ff       	sbrs	r24, 3
    5eb6:	65 c0       	rjmp	.+202    	; 0x5f82 <__stack+0x3d83>
    5eb8:	83 b1       	in	r24, 0x03	; 3
    5eba:	8f 70       	andi	r24, 0x0F	; 15
    5ebc:	8f 30       	cpi	r24, 0x0F	; 15
    5ebe:	09 f0       	breq	.+2      	; 0x5ec2 <__stack+0x3cc3>
    5ec0:	60 c0       	rjmp	.+192    	; 0x5f82 <__stack+0x3d83>
    5ec2:	80 91 f6 05 	lds	r24, 0x05F6
    5ec6:	80 34       	cpi	r24, 0x40	; 64
    5ec8:	08 f4       	brcc	.+2      	; 0x5ecc <__stack+0x3ccd>
    5eca:	5b c0       	rjmp	.+182    	; 0x5f82 <__stack+0x3d83>
    5ecc:	80 91 54 08 	lds	r24, 0x0854
    5ed0:	88 23       	and	r24, r24
    5ed2:	0c f4       	brge	.+2      	; 0x5ed6 <__stack+0x3cd7>
    5ed4:	56 c0       	rjmp	.+172    	; 0x5f82 <__stack+0x3d83>
				//vote_indicator_64 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat4--;
				////i2c_send_byte(PIC_DEV_ADDR, 64);
				//deactivate_category_buttons_and_save(button64_addr, 64);  // provide starting and ending buttons as arguments
			//}
			if((64 > category_size_4) && (64 <= category_size_5) && (no_of_votes_cat5 != 0x00))				// Mask out the MSB nibble.
    5ed6:	bf e3       	ldi	r27, 0x3F	; 63
    5ed8:	b9 15       	cp	r27, r9
    5eda:	80 f0       	brcs	.+32     	; 0x5efc <__stack+0x3cfd>
    5edc:	ba 15       	cp	r27, r10
    5ede:	88 f4       	brcc	.+34     	; 0x5f02 <__stack+0x3d03>
    5ee0:	33 20       	and	r3, r3
    5ee2:	01 f1       	breq	.+64     	; 0x5f24 <__stack+0x3d25>
			{
				//USART_putstring("64C5 ");				// comment this out in final product
				vote_indicator_64 = 1;					// Indicating button 1 was pressed
    5ee4:	80 91 54 08 	lds	r24, 0x0854
    5ee8:	80 68       	ori	r24, 0x80	; 128
    5eea:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat5--;
    5eee:	3a 94       	dec	r3
				//i2c_send_byte(PIC_DEV_ADDR, 64);
				deactivate_category_buttons_and_save(button64_addr, 64);  // provide starting and ending buttons as arguments
    5ef0:	8e e7       	ldi	r24, 0x7E	; 126
    5ef2:	90 e0       	ldi	r25, 0x00	; 0
    5ef4:	60 e4       	ldi	r22, 0x40	; 64
    5ef6:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5efa:	51 c0       	rjmp	.+162    	; 0x5f9e <__stack+0x3d9f>
			}
			else if((64 > category_size_5) && (64 <= category_size_6) && (no_of_votes_cat6 != 0x00))				// Mask out the MSB nibble.
    5efc:	ef e3       	ldi	r30, 0x3F	; 63
    5efe:	ea 15       	cp	r30, r10
    5f00:	88 f0       	brcs	.+34     	; 0x5f24 <__stack+0x3d25>
    5f02:	ff e3       	ldi	r31, 0x3F	; 63
    5f04:	f8 15       	cp	r31, r8
    5f06:	88 f4       	brcc	.+34     	; 0x5f2a <__stack+0x3d2b>
    5f08:	11 23       	and	r17, r17
    5f0a:	01 f1       	breq	.+64     	; 0x5f4c <__stack+0x3d4d>
			{
				//USART_putstring("64C6 ");				// comment this out in final product
				vote_indicator_64 = 1;					// Indicating button 1 was pressed
    5f0c:	80 91 54 08 	lds	r24, 0x0854
    5f10:	80 68       	ori	r24, 0x80	; 128
    5f12:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat6--;
    5f16:	11 50       	subi	r17, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 64);
				deactivate_category_buttons_and_save(button64_addr, 64);  // provide starting and ending buttons as arguments
    5f18:	8e e7       	ldi	r24, 0x7E	; 126
    5f1a:	90 e0       	ldi	r25, 0x00	; 0
    5f1c:	60 e4       	ldi	r22, 0x40	; 64
    5f1e:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5f22:	3d c0       	rjmp	.+122    	; 0x5f9e <__stack+0x3d9f>
			}
			else if((64 > category_size_6) && (64 <= category_size_7) && (no_of_votes_cat7 != 0x00))				// Mask out the MSB nibble.
    5f24:	8f e3       	ldi	r24, 0x3F	; 63
    5f26:	88 15       	cp	r24, r8
    5f28:	88 f0       	brcs	.+34     	; 0x5f4c <__stack+0x3d4d>
    5f2a:	9f e3       	ldi	r25, 0x3F	; 63
    5f2c:	96 15       	cp	r25, r6
    5f2e:	70 f4       	brcc	.+28     	; 0x5f4c <__stack+0x3d4d>
    5f30:	00 23       	and	r16, r16
    5f32:	61 f0       	breq	.+24     	; 0x5f4c <__stack+0x3d4d>
			{
				//USART_putstring("64C7 ");				// comment this out in final product
				vote_indicator_64 = 1;					// Indicating button 1 was pressed
    5f34:	80 91 54 08 	lds	r24, 0x0854
    5f38:	80 68       	ori	r24, 0x80	; 128
    5f3a:	80 93 54 08 	sts	0x0854, r24
				no_of_votes_cat7--;
    5f3e:	01 50       	subi	r16, 0x01	; 1
				//i2c_send_byte(PIC_DEV_ADDR, 64);
				deactivate_category_buttons_and_save(button64_addr, 64);  // provide starting and ending buttons as arguments
    5f40:	8e e7       	ldi	r24, 0x7E	; 126
    5f42:	90 e0       	ldi	r25, 0x00	; 0
    5f44:	60 e4       	ldi	r22, 0x40	; 64
    5f46:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
    5f4a:	29 c0       	rjmp	.+82     	; 0x5f9e <__stack+0x3d9f>
				//vote_indicator_64 = 1;					// Indicating button 1 was pressed
				//no_of_votes_cat8--;
				////i2c_send_byte(PIC_DEV_ADDR, 64);
				//deactivate_category_buttons_and_save(button64_addr, 64);  // provide starting and ending buttons as arguments
			//}
			else if ((64 > no_of_buttons_in_categories) && (gen_vote_count != 0))
    5f4c:	80 91 64 05 	lds	r24, 0x0564
    5f50:	90 91 65 05 	lds	r25, 0x0565
    5f54:	80 34       	cpi	r24, 0x40	; 64
    5f56:	91 05       	cpc	r25, r1
    5f58:	10 f5       	brcc	.+68     	; 0x5f9e <__stack+0x3d9f>
    5f5a:	80 91 48 08 	lds	r24, 0x0848
    5f5e:	88 23       	and	r24, r24
    5f60:	f1 f0       	breq	.+60     	; 0x5f9e <__stack+0x3d9f>
			{
				//USART_putstring("64G ");		// comment this out in final product
				vote_indicator_64 = 1;			// Indicating button 1 was pressed
    5f62:	80 91 54 08 	lds	r24, 0x0854
    5f66:	80 68       	ori	r24, 0x80	; 128
    5f68:	80 93 54 08 	sts	0x0854, r24
				deactivate_category_buttons_and_save(button64_addr, 64);
    5f6c:	8e e7       	ldi	r24, 0x7E	; 126
    5f6e:	90 e0       	ldi	r25, 0x00	; 0
    5f70:	60 e4       	ldi	r22, 0x40	; 64
    5f72:	0e 94 43 05 	call	0xa86	; 0xa86 <deactivate_category_buttons_and_save>
				//i2c_send_byte(PIC_DEV_ADDR, 64);
				gen_vote_count--;
    5f76:	80 91 48 08 	lds	r24, 0x0848
    5f7a:	81 50       	subi	r24, 0x01	; 1
    5f7c:	80 93 48 08 	sts	0x0848, r24
    5f80:	0e c0       	rjmp	.+28     	; 0x5f9e <__stack+0x3d9f>
			}
		}
		
			else if(INIT == 0)
    5f82:	80 91 09 01 	lds	r24, 0x0109
    5f86:	81 fd       	sbrc	r24, 1
    5f88:	0a c0       	rjmp	.+20     	; 0x5f9e <__stack+0x3d9f>
			{
				while(INIT == 0);
    5f8a:	e9 e0       	ldi	r30, 0x09	; 9
    5f8c:	f1 e0       	ldi	r31, 0x01	; 1
    5f8e:	80 81       	ld	r24, Z
    5f90:	81 ff       	sbrs	r24, 1
    5f92:	fd cf       	rjmp	.-6      	; 0x5f8e <__stack+0x3d8f>
				i2c_send_byte(PIC_DEV_ADDR, 0);		// Clear the LED's
    5f94:	80 e8       	ldi	r24, 0x80	; 128
    5f96:	60 e0       	ldi	r22, 0x00	; 0
    5f98:	0e 94 1d 05 	call	0xa3a	; 0xa3a <i2c_send_byte>
				//votes_counter=0;
				return;
    5f9c:	0a c0       	rjmp	.+20     	; 0x5fb2 <__stack+0x3db3>
				//no_of_votes_cat8 = i2c_read_byte(EEPROM_DEV_ADDR, no_votes_8_bkp);
				
				light_leds();
			}
	
	while(votes_counter >= 0)				// The program stays in this loop until the voter has cast all of his/her votes or until INIT is pressed.
    5f9e:	80 91 ff 05 	lds	r24, 0x05FF
	{	
		if(cod_typ == 'B')
    5fa2:	80 91 10 06 	lds	r24, 0x0610
    5fa6:	82 34       	cpi	r24, 0x42	; 66
    5fa8:	11 f0       	breq	.+4      	; 0x5fae <__stack+0x3daf>
    5faa:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <vote_registration+0x356>
    5fae:	0c 94 fa 0a 	jmp	0x15f4	; 0x15f4 <vote_registration+0x344>
				//votes_counter=0;
				return;
			}
		}	
	}
}	
    5fb2:	0f 90       	pop	r0
    5fb4:	df 91       	pop	r29
    5fb6:	cf 91       	pop	r28
    5fb8:	1f 91       	pop	r17
    5fba:	0f 91       	pop	r16
    5fbc:	ff 90       	pop	r15
    5fbe:	ef 90       	pop	r14
    5fc0:	df 90       	pop	r13
    5fc2:	cf 90       	pop	r12
    5fc4:	bf 90       	pop	r11
    5fc6:	af 90       	pop	r10
    5fc8:	9f 90       	pop	r9
    5fca:	8f 90       	pop	r8
    5fcc:	7f 90       	pop	r7
    5fce:	6f 90       	pop	r6
    5fd0:	5f 90       	pop	r5
    5fd2:	4f 90       	pop	r4
    5fd4:	3f 90       	pop	r3
    5fd6:	2f 90       	pop	r2
    5fd8:	08 95       	ret

00005fda <vote_routine>:
	
void vote_routine()                       
{
    5fda:	ef 92       	push	r14
    5fdc:	ff 92       	push	r15
    5fde:	0f 93       	push	r16
    5fe0:	1f 93       	push	r17
    5fe2:	cf 93       	push	r28
if (cod_typ == 'B')
    5fe4:	80 91 10 06 	lds	r24, 0x0610
    5fe8:	82 34       	cpi	r24, 0x42	; 66
    5fea:	29 f5       	brne	.+74     	; 0x6036 <vote_routine+0x5c>
	{	LED_INDICATOR=0;
    5fec:	a5 98       	cbi	0x14, 5	; 20
		vote_registration();
    5fee:	0e 94 58 09 	call	0x12b0	; 0x12b0 <vote_registration>
		LED_INDICATOR=1;
    5ff2:	a5 9a       	sbi	0x14, 5	; 20
		voting_on = 0;
    5ff4:	80 91 11 06 	lds	r24, 0x0611
    5ff8:	8f 7d       	andi	r24, 0xDF	; 223
    5ffa:	80 93 11 06 	sts	0x0611, r24
		eeprom_write_i2c(EEPROM_DEV_ADDR, flag_register_bkp, flag_register);
    5ffe:	40 91 11 06 	lds	r20, 0x0611
    6002:	80 ea       	ldi	r24, 0xA0	; 160
    6004:	6f ea       	ldi	r22, 0xAF	; 175
    6006:	70 e0       	ldi	r23, 0x00	; 0
    6008:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		lcd_cmd(0x01);			 //clear lcd
    600c:	81 e0       	ldi	r24, 0x01	; 1
    600e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
    6012:	8f ef       	ldi	r24, 0xFF	; 255
    6014:	91 e1       	ldi	r25, 0x11	; 17
    6016:	01 97       	sbiw	r24, 0x01	; 1
    6018:	f1 f7       	brne	.-4      	; 0x6016 <vote_routine+0x3c>
    601a:	00 c0       	rjmp	.+0      	; 0x601c <vote_routine+0x42>
    601c:	00 00       	nop
		_delay_ms(1);
		lcd_cmd(0x80);			  
    601e:	80 e8       	ldi	r24, 0x80	; 128
    6020:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
    6024:	af ef       	ldi	r26, 0xFF	; 255
    6026:	b1 e1       	ldi	r27, 0x11	; 17
    6028:	11 97       	sbiw	r26, 0x01	; 1
    602a:	f1 f7       	brne	.-4      	; 0x6028 <vote_routine+0x4e>
    602c:	00 c0       	rjmp	.+0      	; 0x602e <vote_routine+0x54>
    602e:	00 00       	nop
		_delay_ms(1);
		LED = 1;
    6030:	a0 9a       	sbi	0x14, 0	; 20
		Buzzer = 0;
    6032:	a1 98       	cbi	0x14, 1	; 20
    6034:	9b c0       	rjmp	.+310    	; 0x616c <vote_routine+0x192>

else             // Compulsory all votes alloted to voter have to be cast for the votes to be saved
	{
	
		char i;
		vote_cast = 0;
    6036:	10 92 07 06 	sts	0x0607, r1
		LED_INDICATOR=0;
    603a:	a5 98       	cbi	0x14, 5	; 20
		vote_registration();
    603c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <vote_registration>
		LED_INDICATOR=1;
    6040:	a5 9a       	sbi	0x14, 5	; 20
		voting_on = 0;
    6042:	80 91 11 06 	lds	r24, 0x0611
    6046:	8f 7d       	andi	r24, 0xDF	; 223
    6048:	80 93 11 06 	sts	0x0611, r24
		eeprom_write_i2c(EEPROM_DEV_ADDR, flag_register_bkp, flag_register);
    604c:	40 91 11 06 	lds	r20, 0x0611
    6050:	80 ea       	ldi	r24, 0xA0	; 160
    6052:	6f ea       	ldi	r22, 0xAF	; 175
    6054:	70 e0       	ldi	r23, 0x00	; 0
    6056:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
		lcd_cmd(0x01);			 //clear lcd
    605a:	81 e0       	ldi	r24, 0x01	; 1
    605c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
    6060:	8f ef       	ldi	r24, 0xFF	; 255
    6062:	97 ea       	ldi	r25, 0xA7	; 167
    6064:	a3 e0       	ldi	r26, 0x03	; 3
    6066:	81 50       	subi	r24, 0x01	; 1
    6068:	90 40       	sbci	r25, 0x00	; 0
    606a:	a0 40       	sbci	r26, 0x00	; 0
    606c:	e1 f7       	brne	.-8      	; 0x6066 <vote_routine+0x8c>
    606e:	00 c0       	rjmp	.+0      	; 0x6070 <vote_routine+0x96>
    6070:	00 00       	nop
		_delay_ms(65);
		LED = 1;
    6072:	a0 9a       	sbi	0x14, 0	; 20
		Buzzer = 0;
    6074:	a1 98       	cbi	0x14, 1	; 20
	
		USART_Transmit_dec(elem_count);
    6076:	80 91 52 08 	lds	r24, 0x0852
    607a:	90 e0       	ldi	r25, 0x00	; 0
    607c:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
		if ((votes_counter == 0) && (vote_cast))
    6080:	80 91 ff 05 	lds	r24, 0x05FF
    6084:	88 23       	and	r24, r24
    6086:	09 f0       	breq	.+2      	; 0x608a <vote_routine+0xb0>
    6088:	55 c0       	rjmp	.+170    	; 0x6134 <vote_routine+0x15a>
    608a:	80 91 07 06 	lds	r24, 0x0607
    608e:	88 23       	and	r24, r24
    6090:	09 f4       	brne	.+2      	; 0x6094 <vote_routine+0xba>
    6092:	50 c0       	rjmp	.+160    	; 0x6134 <vote_routine+0x15a>
		{
			lcd_data_str("Saving Votes");
    6094:	88 e5       	ldi	r24, 0x58	; 88
    6096:	92 e0       	ldi	r25, 0x02	; 2
    6098:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
			voter_count++;
    609c:	80 91 5c 08 	lds	r24, 0x085C
    60a0:	90 91 5d 08 	lds	r25, 0x085D
    60a4:	01 96       	adiw	r24, 0x01	; 1
    60a6:	90 93 5d 08 	sts	0x085D, r25
    60aa:	80 93 5c 08 	sts	0x085C, r24
			i2c_write_2_bytes(EEPROM_DEV_ADDR, voters_voted, voter_count);	// Store the Count of no. of voters in EEPROM.
    60ae:	40 91 5c 08 	lds	r20, 0x085C
    60b2:	50 91 5d 08 	lds	r21, 0x085D
    60b6:	80 ea       	ldi	r24, 0xA0	; 160
    60b8:	68 e9       	ldi	r22, 0x98	; 152
    60ba:	70 e0       	ldi	r23, 0x00	; 0
    60bc:	0e 94 59 04 	call	0x8b2	; 0x8b2 <i2c_write_2_bytes>
    60c0:	af ef       	ldi	r26, 0xFF	; 255
    60c2:	b1 e1       	ldi	r27, 0x11	; 17
    60c4:	11 97       	sbiw	r26, 0x01	; 1
    60c6:	f1 f7       	brne	.-4      	; 0x60c4 <vote_routine+0xea>
    60c8:	00 c0       	rjmp	.+0      	; 0x60ca <vote_routine+0xf0>
    60ca:	00 00       	nop
			_delay_ms(1);
			for(i=0; i < elem_count; i++)
    60cc:	80 91 52 08 	lds	r24, 0x0852
    60d0:	88 23       	and	r24, r24
    60d2:	81 f1       	breq	.+96     	; 0x6134 <vote_routine+0x15a>
    60d4:	c0 e0       	ldi	r28, 0x00	; 0
			{
				i2c_read_2_bytes(voted_button_array[i]);
    60d6:	0f 2e       	mov	r0, r31
    60d8:	fc e6       	ldi	r31, 0x6C	; 108
    60da:	ef 2e       	mov	r14, r31
    60dc:	f5 e0       	ldi	r31, 0x05	; 5
    60de:	ff 2e       	mov	r15, r31
    60e0:	f0 2d       	mov	r31, r0
    60e2:	0c 2f       	mov	r16, r28
    60e4:	10 e0       	ldi	r17, 0x00	; 0
    60e6:	00 0f       	add	r16, r16
    60e8:	11 1f       	adc	r17, r17
    60ea:	0e 0d       	add	r16, r14
    60ec:	1f 1d       	adc	r17, r15
    60ee:	f8 01       	movw	r30, r16
    60f0:	80 81       	ld	r24, Z
    60f2:	91 81       	ldd	r25, Z+1	; 0x01
    60f4:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
				i2c_data_16 = i2c_data_16 + 1;						// Increment the value by 1
    60f8:	80 91 61 05 	lds	r24, 0x0561
    60fc:	90 91 62 05 	lds	r25, 0x0562
    6100:	01 96       	adiw	r24, 0x01	; 1
    6102:	90 93 62 05 	sts	0x0562, r25
    6106:	80 93 61 05 	sts	0x0561, r24
				i2c_write_2_bytes(EEPROM_DEV_ADDR, voted_button_array[i], i2c_data_16);		// Save the Incremented value back to the same location
    610a:	40 91 61 05 	lds	r20, 0x0561
    610e:	50 91 62 05 	lds	r21, 0x0562
    6112:	d8 01       	movw	r26, r16
    6114:	6d 91       	ld	r22, X+
    6116:	7c 91       	ld	r23, X
    6118:	80 ea       	ldi	r24, 0xA0	; 160
    611a:	0e 94 59 04 	call	0x8b2	; 0x8b2 <i2c_write_2_bytes>
    611e:	ef ef       	ldi	r30, 0xFF	; 255
    6120:	f1 e1       	ldi	r31, 0x11	; 17
    6122:	31 97       	sbiw	r30, 0x01	; 1
    6124:	f1 f7       	brne	.-4      	; 0x6122 <vote_routine+0x148>
    6126:	00 c0       	rjmp	.+0      	; 0x6128 <vote_routine+0x14e>
    6128:	00 00       	nop
		{
			lcd_data_str("Saving Votes");
			voter_count++;
			i2c_write_2_bytes(EEPROM_DEV_ADDR, voters_voted, voter_count);	// Store the Count of no. of voters in EEPROM.
			_delay_ms(1);
			for(i=0; i < elem_count; i++)
    612a:	cf 5f       	subi	r28, 0xFF	; 255
    612c:	80 91 52 08 	lds	r24, 0x0852
    6130:	c8 17       	cp	r28, r24
    6132:	b8 f2       	brcs	.-82     	; 0x60e2 <vote_routine+0x108>
				i2c_write_2_bytes(EEPROM_DEV_ADDR, voted_button_array[i], i2c_data_16);		// Save the Incremented value back to the same location
				_delay_ms(1);
			}
		}
		
		if (votes_counter > 0 && votes_counter < voter_votes) 
    6134:	80 91 ff 05 	lds	r24, 0x05FF
    6138:	88 23       	and	r24, r24
    613a:	c1 f0       	breq	.+48     	; 0x616c <vote_routine+0x192>
    613c:	90 91 ff 05 	lds	r25, 0x05FF
    6140:	80 91 c6 08 	lds	r24, 0x08C6
    6144:	98 17       	cp	r25, r24
    6146:	90 f4       	brcc	.+36     	; 0x616c <vote_routine+0x192>
		{
			invalid_voters++;
    6148:	80 91 00 06 	lds	r24, 0x0600
    614c:	90 91 01 06 	lds	r25, 0x0601
    6150:	01 96       	adiw	r24, 0x01	; 1
    6152:	90 93 01 06 	sts	0x0601, r25
    6156:	80 93 00 06 	sts	0x0600, r24
			i2c_write_2_bytes(EEPROM_DEV_ADDR, voters_not_voted, invalid_voters); 
    615a:	40 91 00 06 	lds	r20, 0x0600
    615e:	50 91 01 06 	lds	r21, 0x0601
    6162:	80 ea       	ldi	r24, 0xA0	; 160
    6164:	61 eb       	ldi	r22, 0xB1	; 177
    6166:	70 e0       	ldi	r23, 0x00	; 0
    6168:	0e 94 59 04 	call	0x8b2	; 0x8b2 <i2c_write_2_bytes>
		}
		
	}	
}
    616c:	cf 91       	pop	r28
    616e:	1f 91       	pop	r17
    6170:	0f 91       	pop	r16
    6172:	ff 90       	pop	r15
    6174:	ef 90       	pop	r14
    6176:	08 95       	ret

00006178 <send_results_pc>:
	//i2c_receive(0);
	//i2c_stop();
	//USART_SendByte('@');			// End of transmission indication.
//}
void send_results_pc()
{
    6178:	cf 93       	push	r28
	//USART_SendByte(mach_typ);		// Send type of machine info Donor or general
	//USART_SendByte('?');
	//USART_SendByte(location_ID);
	//USART_Transmit_dec(location_ID_number);
	//USART_SendByte('?');
	USART_SendByte(i2c_read_byte(EEPROM_DEV_ADDR, CODE_TYPE));		// Send type of code
    617a:	80 ea       	ldi	r24, 0xA0	; 160
    617c:	6c e9       	ldi	r22, 0x9C	; 156
    617e:	70 e0       	ldi	r23, 0x00	; 0
    6180:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6184:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_SendByte('?');
    6188:	8f e3       	ldi	r24, 0x3F	; 63
    618a:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_SendByte(i2c_read_byte(EEPROM_DEV_ADDR, MACHINE_TYPE));		// Send type of machine info Donor or general
    618e:	80 ea       	ldi	r24, 0xA0	; 160
    6190:	6b e9       	ldi	r22, 0x9B	; 155
    6192:	70 e0       	ldi	r23, 0x00	; 0
    6194:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6198:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_SendByte('?');
    619c:	8f e3       	ldi	r24, 0x3F	; 63
    619e:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_SendByte(i2c_read_byte(EEPROM_DEV_ADDR, LOCATION_ID_NAME));
    61a2:	80 ea       	ldi	r24, 0xA0	; 160
    61a4:	69 e9       	ldi	r22, 0x99	; 153
    61a6:	70 e0       	ldi	r23, 0x00	; 0
    61a8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    61ac:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_Transmit_dec(i2c_read_byte(EEPROM_DEV_ADDR, LOCATION_ID_NO));
    61b0:	80 ea       	ldi	r24, 0xA0	; 160
    61b2:	6a e9       	ldi	r22, 0x9A	; 154
    61b4:	70 e0       	ldi	r23, 0x00	; 0
    61b6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    61ba:	90 e0       	ldi	r25, 0x00	; 0
    61bc:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte('?');
    61c0:	8f e3       	ldi	r24, 0x3F	; 63
    61c2:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
/**********************************	17.09.2015	**********************************************/	
	
	USART_putstring(DEV_ID);		// Transmitting the device ID
    61c6:	85 e6       	ldi	r24, 0x65	; 101
    61c8:	92 e0       	ldi	r25, 0x02	; 2
    61ca:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_SendByte('?');
    61ce:	8f e3       	ldi	r24, 0x3F	; 63
    61d0:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
/******************************************18.09.15*************************************************/
	
USART_Transmit_dec(voter_count);//NO OF VOTERS VOTED
    61d4:	80 91 5c 08 	lds	r24, 0x085C
    61d8:	90 91 5d 08 	lds	r25, 0x085D
    61dc:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
/*****************************************************************************************************/	
/******************************************18.09.15*************************************************/
USART_SendByte('?');
    61e0:	8f e3       	ldi	r24, 0x3F	; 63
    61e2:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
USART_Transmit_dec(invalid_voters);//NO OF VOTERS NOT VOTED
    61e6:	80 91 00 06 	lds	r24, 0x0600
    61ea:	90 91 01 06 	lds	r25, 0x0601
    61ee:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>

/*****************************************************************************************************/

	for(i=0; i <= 127; i++)
    61f2:	c0 e0       	ldi	r28, 0x00	; 0
	{
		USART_SendByte('?');
    61f4:	8f e3       	ldi	r24, 0x3F	; 63
    61f6:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
		i2c_read_2_bytes(i);
    61fa:	8c 2f       	mov	r24, r28
    61fc:	90 e0       	ldi	r25, 0x00	; 0
    61fe:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
		
		USART_Transmit_dec(i2c_data_16);
    6202:	80 91 61 05 	lds	r24, 0x0561
    6206:	90 91 62 05 	lds	r25, 0x0562
    620a:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
USART_SendByte('?');
USART_Transmit_dec(invalid_voters);//NO OF VOTERS NOT VOTED

/*****************************************************************************************************/

	for(i=0; i <= 127; i++)
    620e:	ce 5f       	subi	r28, 0xFE	; 254
    6210:	c0 38       	cpi	r28, 0x80	; 128
    6212:	81 f7       	brne	.-32     	; 0x61f4 <send_results_pc+0x7c>
		i2c_read_2_bytes(i);
		
		USART_Transmit_dec(i2c_data_16);
		i++;
	}
	USART_SendByte('@');	  // End of transmission indication.
    6214:	80 e4       	ldi	r24, 0x40	; 64
    6216:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
}
    621a:	cf 91       	pop	r28
    621c:	08 95       	ret

0000621e <__vector_25>:

void send_results_pc();
void i2c_send_byte(unsigned char addr, unsigned char data);

ISR(USART0_RX_vect)		// USART interrupt service routine.
{
    621e:	1f 92       	push	r1
    6220:	0f 92       	push	r0
    6222:	0f b6       	in	r0, 0x3f	; 63
    6224:	0f 92       	push	r0
    6226:	0b b6       	in	r0, 0x3b	; 59
    6228:	0f 92       	push	r0
    622a:	11 24       	eor	r1, r1
    622c:	2f 93       	push	r18
    622e:	3f 93       	push	r19
    6230:	4f 93       	push	r20
    6232:	5f 93       	push	r21
    6234:	6f 93       	push	r22
    6236:	7f 93       	push	r23
    6238:	8f 93       	push	r24
    623a:	9f 93       	push	r25
    623c:	af 93       	push	r26
    623e:	bf 93       	push	r27
    6240:	ef 93       	push	r30
    6242:	ff 93       	push	r31
	
	static char bufferPointer;
	rx0_data = UDR0;
    6244:	80 91 c6 00 	lds	r24, 0x00C6
    6248:	80 93 5f 05 	sts	0x055F, r24
	if(rx0_data == '~')
    624c:	80 91 5f 05 	lds	r24, 0x055F
    6250:	8e 37       	cpi	r24, 0x7E	; 126
    6252:	41 f4       	brne	.+16     	; 0x6264 <__vector_25+0x46>
		{
			uartReceiveTerminator = 1;		// Clear flag after sericing the uartBuffer. check definition above.
    6254:	80 91 11 06 	lds	r24, 0x0611
    6258:	80 61       	ori	r24, 0x10	; 16
    625a:	80 93 11 06 	sts	0x0611, r24
			bufferPointer = 0;
    625e:	10 92 de 04 	sts	0x04DE, r1
    6262:	19 c0       	rjmp	.+50     	; 0x6296 <__vector_25+0x78>
		}
	else if(rx0_data == 'R')
    6264:	80 91 5f 05 	lds	r24, 0x055F
    6268:	82 35       	cpi	r24, 0x52	; 82
    626a:	19 f4       	brne	.+6      	; 0x6272 <__vector_25+0x54>
			send_results_pc();
    626c:	0e 94 bc 30 	call	0x6178	; 0x6178 <send_results_pc>
    6270:	0c c0       	rjmp	.+24     	; 0x628a <__vector_25+0x6c>
	else uartRecieveBuffer[bufferPointer++] = rx0_data;	// Store value in UDR to the uartBuffer and increment buffer index pointer
    6272:	80 91 de 04 	lds	r24, 0x04DE
    6276:	90 91 5f 05 	lds	r25, 0x055F
    627a:	e4 e1       	ldi	r30, 0x14	; 20
    627c:	f6 e0       	ldi	r31, 0x06	; 6
    627e:	e8 0f       	add	r30, r24
    6280:	f1 1d       	adc	r31, r1
    6282:	90 83       	st	Z, r25
    6284:	8f 5f       	subi	r24, 0xFF	; 255
    6286:	80 93 de 04 	sts	0x04DE, r24

	if(bufferPointer > MAX_RECV_BUFFERSIZE)
    628a:	80 91 de 04 	lds	r24, 0x04DE
    628e:	83 33       	cpi	r24, 0x33	; 51
    6290:	10 f0       	brcs	.+4      	; 0x6296 <__vector_25+0x78>
		bufferPointer = 0;
    6292:	10 92 de 04 	sts	0x04DE, r1
}
    6296:	ff 91       	pop	r31
    6298:	ef 91       	pop	r30
    629a:	bf 91       	pop	r27
    629c:	af 91       	pop	r26
    629e:	9f 91       	pop	r25
    62a0:	8f 91       	pop	r24
    62a2:	7f 91       	pop	r23
    62a4:	6f 91       	pop	r22
    62a6:	5f 91       	pop	r21
    62a8:	4f 91       	pop	r20
    62aa:	3f 91       	pop	r19
    62ac:	2f 91       	pop	r18
    62ae:	0f 90       	pop	r0
    62b0:	0b be       	out	0x3b, r0	; 59
    62b2:	0f 90       	pop	r0
    62b4:	0f be       	out	0x3f, r0	; 63
    62b6:	0f 90       	pop	r0
    62b8:	1f 90       	pop	r1
    62ba:	18 95       	reti

000062bc <disp_result_LCD>:
	}
	USART_SendByte('@');	  // End of transmission indication.
}

void disp_result_LCD()				// This function will Display the stored vote_count on the LCD on every press of the RESULT button.
{
    62bc:	bf 92       	push	r11
    62be:	cf 92       	push	r12
    62c0:	df 92       	push	r13
    62c2:	ef 92       	push	r14
    62c4:	ff 92       	push	r15
    62c6:	0f 93       	push	r16
    62c8:	1f 93       	push	r17
    62ca:	cf 93       	push	r28
    62cc:	df 93       	push	r29
	unsigned int disp_count,count;
	disp_count = 0;
	count=1;
	while(disp_count < candidate_count*2)	//CHANGED HERE BY NEERAJ ON 21/03/2016 TO DISPLAY RESULTS OF ONLY CONFIGURED NO. OF CANDIDATES
    62ce:	80 91 f6 05 	lds	r24, 0x05F6
    62d2:	88 23       	and	r24, r24
    62d4:	09 f4       	brne	.+2      	; 0x62d8 <disp_result_LCD+0x1c>
    62d6:	84 c0       	rjmp	.+264    	; 0x63e0 <disp_result_LCD+0x124>

void disp_result_LCD()				// This function will Display the stored vote_count on the LCD on every press of the RESULT button.
{
	unsigned int disp_count,count;
	disp_count = 0;
	count=1;
    62d8:	ee 24       	eor	r14, r14
    62da:	ff 24       	eor	r15, r15
    62dc:	e3 94       	inc	r14
}

void disp_result_LCD()				// This function will Display the stored vote_count on the LCD on every press of the RESULT button.
{
	unsigned int disp_count,count;
	disp_count = 0;
    62de:	00 e0       	ldi	r16, 0x00	; 0
    62e0:	10 e0       	ldi	r17, 0x00	; 0
	count=1;
	while(disp_count < candidate_count*2)	//CHANGED HERE BY NEERAJ ON 21/03/2016 TO DISPLAY RESULTS OF ONLY CONFIGURED NO. OF CANDIDATES
	{										// disp_count is actually the address. So after address is incremented by 6 for 3 candidate count display next 3 values on LCD
		while (RESULT);
    62e2:	0f 2e       	mov	r0, r31
    62e4:	f9 e0       	ldi	r31, 0x09	; 9
    62e6:	cf 2e       	mov	r12, r31
    62e8:	f1 e0       	ldi	r31, 0x01	; 1
    62ea:	df 2e       	mov	r13, r31
    62ec:	f0 2d       	mov	r31, r0
		lcd_cmd(0x01);
		lcd_cmd(0x82);								// shift cursor to 2nd line
		for (unsigned char i = 0; i <= 2; i++)		// read total votes of 3 candidates
    62ee:	bb 24       	eor	r11, r11
				lcd_data_int(i2c_data_16);				// display value on LCD
			}
			
			if (disp_count == 126)				//added by neeraj on 01/08/2016 So that it will display result upto 64 only
			{
				i=3;	// to exit the for loop
    62f0:	d3 e0       	ldi	r29, 0x03	; 3
	unsigned int disp_count,count;
	disp_count = 0;
	count=1;
	while(disp_count < candidate_count*2)	//CHANGED HERE BY NEERAJ ON 21/03/2016 TO DISPLAY RESULTS OF ONLY CONFIGURED NO. OF CANDIDATES
	{										// disp_count is actually the address. So after address is incremented by 6 for 3 candidate count display next 3 values on LCD
		while (RESULT);
    62f2:	d6 01       	movw	r26, r12
    62f4:	8c 91       	ld	r24, X
    62f6:	82 fd       	sbrc	r24, 2
    62f8:	fc cf       	rjmp	.-8      	; 0x62f2 <disp_result_LCD+0x36>
		lcd_cmd(0x01);
    62fa:	81 e0       	ldi	r24, 0x01	; 1
    62fc:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_cmd(0x82);								// shift cursor to 2nd line
    6300:	82 e8       	ldi	r24, 0x82	; 130
    6302:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		for (unsigned char i = 0; i <= 2; i++)		// read total votes of 3 candidates
    6306:	cb 2d       	mov	r28, r11
		{	if (i == 0)
    6308:	cc 23       	and	r28, r28
    630a:	81 f4       	brne	.+32     	; 0x632c <disp_result_LCD+0x70>
			{
				lcd_data_int1(count);
    630c:	c7 01       	movw	r24, r14
    630e:	0e 94 20 03 	call	0x640	; 0x640 <lcd_data_int1>
				lcd_cmd(0xC1);
    6312:	81 ec       	ldi	r24, 0xC1	; 193
    6314:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				i2c_read_2_bytes(disp_count);			// send address of data
    6318:	c8 01       	movw	r24, r16
    631a:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
				lcd_data_int(i2c_data_16);				// display value on LCD
    631e:	80 91 61 05 	lds	r24, 0x0561
    6322:	90 91 62 05 	lds	r25, 0x0562
    6326:	0e 94 4a 03 	call	0x694	; 0x694 <lcd_data_int>
    632a:	29 c0       	rjmp	.+82     	; 0x637e <disp_result_LCD+0xc2>
			}				
			if (i == 1)
    632c:	c1 30       	cpi	r28, 0x01	; 1
    632e:	99 f4       	brne	.+38     	; 0x6356 <disp_result_LCD+0x9a>
			{
				lcd_cmd(0x87);
    6330:	87 e8       	ldi	r24, 0x87	; 135
    6332:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				lcd_data_int1(count);
    6336:	c7 01       	movw	r24, r14
    6338:	0e 94 20 03 	call	0x640	; 0x640 <lcd_data_int1>
				lcd_cmd(0xC6);
    633c:	86 ec       	ldi	r24, 0xC6	; 198
    633e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				i2c_read_2_bytes(disp_count);			// send address of data
    6342:	c8 01       	movw	r24, r16
    6344:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
				lcd_data_int(i2c_data_16);				// display value on LCD
    6348:	80 91 61 05 	lds	r24, 0x0561
    634c:	90 91 62 05 	lds	r25, 0x0562
    6350:	0e 94 4a 03 	call	0x694	; 0x694 <lcd_data_int>
    6354:	14 c0       	rjmp	.+40     	; 0x637e <disp_result_LCD+0xc2>
			}
			if (i == 2)
    6356:	c2 30       	cpi	r28, 0x02	; 2
    6358:	91 f4       	brne	.+36     	; 0x637e <disp_result_LCD+0xc2>
			{
				lcd_cmd(0x8C);
    635a:	8c e8       	ldi	r24, 0x8C	; 140
    635c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				lcd_data_int1(count);
    6360:	c7 01       	movw	r24, r14
    6362:	0e 94 20 03 	call	0x640	; 0x640 <lcd_data_int1>
				lcd_cmd(0xCB);
    6366:	8b ec       	ldi	r24, 0xCB	; 203
    6368:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				i2c_read_2_bytes(disp_count);			// send address of data
    636c:	c8 01       	movw	r24, r16
    636e:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
				lcd_data_int(i2c_data_16);				// display value on LCD
    6372:	80 91 61 05 	lds	r24, 0x0561
    6376:	90 91 62 05 	lds	r25, 0x0562
    637a:	0e 94 4a 03 	call	0x694	; 0x694 <lcd_data_int>
			}
			
			if (disp_count == 126)				//added by neeraj on 01/08/2016 So that it will display result upto 64 only
    637e:	0e 37       	cpi	r16, 0x7E	; 126
    6380:	11 05       	cpc	r17, r1
    6382:	09 f4       	brne	.+2      	; 0x6386 <disp_result_LCD+0xca>
			{
				i=3;	// to exit the for loop
    6384:	cd 2f       	mov	r28, r29
			}
			disp_count = disp_count + 2;			// increment address count by two. Because one candidate count is stored in 2 bytes
			count=count+1;
    6386:	08 94       	sec
    6388:	e1 1c       	adc	r14, r1
    638a:	f1 1c       	adc	r15, r1
			if(count > candidate_count ) //CHANGED HERE BY NEERAJ ON 21/03/2016 TO DISPLAY RESULTS OF ONLY CONFIGURED NO. OF CANDIDATES
    638c:	80 91 f6 05 	lds	r24, 0x05F6
    6390:	90 e0       	ldi	r25, 0x00	; 0
    6392:	8e 15       	cp	r24, r14
    6394:	9f 05       	cpc	r25, r15
    6396:	38 f4       	brcc	.+14     	; 0x63a6 <disp_result_LCD+0xea>
			{
				i = 3;					// to exit the for loop
				disp_count=candidate_count*2;//to exit while loop
    6398:	00 91 f6 05 	lds	r16, 0x05F6
    639c:	10 e0       	ldi	r17, 0x00	; 0
    639e:	00 0f       	add	r16, r16
    63a0:	11 1f       	adc	r17, r17
    63a2:	98 01       	movw	r18, r16
    63a4:	07 c0       	rjmp	.+14     	; 0x63b4 <disp_result_LCD+0xf8>
			
			if (disp_count == 126)				//added by neeraj on 01/08/2016 So that it will display result upto 64 only
			{
				i=3;	// to exit the for loop
			}
			disp_count = disp_count + 2;			// increment address count by two. Because one candidate count is stored in 2 bytes
    63a6:	0e 5f       	subi	r16, 0xFE	; 254
    63a8:	1f 4f       	sbci	r17, 0xFF	; 255
	while(disp_count < candidate_count*2)	//CHANGED HERE BY NEERAJ ON 21/03/2016 TO DISPLAY RESULTS OF ONLY CONFIGURED NO. OF CANDIDATES
	{										// disp_count is actually the address. So after address is incremented by 6 for 3 candidate count display next 3 values on LCD
		while (RESULT);
		lcd_cmd(0x01);
		lcd_cmd(0x82);								// shift cursor to 2nd line
		for (unsigned char i = 0; i <= 2; i++)		// read total votes of 3 candidates
    63aa:	cf 5f       	subi	r28, 0xFF	; 255
    63ac:	c3 30       	cpi	r28, 0x03	; 3
    63ae:	08 f4       	brcc	.+2      	; 0x63b2 <disp_result_LCD+0xf6>
    63b0:	ab cf       	rjmp	.-170    	; 0x6308 <disp_result_LCD+0x4c>
			
			if (disp_count == 126)				//added by neeraj on 01/08/2016 So that it will display result upto 64 only
			{
				i=3;	// to exit the for loop
			}
			disp_count = disp_count + 2;			// increment address count by two. Because one candidate count is stored in 2 bytes
    63b2:	98 01       	movw	r18, r16
			{
				i = 3;					// to exit the for loop
				disp_count=candidate_count*2;//to exit while loop
			}
		}
		while(!RESULT);
    63b4:	f6 01       	movw	r30, r12
    63b6:	80 81       	ld	r24, Z
    63b8:	82 ff       	sbrs	r24, 2
    63ba:	fc cf       	rjmp	.-8      	; 0x63b4 <disp_result_LCD+0xf8>
    63bc:	8f ef       	ldi	r24, 0xFF	; 255
    63be:	9f e1       	ldi	r25, 0x1F	; 31
    63c0:	ac e1       	ldi	r26, 0x1C	; 28
    63c2:	81 50       	subi	r24, 0x01	; 1
    63c4:	90 40       	sbci	r25, 0x00	; 0
    63c6:	a0 40       	sbci	r26, 0x00	; 0
    63c8:	e1 f7       	brne	.-8      	; 0x63c2 <disp_result_LCD+0x106>
    63ca:	00 c0       	rjmp	.+0      	; 0x63cc <disp_result_LCD+0x110>
    63cc:	00 00       	nop
void disp_result_LCD()				// This function will Display the stored vote_count on the LCD on every press of the RESULT button.
{
	unsigned int disp_count,count;
	disp_count = 0;
	count=1;
	while(disp_count < candidate_count*2)	//CHANGED HERE BY NEERAJ ON 21/03/2016 TO DISPLAY RESULTS OF ONLY CONFIGURED NO. OF CANDIDATES
    63ce:	80 91 f6 05 	lds	r24, 0x05F6
    63d2:	90 e0       	ldi	r25, 0x00	; 0
    63d4:	88 0f       	add	r24, r24
    63d6:	99 1f       	adc	r25, r25
    63d8:	28 17       	cp	r18, r24
    63da:	39 07       	cpc	r19, r25
    63dc:	08 f4       	brcc	.+2      	; 0x63e0 <disp_result_LCD+0x124>
    63de:	89 cf       	rjmp	.-238    	; 0x62f2 <disp_result_LCD+0x36>
		}
		while(!RESULT);
		_delay_ms(500);
		
	}
	while(RESULT);
    63e0:	e9 e0       	ldi	r30, 0x09	; 9
    63e2:	f1 e0       	ldi	r31, 0x01	; 1
    63e4:	80 81       	ld	r24, Z
    63e6:	82 fd       	sbrc	r24, 2
    63e8:	fd cf       	rjmp	.-6      	; 0x63e4 <disp_result_LCD+0x128>
    63ea:	8f ef       	ldi	r24, 0xFF	; 255
    63ec:	9f ef       	ldi	r25, 0xFF	; 255
    63ee:	ac e2       	ldi	r26, 0x2C	; 44
    63f0:	81 50       	subi	r24, 0x01	; 1
    63f2:	90 40       	sbci	r25, 0x00	; 0
    63f4:	a0 40       	sbci	r26, 0x00	; 0
    63f6:	e1 f7       	brne	.-8      	; 0x63f0 <disp_result_LCD+0x134>
    63f8:	00 c0       	rjmp	.+0      	; 0x63fa <disp_result_LCD+0x13e>
    63fa:	00 00       	nop
	_delay_ms(800);
	lcd_cmd(0X01);
    63fc:	81 e0       	ldi	r24, 0x01	; 1
    63fe:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
}
    6402:	df 91       	pop	r29
    6404:	cf 91       	pop	r28
    6406:	1f 91       	pop	r17
    6408:	0f 91       	pop	r16
    640a:	ff 90       	pop	r15
    640c:	ef 90       	pop	r14
    640e:	df 90       	pop	r13
    6410:	cf 90       	pop	r12
    6412:	bf 90       	pop	r11
    6414:	08 95       	ret

00006416 <i2cWriteString>:

/******* Added 23.04.2017	******/
void i2cWriteString(uint8_t device_id, uint16_t locAddr, uint8_t *stringData, uint8_t stringLen)
{
    6416:	ef 92       	push	r14
    6418:	ff 92       	push	r15
    641a:	0f 93       	push	r16
    641c:	1f 93       	push	r17
    641e:	cf 93       	push	r28
    6420:	df 93       	push	r29
    6422:	08 2f       	mov	r16, r24
    6424:	e6 2e       	mov	r14, r22
    6426:	f7 2e       	mov	r15, r23
    6428:	ea 01       	movw	r28, r20
    642a:	12 2f       	mov	r17, r18
	do
	{
		i2c_start();
    642c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
		i2c_send(device_id);
    6430:	80 2f       	mov	r24, r16
    6432:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
		if(slave_ack == 1)				// Stop I2C if no acknowledge
    6436:	80 91 11 06 	lds	r24, 0x0611
    643a:	88 23       	and	r24, r24
    643c:	14 f4       	brge	.+4      	; 0x6442 <i2cWriteString+0x2c>
		i2c_stop();
    643e:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
	}
	while(slave_ack == 1);				//loop until acknowledge is received
    6442:	80 91 11 06 	lds	r24, 0x0611
    6446:	88 23       	and	r24, r24
    6448:	8c f3       	brlt	.-30     	; 0x642c <i2cWriteString+0x16>
	i2c_send(locAddr / 256);
    644a:	8f 2d       	mov	r24, r15
    644c:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(locAddr % 256);
    6450:	8e 2d       	mov	r24, r14
    6452:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>

	for(uint8_t i = 1; i <= stringLen; i++)
    6456:	11 23       	and	r17, r17
    6458:	39 f0       	breq	.+14     	; 0x6468 <i2cWriteString+0x52>
    645a:	01 e0       	ldi	r16, 0x01	; 1
	{
		i2c_send(*stringData);
    645c:	89 91       	ld	r24, Y+
    645e:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	}
	while(slave_ack == 1);				//loop until acknowledge is received
	i2c_send(locAddr / 256);
	i2c_send(locAddr % 256);

	for(uint8_t i = 1; i <= stringLen; i++)
    6462:	0f 5f       	subi	r16, 0xFF	; 255
    6464:	10 17       	cp	r17, r16
    6466:	d0 f7       	brcc	.-12     	; 0x645c <i2cWriteString+0x46>
	{
		i2c_send(*stringData);
		stringData++;
	}
	i2c_stop();
    6468:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
}
    646c:	df 91       	pop	r29
    646e:	cf 91       	pop	r28
    6470:	1f 91       	pop	r17
    6472:	0f 91       	pop	r16
    6474:	ff 90       	pop	r15
    6476:	ef 90       	pop	r14
    6478:	08 95       	ret

0000647a <i2cReadString>:

void i2cReadString(uint8_t device_id, uint16_t locAddr, uint8_t *stringData, uint8_t stringLen)
{
    647a:	ef 92       	push	r14
    647c:	ff 92       	push	r15
    647e:	0f 93       	push	r16
    6480:	1f 93       	push	r17
    6482:	cf 93       	push	r28
    6484:	df 93       	push	r29
    6486:	08 2f       	mov	r16, r24
    6488:	e6 2e       	mov	r14, r22
    648a:	f7 2e       	mov	r15, r23
    648c:	ea 01       	movw	r28, r20
    648e:	12 2f       	mov	r17, r18
	i2c_start();
    6490:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
	i2c_send(device_id);
    6494:	80 2f       	mov	r24, r16
    6496:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(locAddr / 256);	// Sending the 16 bit address in two 8 bits
    649a:	8f 2d       	mov	r24, r15
    649c:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_send(locAddr % 256);
    64a0:	8e 2d       	mov	r24, r14
    64a2:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
	i2c_stop();
    64a6:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
    64aa:	8f ef       	ldi	r24, 0xFF	; 255
    64ac:	91 e1       	ldi	r25, 0x11	; 17
    64ae:	01 97       	sbiw	r24, 0x01	; 1
    64b0:	f1 f7       	brne	.-4      	; 0x64ae <i2cReadString+0x34>
    64b2:	00 c0       	rjmp	.+0      	; 0x64b4 <i2cReadString+0x3a>
    64b4:	00 00       	nop
	_delay_ms(1);
	i2c_start();
    64b6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
	i2c_send(device_id + 1);
    64ba:	80 2f       	mov	r24, r16
    64bc:	8f 5f       	subi	r24, 0xFF	; 255
    64be:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>

	USART_Transmit_dec(stringLen);
    64c2:	81 2f       	mov	r24, r17
    64c4:	90 e0       	ldi	r25, 0x00	; 0
    64c6:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>

	for(uint8_t i = 1; i <= stringLen; i++)
    64ca:	11 23       	and	r17, r17
    64cc:	51 f0       	breq	.+20     	; 0x64e2 <i2cReadString+0x68>
    64ce:	01 e0       	ldi	r16, 0x01	; 1
	{
		i2c_receive(1);
    64d0:	81 e0       	ldi	r24, 0x01	; 1
    64d2:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <i2c_receive>
		*stringData = i2c_data;
    64d6:	80 91 f9 05 	lds	r24, 0x05F9
    64da:	89 93       	st	Y+, r24
	i2c_start();
	i2c_send(device_id + 1);

	USART_Transmit_dec(stringLen);

	for(uint8_t i = 1; i <= stringLen; i++)
    64dc:	0f 5f       	subi	r16, 0xFF	; 255
    64de:	10 17       	cp	r17, r16
    64e0:	b8 f7       	brcc	.-18     	; 0x64d0 <i2cReadString+0x56>
		*stringData = i2c_data;
		stringData++;

	}
	// i2c_receive(0);
	i2c_stop();
    64e2:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
}
    64e6:	df 91       	pop	r29
    64e8:	cf 91       	pop	r28
    64ea:	1f 91       	pop	r17
    64ec:	0f 91       	pop	r16
    64ee:	ff 90       	pop	r15
    64f0:	ef 90       	pop	r14
    64f2:	08 95       	ret

000064f4 <i2cSaveName>:

uint16_t i2cSaveName(uint8_t device_id, uint16_t locAddr, uint8_t *stringData, uint8_t stringLen)		// function returns the last address @ which data was saved.
{
    64f4:	0f 93       	push	r16
    64f6:	1f 93       	push	r17
    64f8:	cf 93       	push	r28
    64fa:	df 93       	push	r29
    64fc:	0f 92       	push	r0
    64fe:	0f 92       	push	r0
    6500:	cd b7       	in	r28, 0x3d	; 61
    6502:	de b7       	in	r29, 0x3e	; 62
    6504:	5a 83       	std	Y+2, r21	; 0x02
    6506:	49 83       	std	Y+1, r20	; 0x01
	uint16_t eepromStringAddrHolder;

	eepromStringAddrHolder = locAddr;	// initial load with storing start address
	eepromStringAddrHolder += stringLen;
    6508:	8b 01       	movw	r16, r22
    650a:	02 0f       	add	r16, r18
    650c:	11 1d       	adc	r17, r1
	i2cWriteString(device_id, locAddr, &stringData, stringLen);
    650e:	ae 01       	movw	r20, r28
    6510:	4f 5f       	subi	r20, 0xFF	; 255
    6512:	5f 4f       	sbci	r21, 0xFF	; 255
    6514:	0e 94 0b 32 	call	0x6416	; 0x6416 <i2cWriteString>
	return eepromStringAddrHolder;
}
    6518:	80 2f       	mov	r24, r16
    651a:	91 2f       	mov	r25, r17
    651c:	0f 90       	pop	r0
    651e:	0f 90       	pop	r0
    6520:	df 91       	pop	r29
    6522:	cf 91       	pop	r28
    6524:	1f 91       	pop	r17
    6526:	0f 91       	pop	r16
    6528:	08 95       	ret

0000652a <main>:


int main(void)
{
		unsigned char i;
		PORT_pins_init();				// Initialize PORT pins to desired direction and values
    652a:	0e 94 c2 02 	call	0x584	; 0x584 <PORT_pins_init>
		USART_Init();					// Initialize USART to set baud rate
    652e:	0e 94 e6 02 	call	0x5cc	; 0x5cc <USART_Init>
		i2c_init();						// Initializing I2C registers of ATmega32
    6532:	0e 94 72 03 	call	0x6e4	; 0x6e4 <i2c_init>
		spi_init();
    6536:	0e 94 af 38 	call	0x715e	; 0x715e <spi_init>
		sei();							// Enable global interrupt bit.
    653a:	78 94       	sei
		
		lcd_cmd(0x38);			 		// Initialize 16x2 LCD for 5*7 matrix display
    653c:	88 e3       	ldi	r24, 0x38	; 56
    653e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_cmd(0x0C);					// LCD ON ,Cursor ON
    6542:	8c e0       	ldi	r24, 0x0C	; 12
    6544:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		
		vote_cast = 0;
    6548:	10 92 07 06 	sts	0x0607, r1
		voter_count = 0;
    654c:	10 92 5d 08 	sts	0x085D, r1
    6550:	10 92 5c 08 	sts	0x085C, r1
		invalid_voters = 0;
    6554:	10 92 01 06 	sts	0x0601, r1
    6558:	10 92 00 06 	sts	0x0600, r1
		USART_putstring("Serial OK!");	// Test serial COM Comment before flashing the controller.
    655c:	8a e6       	ldi	r24, 0x6A	; 106
    655e:	92 e0       	ldi	r25, 0x02	; 2
    6560:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>

i2cReadWordArray(EEPROM_DEV_ADDR, namePtrSaveAddr, stringPtrArray, 30);		// Added 27.04.2017 Printer Integration. Reload Name string pointers
    6564:	80 ea       	ldi	r24, 0xA0	; 160
    6566:	60 e0       	ldi	r22, 0x00	; 0
    6568:	71 e0       	ldi	r23, 0x01	; 1
    656a:	4f ed       	ldi	r20, 0xDF	; 223
    656c:	54 e0       	ldi	r21, 0x04	; 4
    656e:	2e e1       	ldi	r18, 0x1E	; 30
    6570:	0e 94 8c 04 	call	0x918	; 0x918 <i2cReadWordArray>

			
	while (INIT && RESULT)					// When Control unit is powered on, these two messages are continuously
    6574:	c9 e0       	ldi	r28, 0x09	; 9
    6576:	d1 e0       	ldi	r29, 0x01	; 1
	{										// displayed on the LCD until a button i.e. INIT or RESULT is pressed.
		

		if(uartReceiveTerminator)
			{
				serviceCommand(&uartRecieveBuffer);
    6578:	04 e1       	ldi	r16, 0x14	; 20
    657a:	16 e0       	ldi	r17, 0x06	; 6
				uartReceiveTerminator = 0;
			 }

		lcd_cmd(0x01);						// Command to clear the LCD of any previous message.
		lcd_data_str("Press INIT for");
    657c:	0f 2e       	mov	r0, r31
    657e:	f5 e7       	ldi	r31, 0x75	; 117
    6580:	ef 2e       	mov	r14, r31
    6582:	f2 e0       	ldi	r31, 0x02	; 2
    6584:	ff 2e       	mov	r15, r31
    6586:	f0 2d       	mov	r31, r0
		lcd_cmd(0xC0);						// Command to go to line 2 of the LCD
		lcd_data_str("new session");
    6588:	0f 2e       	mov	r0, r31
    658a:	f4 e8       	ldi	r31, 0x84	; 132
    658c:	cf 2e       	mov	r12, r31
    658e:	f2 e0       	ldi	r31, 0x02	; 2
    6590:	df 2e       	mov	r13, r31
    6592:	f0 2d       	mov	r31, r0
		_delay_ms(950);						// Delay before changing message on screen.
		lcd_cmd(0x01);						// Clears the screen
		lcd_data_str("RESULT to load");
    6594:	0f 2e       	mov	r0, r31
    6596:	f0 e9       	ldi	r31, 0x90	; 144
    6598:	af 2e       	mov	r10, r31
    659a:	f2 e0       	ldi	r31, 0x02	; 2
    659c:	bf 2e       	mov	r11, r31
    659e:	f0 2d       	mov	r31, r0
		lcd_cmd(0xC0);
		lcd_data_str("previous session");
    65a0:	0f 2e       	mov	r0, r31
    65a2:	ff e9       	ldi	r31, 0x9F	; 159
    65a4:	8f 2e       	mov	r8, r31
    65a6:	f2 e0       	ldi	r31, 0x02	; 2
    65a8:	9f 2e       	mov	r9, r31
    65aa:	f0 2d       	mov	r31, r0
		USART_putstring("Serial OK!");	// Test serial COM Comment before flashing the controller.

i2cReadWordArray(EEPROM_DEV_ADDR, namePtrSaveAddr, stringPtrArray, 30);		// Added 27.04.2017 Printer Integration. Reload Name string pointers

			
	while (INIT && RESULT)					// When Control unit is powered on, these two messages are continuously
    65ac:	36 c0       	rjmp	.+108    	; 0x661a <main+0xf0>
	{										// displayed on the LCD until a button i.e. INIT or RESULT is pressed.
		

		if(uartReceiveTerminator)
    65ae:	80 91 11 06 	lds	r24, 0x0611
    65b2:	84 ff       	sbrs	r24, 4
    65b4:	08 c0       	rjmp	.+16     	; 0x65c6 <main+0x9c>
			{
				serviceCommand(&uartRecieveBuffer);
    65b6:	c8 01       	movw	r24, r16
    65b8:	0e 94 af 01 	call	0x35e	; 0x35e <serviceCommand>
				uartReceiveTerminator = 0;
    65bc:	80 91 11 06 	lds	r24, 0x0611
    65c0:	8f 7e       	andi	r24, 0xEF	; 239
    65c2:	80 93 11 06 	sts	0x0611, r24
			 }

		lcd_cmd(0x01);						// Command to clear the LCD of any previous message.
    65c6:	81 e0       	ldi	r24, 0x01	; 1
    65c8:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_data_str("Press INIT for");
    65cc:	c7 01       	movw	r24, r14
    65ce:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
		lcd_cmd(0xC0);						// Command to go to line 2 of the LCD
    65d2:	80 ec       	ldi	r24, 0xC0	; 192
    65d4:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_data_str("new session");
    65d8:	c6 01       	movw	r24, r12
    65da:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
    65de:	8f ef       	ldi	r24, 0xFF	; 255
    65e0:	9f e6       	ldi	r25, 0x6F	; 111
    65e2:	a5 e3       	ldi	r26, 0x35	; 53
    65e4:	81 50       	subi	r24, 0x01	; 1
    65e6:	90 40       	sbci	r25, 0x00	; 0
    65e8:	a0 40       	sbci	r26, 0x00	; 0
    65ea:	e1 f7       	brne	.-8      	; 0x65e4 <main+0xba>
    65ec:	00 c0       	rjmp	.+0      	; 0x65ee <main+0xc4>
    65ee:	00 00       	nop
		_delay_ms(950);						// Delay before changing message on screen.
		lcd_cmd(0x01);						// Clears the screen
    65f0:	81 e0       	ldi	r24, 0x01	; 1
    65f2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_data_str("RESULT to load");
    65f6:	c5 01       	movw	r24, r10
    65f8:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
		lcd_cmd(0xC0);
    65fc:	80 ec       	ldi	r24, 0xC0	; 192
    65fe:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_data_str("previous session");
    6602:	c4 01       	movw	r24, r8
    6604:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
    6608:	8f ef       	ldi	r24, 0xFF	; 255
    660a:	9f e6       	ldi	r25, 0x6F	; 111
    660c:	a5 e3       	ldi	r26, 0x35	; 53
    660e:	81 50       	subi	r24, 0x01	; 1
    6610:	90 40       	sbci	r25, 0x00	; 0
    6612:	a0 40       	sbci	r26, 0x00	; 0
    6614:	e1 f7       	brne	.-8      	; 0x660e <main+0xe4>
    6616:	00 c0       	rjmp	.+0      	; 0x6618 <main+0xee>
    6618:	00 00       	nop
		USART_putstring("Serial OK!");	// Test serial COM Comment before flashing the controller.

i2cReadWordArray(EEPROM_DEV_ADDR, namePtrSaveAddr, stringPtrArray, 30);		// Added 27.04.2017 Printer Integration. Reload Name string pointers

			
	while (INIT && RESULT)					// When Control unit is powered on, these two messages are continuously
    661a:	88 81       	ld	r24, Y
    661c:	81 ff       	sbrs	r24, 1
    661e:	03 c0       	rjmp	.+6      	; 0x6626 <main+0xfc>
    6620:	88 81       	ld	r24, Y
    6622:	82 fd       	sbrc	r24, 2
    6624:	c4 cf       	rjmp	.-120    	; 0x65ae <main+0x84>
		lcd_cmd(0xC0);
		lcd_data_str("previous session");
		_delay_ms(950);
	}
	
	if(!INIT && RESULT)						// If INIT is pressed, the controller enters configuration mode and should be connected to 
    6626:	80 91 09 01 	lds	r24, 0x0109
    662a:	81 fd       	sbrc	r24, 1
    662c:	96 c1       	rjmp	.+812    	; 0x695a <main+0x430>
    662e:	80 91 09 01 	lds	r24, 0x0109
    6632:	82 ff       	sbrs	r24, 2
    6634:	92 c1       	rjmp	.+804    	; 0x695a <main+0x430>
	{										// a PC.
		cli();								// Clear all interrupts mostly for disabling USART interrupt
    6636:	f8 94       	cli
		lcd_cmd(0x01);						// Clear control units LCD screen
    6638:	81 e0       	ldi	r24, 0x01	; 1
    663a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_data_str("Connect to PC");
    663e:	80 eb       	ldi	r24, 0xB0	; 176
    6640:	92 e0       	ldi	r25, 0x02	; 2
    6642:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
		while(USART_ReceiveByte() != 'A');	// Here the controller waits for a response from the EVM PC application.
    6646:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    664a:	81 34       	cpi	r24, 0x41	; 65
    664c:	e1 f7       	brne	.-8      	; 0x6646 <main+0x11c>
		lcd_cmd(0x01);						// When 'A' is received, all previous session settings and vote count data in the EEPROM is
    664e:	81 e0       	ldi	r24, 0x01	; 1
    6650:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
											// cleared.
		i2c_start();						// Put the start condition on the I2C lines.
    6654:	0e 94 79 03 	call	0x6f2	; 0x6f2 <i2c_start>
		i2c_send(EEPROM_DEV_ADDR);			// Send the EEPROM device address.
    6658:	80 ea       	ldi	r24, 0xA0	; 160
    665a:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
    665e:	c2 e8       	ldi	r28, 0x82	; 130
		for (i=0; i<130; i++)				// Clear 130 bytes of the EEPROM - 2 bytes per candidate, 32 candidates + settings locations
		{
			i2c_send(0x00);
    6660:	80 e0       	ldi	r24, 0x00	; 0
    6662:	0e 94 84 03 	call	0x708	; 0x708 <i2c_send>
    6666:	c1 50       	subi	r28, 0x01	; 1
		while(USART_ReceiveByte() != 'A');	// Here the controller waits for a response from the EVM PC application.
		lcd_cmd(0x01);						// When 'A' is received, all previous session settings and vote count data in the EEPROM is
											// cleared.
		i2c_start();						// Put the start condition on the I2C lines.
		i2c_send(EEPROM_DEV_ADDR);			// Send the EEPROM device address.
		for (i=0; i<130; i++)				// Clear 130 bytes of the EEPROM - 2 bytes per candidate, 32 candidates + settings locations
    6668:	d9 f7       	brne	.-10     	; 0x6660 <main+0x136>
		{
			i2c_send(0x00);
		}
		i2c_stop();							// Put stop  condition on the I2C lines.
    666a:	0e 94 dd 00 	call	0x1ba	; 0x1ba <i2c_stop>
		
		lcd_data_str("Configuring");
    666e:	8e eb       	ldi	r24, 0xBE	; 190
    6670:	92 e0       	ldi	r25, 0x02	; 2
    6672:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
		lcd_cmd(0xC0);
    6676:	80 ec       	ldi	r24, 0xC0	; 192
    6678:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		
		USART_putstring(DEV_ID);					// New ID format. Fixed length 1 alphabet and 3 no.s giving 25974 ID's
    667c:	85 e6       	ldi	r24, 0x65	; 101
    667e:	92 e0       	ldi	r25, 0x02	; 2
    6680:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>

		while(USART_ReceiveByte() != 'L');			// Receive Location ID
    6684:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6688:	8c 34       	cpi	r24, 0x4C	; 76
    668a:	e1 f7       	brne	.-8      	; 0x6684 <main+0x15a>
		
		location_ID = USART_ReceiveByte();	
    668c:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6690:	48 2f       	mov	r20, r24
    6692:	80 93 46 06 	sts	0x0646, r24
		eeprom_write_i2c(EEPROM_DEV_ADDR, LOCATION_ID_NAME, location_ID);
    6696:	80 ea       	ldi	r24, 0xA0	; 160
    6698:	69 e9       	ldi	r22, 0x99	; 153
    669a:	70 e0       	ldi	r23, 0x00	; 0
    669c:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    66a0:	c0 e0       	ldi	r28, 0x00	; 0
    66a2:	d2 e0       	ldi	r29, 0x02	; 2
    66a4:	ce 01       	movw	r24, r28
    66a6:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>

		location_ID_number = USART_ReceiveByte();	// ID of the machine at that location
    66aa:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    66ae:	48 2f       	mov	r20, r24
    66b0:	80 93 fa 05 	sts	0x05FA, r24
		eeprom_write_i2c(EEPROM_DEV_ADDR, LOCATION_ID_NO, location_ID_number);
    66b4:	80 ea       	ldi	r24, 0xA0	; 160
    66b6:	6a e9       	ldi	r22, 0x9A	; 154
    66b8:	70 e0       	ldi	r23, 0x00	; 0
    66ba:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");
    66be:	ce 01       	movw	r24, r28
    66c0:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>

		while(USART_ReceiveByte() != 'T');			// Receive machine type info 
    66c4:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    66c8:	84 35       	cpi	r24, 0x54	; 84
    66ca:	e1 f7       	brne	.-8      	; 0x66c4 <main+0x19a>
													// Used when requires special type of voting
		mach_typ = USART_ReceiveByte();
    66cc:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    66d0:	48 2f       	mov	r20, r24
    66d2:	80 93 ec 05 	sts	0x05EC, r24
		eeprom_write_i2c(EEPROM_DEV_ADDR, MACHINE_TYPE, mach_typ);
    66d6:	80 ea       	ldi	r24, 0xA0	; 160
    66d8:	6b e9       	ldi	r22, 0x9B	; 155
    66da:	70 e0       	ldi	r23, 0x00	; 0
    66dc:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");				
    66e0:	80 e0       	ldi	r24, 0x00	; 0
    66e2:	92 e0       	ldi	r25, 0x02	; 2
    66e4:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
		/************************************************************  16.12.2015 added by neeraj 	****************************************************************/
		while(USART_ReceiveByte() != 'P');			// Receive code type info
    66e8:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    66ec:	80 35       	cpi	r24, 0x50	; 80
    66ee:	e1 f7       	brne	.-8      	; 0x66e8 <main+0x1be>
													
		cod_typ = USART_ReceiveByte();
    66f0:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    66f4:	48 2f       	mov	r20, r24
    66f6:	80 93 10 06 	sts	0x0610, r24
		eeprom_write_i2c(EEPROM_DEV_ADDR, CODE_TYPE, cod_typ);
    66fa:	80 ea       	ldi	r24, 0xA0	; 160
    66fc:	6c e9       	ldi	r22, 0x9C	; 156
    66fe:	70 e0       	ldi	r23, 0x00	; 0
    6700:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    6704:	80 e0       	ldi	r24, 0x00	; 0
    6706:	92 e0       	ldi	r25, 0x02	; 2
    6708:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
		/************************************************************  16.12.2015 added by neeraj  	****************************************************************/
		
		
		while(USART_ReceiveByte() != 'N');			// Waiting for PC app to send 'N' - No. of candidates. This decides how many Voting pad buttons
    670c:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6710:	8e 34       	cpi	r24, 0x4E	; 78
    6712:	e1 f7       	brne	.-8      	; 0x670c <main+0x1e2>
													// should be activated.
		lcd_data_byte(0xFF);
    6714:	8f ef       	ldi	r24, 0xFF	; 255
    6716:	0e 94 15 03 	call	0x62a	; 0x62a <lcd_data_byte>
			
		candidate_count = USART_ReceiveByte();		// waiting for 1st byte for no. of candidates
    671a:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    671e:	80 93 f6 05 	sts	0x05F6, r24
		//candidate_count = 32;
		eeprom_write_i2c(EEPROM_DEV_ADDR, 65535, candidate_count);		// No. of candidates selected is stored at FFFF in EPROM
    6722:	40 91 f6 05 	lds	r20, 0x05F6
    6726:	80 ea       	ldi	r24, 0xA0	; 160
    6728:	6f ef       	ldi	r22, 0xFF	; 255
    672a:	7f ef       	ldi	r23, 0xFF	; 255
    672c:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");				
    6730:	80 e0       	ldi	r24, 0x00	; 0
    6732:	92 e0       	ldi	r25, 0x02	; 2
    6734:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
/*****/	lcd_data_byte(0xFF);
    6738:	8f ef       	ldi	r24, 0xFF	; 255
    673a:	0e 94 15 03 	call	0x62a	; 0x62a <lcd_data_byte>
		
		while(USART_ReceiveByte() != 'O');			// Wait for PC app to send 'O' - No. of votes a voter can cast. This decides how many votes a 
    673e:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6742:	8f 34       	cpi	r24, 0x4F	; 79
    6744:	e1 f7       	brne	.-8      	; 0x673e <main+0x214>
													// voter should be allowed to vote. Once a voter has cast this number of votes the Voting pad is
		voter_votes = USART_ReceiveByte();
    6746:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    674a:	80 93 c6 08 	sts	0x08C6, r24
		//voter_votes = 10;
		eeprom_write_i2c(EEPROM_DEV_ADDR, 65534, voter_votes);	// Store @ FFFE
    674e:	40 91 c6 08 	lds	r20, 0x08C6
    6752:	80 ea       	ldi	r24, 0xA0	; 160
    6754:	6e ef       	ldi	r22, 0xFE	; 254
    6756:	7f ef       	ldi	r23, 0xFF	; 255
    6758:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    675c:	80 e0       	ldi	r24, 0x00	; 0
    675e:	92 e0       	ldi	r25, 0x02	; 2
    6760:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
/*****/	lcd_data_byte(0xFF);
    6764:	8f ef       	ldi	r24, 0xFF	; 255
    6766:	0e 94 15 03 	call	0x62a	; 0x62a <lcd_data_byte>
				
		while(USART_ReceiveByte() != 'C');		
    676a:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    676e:	83 34       	cpi	r24, 0x43	; 67
    6770:	e1 f7       	brne	.-8      	; 0x676a <main+0x240>
			
		temp1 = USART_ReceiveByte();				// 1st category value
    6772:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6776:	80 93 0f 06 	sts	0x060F, r24
		temp1 = (USART_ReceiveByte() << 4) + temp1;	// Combining 1st and 2nd category nibbles into a byte 
    677a:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    677e:	90 91 0f 06 	lds	r25, 0x060F
    6782:	82 95       	swap	r24
    6784:	80 7f       	andi	r24, 0xF0	; 240
    6786:	98 0f       	add	r25, r24
    6788:	90 93 0f 06 	sts	0x060F, r25
		//temp1 = 0x22;
		eeprom_write_i2c(EEPROM_DEV_ADDR, categories1_2, temp1);
    678c:	40 91 0f 06 	lds	r20, 0x060F
    6790:	80 ea       	ldi	r24, 0xA0	; 160
    6792:	60 e8       	ldi	r22, 0x80	; 128
    6794:	70 e0       	ldi	r23, 0x00	; 0
    6796:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    679a:	c0 e0       	ldi	r28, 0x00	; 0
    679c:	d2 e0       	ldi	r29, 0x02	; 2
    679e:	ce 01       	movw	r24, r28
    67a0:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
/*****/	lcd_data_byte(0xFF);
    67a4:	8f ef       	ldi	r24, 0xFF	; 255
    67a6:	0e 94 15 03 	call	0x62a	; 0x62a <lcd_data_byte>
		
		temp1 = USART_ReceiveByte();						// 3rd category value
    67aa:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    67ae:	80 93 0f 06 	sts	0x060F, r24
		temp1 = (USART_ReceiveByte() << 4) + temp1;			// Combining 3rd and 4th category nibbles into a byte 
    67b2:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    67b6:	90 91 0f 06 	lds	r25, 0x060F
    67ba:	82 95       	swap	r24
    67bc:	80 7f       	andi	r24, 0xF0	; 240
    67be:	98 0f       	add	r25, r24
    67c0:	90 93 0f 06 	sts	0x060F, r25
		//temp1 = 0x22;
		eeprom_write_i2c(EEPROM_DEV_ADDR, categories3_4, temp1);			// and storing into UC EEPROM @ categories3_4 ie location 1
    67c4:	40 91 0f 06 	lds	r20, 0x060F
    67c8:	80 ea       	ldi	r24, 0xA0	; 160
    67ca:	61 e8       	ldi	r22, 0x81	; 129
    67cc:	70 e0       	ldi	r23, 0x00	; 0
    67ce:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    67d2:	ce 01       	movw	r24, r28
    67d4:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
/*****/	lcd_data_byte(0xFF);
    67d8:	8f ef       	ldi	r24, 0xFF	; 255
    67da:	0e 94 15 03 	call	0x62a	; 0x62a <lcd_data_byte>

		temp1 = USART_ReceiveByte();
    67de:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    67e2:	80 93 0f 06 	sts	0x060F, r24
		temp1 = (USART_ReceiveByte() << 4) + temp1;		// Combining 3rd and 4th category nibbles into a byte
    67e6:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    67ea:	90 91 0f 06 	lds	r25, 0x060F
    67ee:	82 95       	swap	r24
    67f0:	80 7f       	andi	r24, 0xF0	; 240
    67f2:	98 0f       	add	r25, r24
    67f4:	90 93 0f 06 	sts	0x060F, r25
		//temp1 = 0x22;
		eeprom_write_i2c(EEPROM_DEV_ADDR, categories5_6, temp1);		// and storing into UC EEPROM @ categories5_6 ie location 2
    67f8:	40 91 0f 06 	lds	r20, 0x060F
    67fc:	80 ea       	ldi	r24, 0xA0	; 160
    67fe:	62 e8       	ldi	r22, 0x82	; 130
    6800:	70 e0       	ldi	r23, 0x00	; 0
    6802:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    6806:	ce 01       	movw	r24, r28
    6808:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
/*****/	lcd_data_byte(0xFF);
    680c:	8f ef       	ldi	r24, 0xFF	; 255
    680e:	0e 94 15 03 	call	0x62a	; 0x62a <lcd_data_byte>

		temp1 = USART_ReceiveByte();
    6812:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6816:	80 93 0f 06 	sts	0x060F, r24
//		temp1 = (USART_ReceiveByte() << 4) + temp1;		// Combining 7th and 8th category nibbles into a byte
		//temp1 = 0x02;
		eeprom_write_i2c(EEPROM_DEV_ADDR, categories7_8, temp1);		// and storing into UC EEPROM @ categories7_8 ie location 3	 											
    681a:	40 91 0f 06 	lds	r20, 0x060F
    681e:	80 ea       	ldi	r24, 0xA0	; 160
    6820:	63 e8       	ldi	r22, 0x83	; 131
    6822:	70 e0       	ldi	r23, 0x00	; 0
    6824:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");																
    6828:	ce 01       	movw	r24, r28
    682a:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
														// Saving the no of votes that can be cast in a category.
														// store votes in 1st category @ location 4 as defined
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, catg1_votes, USART_ReceiveByte());
    682e:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6832:	48 2f       	mov	r20, r24
    6834:	80 ea       	ldi	r24, 0xA0	; 160
    6836:	68 e8       	ldi	r22, 0x88	; 136
    6838:	70 e0       	ldi	r23, 0x00	; 0
    683a:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    683e:	ce 01       	movw	r24, r28
    6840:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
    6844:	af ef       	ldi	r26, 0xFF	; 255
    6846:	b3 eb       	ldi	r27, 0xB3	; 179
    6848:	11 97       	sbiw	r26, 0x01	; 1
    684a:	f1 f7       	brne	.-4      	; 0x6848 <main+0x31e>
    684c:	00 c0       	rjmp	.+0      	; 0x684e <main+0x324>
    684e:	00 00       	nop
		_delay_ms(10);
		//eeprom_write_i2c(EEPROM_DEV_ADDR, catg1_votes, 1);
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, catg2_votes, USART_ReceiveByte());
    6850:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6854:	48 2f       	mov	r20, r24
    6856:	80 ea       	ldi	r24, 0xA0	; 160
    6858:	69 e8       	ldi	r22, 0x89	; 137
    685a:	70 e0       	ldi	r23, 0x00	; 0
    685c:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    6860:	ce 01       	movw	r24, r28
    6862:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
    6866:	ef ef       	ldi	r30, 0xFF	; 255
    6868:	f3 eb       	ldi	r31, 0xB3	; 179
    686a:	31 97       	sbiw	r30, 0x01	; 1
    686c:	f1 f7       	brne	.-4      	; 0x686a <main+0x340>
    686e:	00 c0       	rjmp	.+0      	; 0x6870 <main+0x346>
    6870:	00 00       	nop
		_delay_ms(10);
		//eeprom_write_i2c(EEPROM_DEV_ADDR, catg2_votes, 1);
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, catg3_votes, USART_ReceiveByte());
    6872:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6876:	48 2f       	mov	r20, r24
    6878:	80 ea       	ldi	r24, 0xA0	; 160
    687a:	6a e8       	ldi	r22, 0x8A	; 138
    687c:	70 e0       	ldi	r23, 0x00	; 0
    687e:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    6882:	ce 01       	movw	r24, r28
    6884:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
    6888:	8f ef       	ldi	r24, 0xFF	; 255
    688a:	93 eb       	ldi	r25, 0xB3	; 179
    688c:	01 97       	sbiw	r24, 0x01	; 1
    688e:	f1 f7       	brne	.-4      	; 0x688c <main+0x362>
    6890:	00 c0       	rjmp	.+0      	; 0x6892 <main+0x368>
    6892:	00 00       	nop
		_delay_ms(10);
		//eeprom_write_i2c(EEPROM_DEV_ADDR, catg3_votes, 1);
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, catg4_votes, USART_ReceiveByte());
    6894:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    6898:	48 2f       	mov	r20, r24
    689a:	80 ea       	ldi	r24, 0xA0	; 160
    689c:	6b e8       	ldi	r22, 0x8B	; 139
    689e:	70 e0       	ldi	r23, 0x00	; 0
    68a0:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    68a4:	ce 01       	movw	r24, r28
    68a6:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
    68aa:	af ef       	ldi	r26, 0xFF	; 255
    68ac:	b3 eb       	ldi	r27, 0xB3	; 179
    68ae:	11 97       	sbiw	r26, 0x01	; 1
    68b0:	f1 f7       	brne	.-4      	; 0x68ae <main+0x384>
    68b2:	00 c0       	rjmp	.+0      	; 0x68b4 <main+0x38a>
    68b4:	00 00       	nop
		_delay_ms(10);
		//eeprom_write_i2c(EEPROM_DEV_ADDR, catg4_votes, 1);
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, catg5_votes, USART_ReceiveByte());
    68b6:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    68ba:	48 2f       	mov	r20, r24
    68bc:	80 ea       	ldi	r24, 0xA0	; 160
    68be:	6c e8       	ldi	r22, 0x8C	; 140
    68c0:	70 e0       	ldi	r23, 0x00	; 0
    68c2:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    68c6:	ce 01       	movw	r24, r28
    68c8:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
    68cc:	ef ef       	ldi	r30, 0xFF	; 255
    68ce:	f3 eb       	ldi	r31, 0xB3	; 179
    68d0:	31 97       	sbiw	r30, 0x01	; 1
    68d2:	f1 f7       	brne	.-4      	; 0x68d0 <main+0x3a6>
    68d4:	00 c0       	rjmp	.+0      	; 0x68d6 <main+0x3ac>
    68d6:	00 00       	nop
		_delay_ms(10);
		//eeprom_write_i2c(EEPROM_DEV_ADDR, catg5_votes, 1);
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, catg6_votes, USART_ReceiveByte());
    68d8:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    68dc:	48 2f       	mov	r20, r24
    68de:	80 ea       	ldi	r24, 0xA0	; 160
    68e0:	6d e8       	ldi	r22, 0x8D	; 141
    68e2:	70 e0       	ldi	r23, 0x00	; 0
    68e4:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    68e8:	ce 01       	movw	r24, r28
    68ea:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
    68ee:	8f ef       	ldi	r24, 0xFF	; 255
    68f0:	93 eb       	ldi	r25, 0xB3	; 179
    68f2:	01 97       	sbiw	r24, 0x01	; 1
    68f4:	f1 f7       	brne	.-4      	; 0x68f2 <main+0x3c8>
    68f6:	00 c0       	rjmp	.+0      	; 0x68f8 <main+0x3ce>
    68f8:	00 00       	nop
		_delay_ms(10);
		//eeprom_write_i2c(EEPROM_DEV_ADDR, catg6_votes, 1);
		
		eeprom_write_i2c(EEPROM_DEV_ADDR, catg7_votes, USART_ReceiveByte());
    68fa:	0e 94 ef 02 	call	0x5de	; 0x5de <USART_ReceiveByte>
    68fe:	48 2f       	mov	r20, r24
    6900:	80 ea       	ldi	r24, 0xA0	; 160
    6902:	6e e8       	ldi	r22, 0x8E	; 142
    6904:	70 e0       	ldi	r23, 0x00	; 0
    6906:	0e 94 e5 04 	call	0x9ca	; 0x9ca <eeprom_write_i2c>
USART_putstring("OK");		
    690a:	ce 01       	movw	r24, r28
    690c:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
    6910:	af ef       	ldi	r26, 0xFF	; 255
    6912:	b3 eb       	ldi	r27, 0xB3	; 179
    6914:	11 97       	sbiw	r26, 0x01	; 1
    6916:	f1 f7       	brne	.-4      	; 0x6914 <main+0x3ea>
    6918:	00 c0       	rjmp	.+0      	; 0x691a <main+0x3f0>
    691a:	00 00       	nop
    691c:	ef ef       	ldi	r30, 0xFF	; 255
    691e:	f3 eb       	ldi	r31, 0xB3	; 179
    6920:	31 97       	sbiw	r30, 0x01	; 1
    6922:	f1 f7       	brne	.-4      	; 0x6920 <main+0x3f6>
    6924:	00 c0       	rjmp	.+0      	; 0x6926 <main+0x3fc>
    6926:	00 00       	nop
		_delay_ms(10);
		//eeprom_write_i2c(EEPROM_DEV_ADDR, catg7_votes, 1);
		_delay_ms(10);
//		eeprom_write_i2c(EEPROM_DEV_ADDR, catg8_votes, USART_ReceiveByte());
		voting_on = 0;//ADDED ON 04.03.2016 SO THAT AFTER CONFIGURATION IT SHOULD NOT BACKUP THE VOTES AND GLOW LED'S
    6928:	80 91 11 06 	lds	r24, 0x0611
    692c:	8f 7d       	andi	r24, 0xDF	; 223
    692e:	80 93 11 06 	sts	0x0611, r24
		sei();
    6932:	78 94       	sei
		//SETBIT(UCSRB, 7); 

		i2c_write_2_bytes(EEPROM_DEV_ADDR, voters_voted, 0x00);	//Clear previous voter count
    6934:	80 ea       	ldi	r24, 0xA0	; 160
    6936:	68 e9       	ldi	r22, 0x98	; 152
    6938:	70 e0       	ldi	r23, 0x00	; 0
    693a:	40 e0       	ldi	r20, 0x00	; 0
    693c:	50 e0       	ldi	r21, 0x00	; 0
    693e:	0e 94 59 04 	call	0x8b2	; 0x8b2 <i2c_write_2_bytes>
		i2c_write_2_bytes(EEPROM_DEV_ADDR, voters_not_voted, 0X00);//CLEAR INVALID VOTER COUNT
    6942:	80 ea       	ldi	r24, 0xA0	; 160
    6944:	61 eb       	ldi	r22, 0xB1	; 177
    6946:	70 e0       	ldi	r23, 0x00	; 0
    6948:	40 e0       	ldi	r20, 0x00	; 0
    694a:	50 e0       	ldi	r21, 0x00	; 0
    694c:	0e 94 59 04 	call	0x8b2	; 0x8b2 <i2c_write_2_bytes>
USART_putstring("ALL OK");		;
    6950:	8a ec       	ldi	r24, 0xCA	; 202
    6952:	92 e0       	ldi	r25, 0x02	; 2
    6954:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
    6958:	6f c0       	rjmp	.+222    	; 0x6a38 <main+0x50e>
	}
	else if(INIT && !RESULT)		// If Result key was pressed. RESULT goes LOW.
    695a:	80 91 09 01 	lds	r24, 0x0109
    695e:	81 ff       	sbrs	r24, 1
    6960:	6b c0       	rjmp	.+214    	; 0x6a38 <main+0x50e>
    6962:	80 91 09 01 	lds	r24, 0x0109
    6966:	82 fd       	sbrc	r24, 2
    6968:	67 c0       	rjmp	.+206    	; 0x6a38 <main+0x50e>
	{
		lcd_cmd(0x01);
    696a:	81 e0       	ldi	r24, 0x01	; 1
    696c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
		lcd_data_str("Loading....");
    6970:	81 ed       	ldi	r24, 0xD1	; 209
    6972:	92 e0       	ldi	r25, 0x02	; 2
    6974:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>

		// i2cReadWordArray(EEPROM_DEV_ADDR, namePtrSaveAddr, stringPtrArray, 30);		// Added 27.04.2017 Printer Integration. Reload Name string pointers
		// _delay_ms(200);
		
		voter_votes = i2c_read_byte(EEPROM_DEV_ADDR, 0xFFFE);
    6978:	80 ea       	ldi	r24, 0xA0	; 160
    697a:	6e ef       	ldi	r22, 0xFE	; 254
    697c:	7f ef       	ldi	r23, 0xFF	; 255
    697e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6982:	80 93 c6 08 	sts	0x08C6, r24
		candidate_count = i2c_read_byte(EEPROM_DEV_ADDR, 0xFFFF);
    6986:	80 ea       	ldi	r24, 0xA0	; 160
    6988:	6f ef       	ldi	r22, 0xFF	; 255
    698a:	7f ef       	ldi	r23, 0xFF	; 255
    698c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6990:	80 93 f6 05 	sts	0x05F6, r24
    6994:	8f ef       	ldi	r24, 0xFF	; 255
    6996:	9f e9       	ldi	r25, 0x9F	; 159
    6998:	a5 e0       	ldi	r26, 0x05	; 5
    699a:	81 50       	subi	r24, 0x01	; 1
    699c:	90 40       	sbci	r25, 0x00	; 0
    699e:	a0 40       	sbci	r26, 0x00	; 0
    69a0:	e1 f7       	brne	.-8      	; 0x699a <main+0x470>
    69a2:	00 c0       	rjmp	.+0      	; 0x69a4 <main+0x47a>
    69a4:	00 00       	nop
		
		//voter_count = i2c_read_byte(EEPROM_DEV_ADDR, voters_voted);	// read no .of voters in previous session
		
		_delay_ms(100);
		i2c_read_2_bytes(voters_voted);
    69a6:	88 e9       	ldi	r24, 0x98	; 152
    69a8:	90 e0       	ldi	r25, 0x00	; 0
    69aa:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
		voter_count = i2c_data_16;
    69ae:	80 91 61 05 	lds	r24, 0x0561
    69b2:	90 91 62 05 	lds	r25, 0x0562
    69b6:	90 93 5d 08 	sts	0x085D, r25
    69ba:	80 93 5c 08 	sts	0x085C, r24
    69be:	8f ef       	ldi	r24, 0xFF	; 255
    69c0:	9f e9       	ldi	r25, 0x9F	; 159
    69c2:	a5 e0       	ldi	r26, 0x05	; 5
    69c4:	81 50       	subi	r24, 0x01	; 1
    69c6:	90 40       	sbci	r25, 0x00	; 0
    69c8:	a0 40       	sbci	r26, 0x00	; 0
    69ca:	e1 f7       	brne	.-8      	; 0x69c4 <main+0x49a>
    69cc:	00 c0       	rjmp	.+0      	; 0x69ce <main+0x4a4>
    69ce:	00 00       	nop
		
		_delay_ms(100);
		i2c_read_2_bytes(voters_not_voted);
    69d0:	81 eb       	ldi	r24, 0xB1	; 177
    69d2:	90 e0       	ldi	r25, 0x00	; 0
    69d4:	0e 94 1f 04 	call	0x83e	; 0x83e <i2c_read_2_bytes>
		invalid_voters = i2c_data_16;
    69d8:	80 91 61 05 	lds	r24, 0x0561
    69dc:	90 91 62 05 	lds	r25, 0x0562
    69e0:	90 93 01 06 	sts	0x0601, r25
    69e4:	80 93 00 06 	sts	0x0600, r24
		
		cod_typ=i2c_read_byte(EEPROM_DEV_ADDR, CODE_TYPE);
    69e8:	80 ea       	ldi	r24, 0xA0	; 160
    69ea:	6c e9       	ldi	r22, 0x9C	; 156
    69ec:	70 e0       	ldi	r23, 0x00	; 0
    69ee:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    69f2:	80 93 10 06 	sts	0x0610, r24
		mach_typ = i2c_read_byte(EEPROM_DEV_ADDR, MACHINE_TYPE);		// Send type of machine info Donor or general
    69f6:	80 ea       	ldi	r24, 0xA0	; 160
    69f8:	6b e9       	ldi	r22, 0x9B	; 155
    69fa:	70 e0       	ldi	r23, 0x00	; 0
    69fc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6a00:	80 93 ec 05 	sts	0x05EC, r24
		location_ID = i2c_read_byte(EEPROM_DEV_ADDR, LOCATION_ID_NAME);
    6a04:	80 ea       	ldi	r24, 0xA0	; 160
    6a06:	69 e9       	ldi	r22, 0x99	; 153
    6a08:	70 e0       	ldi	r23, 0x00	; 0
    6a0a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6a0e:	80 93 46 06 	sts	0x0646, r24
		location_ID_number = i2c_read_byte(EEPROM_DEV_ADDR, LOCATION_ID_NO);
    6a12:	80 ea       	ldi	r24, 0xA0	; 160
    6a14:	6a e9       	ldi	r22, 0x9A	; 154
    6a16:	70 e0       	ldi	r23, 0x00	; 0
    6a18:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6a1c:	80 93 fa 05 	sts	0x05FA, r24
		
		flag_register = i2c_read_byte(EEPROM_DEV_ADDR, flag_register_bkp);
    6a20:	80 ea       	ldi	r24, 0xA0	; 160
    6a22:	6f ea       	ldi	r22, 0xAF	; 175
    6a24:	70 e0       	ldi	r23, 0x00	; 0
    6a26:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6a2a:	80 93 11 06 	sts	0x0611, r24
		
		while(!RESULT); 
    6a2e:	e9 e0       	ldi	r30, 0x09	; 9
    6a30:	f1 e0       	ldi	r31, 0x01	; 1
    6a32:	80 81       	ld	r24, Z
    6a34:	82 ff       	sbrs	r24, 2
    6a36:	fd cf       	rjmp	.-6      	; 0x6a32 <main+0x508>
	}
	
	lcd_cmd(0x01);
    6a38:	81 e0       	ldi	r24, 0x01	; 1
    6a3a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
	 
/**********************************************************************************************************/
/*			Determining the size of the general category												  */
/**********************************************************************************************************/
// Find out the number of categories configured.
	no_of_categories = 0;
    6a3e:	10 92 d7 08 	sts	0x08D7, r1
    6a42:	af ef       	ldi	r26, 0xFF	; 255
    6a44:	b3 eb       	ldi	r27, 0xB3	; 179
    6a46:	11 97       	sbiw	r26, 0x01	; 1
    6a48:	f1 f7       	brne	.-4      	; 0x6a46 <main+0x51c>
    6a4a:	00 c0       	rjmp	.+0      	; 0x6a4c <main+0x522>
    6a4c:	00 00       	nop
	_delay_ms(10);
	temp1 = i2c_read_byte(EEPROM_DEV_ADDR, categories1_2);		// Load categories1_2 info from internal EEPROM
    6a4e:	80 ea       	ldi	r24, 0xA0	; 160
    6a50:	60 e8       	ldi	r22, 0x80	; 128
    6a52:	70 e0       	ldi	r23, 0x00	; 0
    6a54:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6a58:	80 93 0f 06 	sts	0x060F, r24
	if((temp1 & 0x0F) > 0)
    6a5c:	80 91 0f 06 	lds	r24, 0x060F
    6a60:	90 e0       	ldi	r25, 0x00	; 0
    6a62:	8f 70       	andi	r24, 0x0F	; 15
    6a64:	90 70       	andi	r25, 0x00	; 0
    6a66:	18 16       	cp	r1, r24
    6a68:	19 06       	cpc	r1, r25
    6a6a:	2c f4       	brge	.+10     	; 0x6a76 <main+0x54c>
	no_of_categories = no_of_categories + 1;
    6a6c:	80 91 d7 08 	lds	r24, 0x08D7
    6a70:	8f 5f       	subi	r24, 0xFF	; 255
    6a72:	80 93 d7 08 	sts	0x08D7, r24
	if((temp1 & 0xF0) > 0)
    6a76:	80 91 0f 06 	lds	r24, 0x060F
    6a7a:	80 7f       	andi	r24, 0xF0	; 240
    6a7c:	29 f0       	breq	.+10     	; 0x6a88 <main+0x55e>
	no_of_categories = no_of_categories + 1;
    6a7e:	80 91 d7 08 	lds	r24, 0x08D7
    6a82:	8f 5f       	subi	r24, 0xFF	; 255
    6a84:	80 93 d7 08 	sts	0x08D7, r24
    6a88:	ef ef       	ldi	r30, 0xFF	; 255
    6a8a:	f3 eb       	ldi	r31, 0xB3	; 179
    6a8c:	31 97       	sbiw	r30, 0x01	; 1
    6a8e:	f1 f7       	brne	.-4      	; 0x6a8c <main+0x562>
    6a90:	00 c0       	rjmp	.+0      	; 0x6a92 <main+0x568>
    6a92:	00 00       	nop
	
	_delay_ms(10);
	temp1 = i2c_read_byte(EEPROM_DEV_ADDR, categories3_4);		// Load categories3_4 info from internal EEPROM
    6a94:	80 ea       	ldi	r24, 0xA0	; 160
    6a96:	61 e8       	ldi	r22, 0x81	; 129
    6a98:	70 e0       	ldi	r23, 0x00	; 0
    6a9a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6a9e:	80 93 0f 06 	sts	0x060F, r24
	if((temp1 & 0x0F) > 0)
    6aa2:	80 91 0f 06 	lds	r24, 0x060F
    6aa6:	90 e0       	ldi	r25, 0x00	; 0
    6aa8:	8f 70       	andi	r24, 0x0F	; 15
    6aaa:	90 70       	andi	r25, 0x00	; 0
    6aac:	18 16       	cp	r1, r24
    6aae:	19 06       	cpc	r1, r25
    6ab0:	2c f4       	brge	.+10     	; 0x6abc <main+0x592>
	no_of_categories = no_of_categories + 1;
    6ab2:	80 91 d7 08 	lds	r24, 0x08D7
    6ab6:	8f 5f       	subi	r24, 0xFF	; 255
    6ab8:	80 93 d7 08 	sts	0x08D7, r24
	if((temp1 & 0xF0) > 0)
    6abc:	80 91 0f 06 	lds	r24, 0x060F
    6ac0:	80 7f       	andi	r24, 0xF0	; 240
    6ac2:	29 f0       	breq	.+10     	; 0x6ace <main+0x5a4>
	no_of_categories = no_of_categories + 1;
    6ac4:	80 91 d7 08 	lds	r24, 0x08D7
    6ac8:	8f 5f       	subi	r24, 0xFF	; 255
    6aca:	80 93 d7 08 	sts	0x08D7, r24
    6ace:	8f ef       	ldi	r24, 0xFF	; 255
    6ad0:	93 eb       	ldi	r25, 0xB3	; 179
    6ad2:	01 97       	sbiw	r24, 0x01	; 1
    6ad4:	f1 f7       	brne	.-4      	; 0x6ad2 <main+0x5a8>
    6ad6:	00 c0       	rjmp	.+0      	; 0x6ad8 <main+0x5ae>
    6ad8:	00 00       	nop
	
	_delay_ms(10);
	temp1 = i2c_read_byte(EEPROM_DEV_ADDR, categories5_6);		// Load categories5_6 info from internal EEPROM
    6ada:	80 ea       	ldi	r24, 0xA0	; 160
    6adc:	62 e8       	ldi	r22, 0x82	; 130
    6ade:	70 e0       	ldi	r23, 0x00	; 0
    6ae0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6ae4:	80 93 0f 06 	sts	0x060F, r24
	if((temp1 & 0x0F) > 0)
    6ae8:	80 91 0f 06 	lds	r24, 0x060F
    6aec:	90 e0       	ldi	r25, 0x00	; 0
    6aee:	8f 70       	andi	r24, 0x0F	; 15
    6af0:	90 70       	andi	r25, 0x00	; 0
    6af2:	18 16       	cp	r1, r24
    6af4:	19 06       	cpc	r1, r25
    6af6:	2c f4       	brge	.+10     	; 0x6b02 <main+0x5d8>
	no_of_categories = no_of_categories + 1;
    6af8:	80 91 d7 08 	lds	r24, 0x08D7
    6afc:	8f 5f       	subi	r24, 0xFF	; 255
    6afe:	80 93 d7 08 	sts	0x08D7, r24
	if((temp1 & 0xF0) > 0)
    6b02:	80 91 0f 06 	lds	r24, 0x060F
    6b06:	80 7f       	andi	r24, 0xF0	; 240
    6b08:	29 f0       	breq	.+10     	; 0x6b14 <main+0x5ea>
	no_of_categories = no_of_categories + 1;
    6b0a:	80 91 d7 08 	lds	r24, 0x08D7
    6b0e:	8f 5f       	subi	r24, 0xFF	; 255
    6b10:	80 93 d7 08 	sts	0x08D7, r24
    6b14:	af ef       	ldi	r26, 0xFF	; 255
    6b16:	b3 eb       	ldi	r27, 0xB3	; 179
    6b18:	11 97       	sbiw	r26, 0x01	; 1
    6b1a:	f1 f7       	brne	.-4      	; 0x6b18 <main+0x5ee>
    6b1c:	00 c0       	rjmp	.+0      	; 0x6b1e <main+0x5f4>
    6b1e:	00 00       	nop
	
	_delay_ms(10);
	temp1 = i2c_read_byte(EEPROM_DEV_ADDR, categories7_8);		// Load categories7_8 info from internal EEPROM
    6b20:	80 ea       	ldi	r24, 0xA0	; 160
    6b22:	63 e8       	ldi	r22, 0x83	; 131
    6b24:	70 e0       	ldi	r23, 0x00	; 0
    6b26:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6b2a:	80 93 0f 06 	sts	0x060F, r24
	if((temp1 & 0x0F) > 0)
    6b2e:	80 91 0f 06 	lds	r24, 0x060F
    6b32:	90 e0       	ldi	r25, 0x00	; 0
    6b34:	8f 70       	andi	r24, 0x0F	; 15
    6b36:	90 70       	andi	r25, 0x00	; 0
    6b38:	18 16       	cp	r1, r24
    6b3a:	19 06       	cpc	r1, r25
    6b3c:	2c f4       	brge	.+10     	; 0x6b48 <main+0x61e>
	no_of_categories = no_of_categories + 1;
    6b3e:	80 91 d7 08 	lds	r24, 0x08D7
    6b42:	8f 5f       	subi	r24, 0xFF	; 255
    6b44:	80 93 d7 08 	sts	0x08D7, r24
	if((temp1 & 0xF0) > 0)
    6b48:	80 91 0f 06 	lds	r24, 0x060F
    6b4c:	80 7f       	andi	r24, 0xF0	; 240
    6b4e:	29 f0       	breq	.+10     	; 0x6b5a <main+0x630>
	no_of_categories = no_of_categories + 1;
    6b50:	80 91 d7 08 	lds	r24, 0x08D7
    6b54:	8f 5f       	subi	r24, 0xFF	; 255
    6b56:	80 93 d7 08 	sts	0x08D7, r24
		
/**********************************************************************************************************/	
	USART_SendByte(0x0D);									// For testing only.
    6b5a:	8d e0       	ldi	r24, 0x0D	; 13
    6b5c:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	USART_putstring("No. of categories: ");					// View the no. of categories configured
    6b60:	8d ed       	ldi	r24, 0xDD	; 221
    6b62:	92 e0       	ldi	r25, 0x02	; 2
    6b64:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(no_of_categories);
    6b68:	80 91 d7 08 	lds	r24, 0x08D7
    6b6c:	90 e0       	ldi	r25, 0x00	; 0
    6b6e:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6b72:	8d e0       	ldi	r24, 0x0D	; 13
    6b74:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
    6b78:	ef ef       	ldi	r30, 0xFF	; 255
    6b7a:	f3 eb       	ldi	r31, 0xB3	; 179
    6b7c:	31 97       	sbiw	r30, 0x01	; 1
    6b7e:	f1 f7       	brne	.-4      	; 0x6b7c <main+0x652>
    6b80:	00 c0       	rjmp	.+0      	; 0x6b82 <main+0x658>
    6b82:	00 00       	nop
/*********************************************************************************************************/
	
// CALCULATE THE NO. OF BUTTONS USED IN CATEGORIES (Total no. of buttons)
	_delay_ms(10);
	temp1 = i2c_read_byte(EEPROM_DEV_ADDR, categories1_2);
    6b84:	80 ea       	ldi	r24, 0xA0	; 160
    6b86:	60 e8       	ldi	r22, 0x80	; 128
    6b88:	70 e0       	ldi	r23, 0x00	; 0
    6b8a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6b8e:	80 93 0f 06 	sts	0x060F, r24
    6b92:	8f ef       	ldi	r24, 0xFF	; 255
    6b94:	93 eb       	ldi	r25, 0xB3	; 179
    6b96:	01 97       	sbiw	r24, 0x01	; 1
    6b98:	f1 f7       	brne	.-4      	; 0x6b96 <main+0x66c>
    6b9a:	00 c0       	rjmp	.+0      	; 0x6b9c <main+0x672>
    6b9c:	00 00       	nop
	_delay_ms(10);
	temp2 = i2c_read_byte(EEPROM_DEV_ADDR, categories3_4);
    6b9e:	80 ea       	ldi	r24, 0xA0	; 160
    6ba0:	61 e8       	ldi	r22, 0x81	; 129
    6ba2:	70 e0       	ldi	r23, 0x00	; 0
    6ba4:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6ba8:	80 93 66 05 	sts	0x0566, r24
    6bac:	af ef       	ldi	r26, 0xFF	; 255
    6bae:	b3 eb       	ldi	r27, 0xB3	; 179
    6bb0:	11 97       	sbiw	r26, 0x01	; 1
    6bb2:	f1 f7       	brne	.-4      	; 0x6bb0 <main+0x686>
    6bb4:	00 c0       	rjmp	.+0      	; 0x6bb6 <main+0x68c>
    6bb6:	00 00       	nop
	_delay_ms(10);
	temp3 = i2c_read_byte(EEPROM_DEV_ADDR, categories5_6);
    6bb8:	80 ea       	ldi	r24, 0xA0	; 160
    6bba:	62 e8       	ldi	r22, 0x82	; 130
    6bbc:	70 e0       	ldi	r23, 0x00	; 0
    6bbe:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6bc2:	80 93 d1 08 	sts	0x08D1, r24
    6bc6:	ef ef       	ldi	r30, 0xFF	; 255
    6bc8:	f3 eb       	ldi	r31, 0xB3	; 179
    6bca:	31 97       	sbiw	r30, 0x01	; 1
    6bcc:	f1 f7       	brne	.-4      	; 0x6bca <main+0x6a0>
    6bce:	00 c0       	rjmp	.+0      	; 0x6bd0 <main+0x6a6>
    6bd0:	00 00       	nop
	_delay_ms(10);
	temp4 = i2c_read_byte(EEPROM_DEV_ADDR, categories7_8);
    6bd2:	80 ea       	ldi	r24, 0xA0	; 160
    6bd4:	63 e8       	ldi	r22, 0x83	; 131
    6bd6:	70 e0       	ldi	r23, 0x00	; 0
    6bd8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6bdc:	80 93 4c 08 	sts	0x084C, r24
	no_of_buttons_in_categories = ((temp1 % 16) + (temp1 / 16) + (temp2 % 16) + (temp2 / 16) + (temp3 % 16) + (temp3 / 16)) + ((temp4 % 16) + (temp4 /16));
    6be0:	80 91 0f 06 	lds	r24, 0x060F
    6be4:	e0 91 0f 06 	lds	r30, 0x060F
    6be8:	70 91 66 05 	lds	r23, 0x0566
    6bec:	60 91 66 05 	lds	r22, 0x0566
    6bf0:	50 91 d1 08 	lds	r21, 0x08D1
    6bf4:	30 91 d1 08 	lds	r19, 0x08D1
    6bf8:	20 91 4c 08 	lds	r18, 0x084C
    6bfc:	40 91 4c 08 	lds	r20, 0x084C
    6c00:	90 e0       	ldi	r25, 0x00	; 0
    6c02:	8f 70       	andi	r24, 0x0F	; 15
    6c04:	90 70       	andi	r25, 0x00	; 0
    6c06:	e2 95       	swap	r30
    6c08:	ef 70       	andi	r30, 0x0F	; 15
    6c0a:	8e 0f       	add	r24, r30
    6c0c:	91 1d       	adc	r25, r1
    6c0e:	7f 70       	andi	r23, 0x0F	; 15
    6c10:	87 0f       	add	r24, r23
    6c12:	91 1d       	adc	r25, r1
    6c14:	62 95       	swap	r22
    6c16:	6f 70       	andi	r22, 0x0F	; 15
    6c18:	86 0f       	add	r24, r22
    6c1a:	91 1d       	adc	r25, r1
    6c1c:	5f 70       	andi	r21, 0x0F	; 15
    6c1e:	85 0f       	add	r24, r21
    6c20:	91 1d       	adc	r25, r1
    6c22:	32 95       	swap	r19
    6c24:	3f 70       	andi	r19, 0x0F	; 15
    6c26:	83 0f       	add	r24, r19
    6c28:	91 1d       	adc	r25, r1
    6c2a:	30 e0       	ldi	r19, 0x00	; 0
    6c2c:	2f 70       	andi	r18, 0x0F	; 15
    6c2e:	30 70       	andi	r19, 0x00	; 0
    6c30:	42 95       	swap	r20
    6c32:	4f 70       	andi	r20, 0x0F	; 15
    6c34:	24 0f       	add	r18, r20
    6c36:	31 1d       	adc	r19, r1
    6c38:	82 0f       	add	r24, r18
    6c3a:	93 1f       	adc	r25, r19
    6c3c:	90 93 65 05 	sts	0x0565, r25
    6c40:	80 93 64 05 	sts	0x0564, r24

/***********************************************************************************************************/
	USART_putstring("No. of buttons in categories: ");
    6c44:	81 ef       	ldi	r24, 0xF1	; 241
    6c46:	92 e0       	ldi	r25, 0x02	; 2
    6c48:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(no_of_buttons_in_categories);	
    6c4c:	80 91 64 05 	lds	r24, 0x0564
    6c50:	90 91 65 05 	lds	r25, 0x0565
    6c54:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6c58:	8d e0       	ldi	r24, 0x0D	; 13
    6c5a:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Size of category 1: ");
    6c5e:	80 e1       	ldi	r24, 0x10	; 16
    6c60:	93 e0       	ldi	r25, 0x03	; 3
    6c62:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(temp1 % 16);
    6c66:	80 91 0f 06 	lds	r24, 0x060F
    6c6a:	90 e0       	ldi	r25, 0x00	; 0
    6c6c:	8f 70       	andi	r24, 0x0F	; 15
    6c6e:	90 70       	andi	r25, 0x00	; 0
    6c70:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6c74:	8d e0       	ldi	r24, 0x0D	; 13
    6c76:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Winners in category 1: ");
    6c7a:	85 e2       	ldi	r24, 0x25	; 37
    6c7c:	93 e0       	ldi	r25, 0x03	; 3
    6c7e:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	temp5 = i2c_read_byte(EEPROM_DEV_ADDR,catg1_votes);
    6c82:	80 ea       	ldi	r24, 0xA0	; 160
    6c84:	68 e8       	ldi	r22, 0x88	; 136
    6c86:	70 e0       	ldi	r23, 0x00	; 0
    6c88:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6c8c:	80 93 02 06 	sts	0x0602, r24
	USART_Transmit_dec(temp5);
    6c90:	80 91 02 06 	lds	r24, 0x0602
    6c94:	90 e0       	ldi	r25, 0x00	; 0
    6c96:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6c9a:	8d e0       	ldi	r24, 0x0D	; 13
    6c9c:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	
	USART_putstring("Size of category 2: ");
    6ca0:	8d e3       	ldi	r24, 0x3D	; 61
    6ca2:	93 e0       	ldi	r25, 0x03	; 3
    6ca4:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(temp1 / 16);
    6ca8:	80 91 0f 06 	lds	r24, 0x060F
    6cac:	82 95       	swap	r24
    6cae:	8f 70       	andi	r24, 0x0F	; 15
    6cb0:	90 e0       	ldi	r25, 0x00	; 0
    6cb2:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6cb6:	8d e0       	ldi	r24, 0x0D	; 13
    6cb8:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
		USART_putstring("Winners in category 2: ");
    6cbc:	82 e5       	ldi	r24, 0x52	; 82
    6cbe:	93 e0       	ldi	r25, 0x03	; 3
    6cc0:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
		temp6 = i2c_read_byte(EEPROM_DEV_ADDR,catg2_votes);
    6cc4:	80 ea       	ldi	r24, 0xA0	; 160
    6cc6:	69 e8       	ldi	r22, 0x89	; 137
    6cc8:	70 e0       	ldi	r23, 0x00	; 0
    6cca:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6cce:	80 93 0e 06 	sts	0x060E, r24
		USART_Transmit_dec(temp6);
    6cd2:	80 91 0e 06 	lds	r24, 0x060E
    6cd6:	90 e0       	ldi	r25, 0x00	; 0
    6cd8:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
		USART_SendByte(0x0D);
    6cdc:	8d e0       	ldi	r24, 0x0D	; 13
    6cde:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Size of category 3: ");
    6ce2:	8a e6       	ldi	r24, 0x6A	; 106
    6ce4:	93 e0       	ldi	r25, 0x03	; 3
    6ce6:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(temp2 % 16);
    6cea:	80 91 66 05 	lds	r24, 0x0566
    6cee:	90 e0       	ldi	r25, 0x00	; 0
    6cf0:	8f 70       	andi	r24, 0x0F	; 15
    6cf2:	90 70       	andi	r25, 0x00	; 0
    6cf4:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6cf8:	8d e0       	ldi	r24, 0x0D	; 13
    6cfa:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
		USART_putstring("Winners in category 3: ");
    6cfe:	8f e7       	ldi	r24, 0x7F	; 127
    6d00:	93 e0       	ldi	r25, 0x03	; 3
    6d02:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
		temp7 = i2c_read_byte(EEPROM_DEV_ADDR,catg3_votes);
    6d06:	80 ea       	ldi	r24, 0xA0	; 160
    6d08:	6a e8       	ldi	r22, 0x8A	; 138
    6d0a:	70 e0       	ldi	r23, 0x00	; 0
    6d0c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6d10:	80 93 4d 08 	sts	0x084D, r24
		USART_Transmit_dec(temp7);
    6d14:	80 91 4d 08 	lds	r24, 0x084D
    6d18:	90 e0       	ldi	r25, 0x00	; 0
    6d1a:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
		USART_SendByte(0x0D);
    6d1e:	8d e0       	ldi	r24, 0x0D	; 13
    6d20:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Size of category 4: ");
    6d24:	87 e9       	ldi	r24, 0x97	; 151
    6d26:	93 e0       	ldi	r25, 0x03	; 3
    6d28:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(temp2 / 16);
    6d2c:	80 91 66 05 	lds	r24, 0x0566
    6d30:	82 95       	swap	r24
    6d32:	8f 70       	andi	r24, 0x0F	; 15
    6d34:	90 e0       	ldi	r25, 0x00	; 0
    6d36:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6d3a:	8d e0       	ldi	r24, 0x0D	; 13
    6d3c:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
		USART_putstring("Winners in category 4: ");
    6d40:	8c ea       	ldi	r24, 0xAC	; 172
    6d42:	93 e0       	ldi	r25, 0x03	; 3
    6d44:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
		temp8 = i2c_read_byte(EEPROM_DEV_ADDR,catg4_votes);
    6d48:	80 ea       	ldi	r24, 0xA0	; 160
    6d4a:	6b e8       	ldi	r22, 0x8B	; 139
    6d4c:	70 e0       	ldi	r23, 0x00	; 0
    6d4e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6d52:	80 93 08 06 	sts	0x0608, r24
		USART_Transmit_dec(temp8);
    6d56:	80 91 08 06 	lds	r24, 0x0608
    6d5a:	90 e0       	ldi	r25, 0x00	; 0
    6d5c:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
		USART_SendByte(0x0D);
    6d60:	8d e0       	ldi	r24, 0x0D	; 13
    6d62:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Size of category 5: ");
    6d66:	84 ec       	ldi	r24, 0xC4	; 196
    6d68:	93 e0       	ldi	r25, 0x03	; 3
    6d6a:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(temp3 % 16);
    6d6e:	80 91 d1 08 	lds	r24, 0x08D1
    6d72:	90 e0       	ldi	r25, 0x00	; 0
    6d74:	8f 70       	andi	r24, 0x0F	; 15
    6d76:	90 70       	andi	r25, 0x00	; 0
    6d78:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6d7c:	8d e0       	ldi	r24, 0x0D	; 13
    6d7e:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
		USART_putstring("Winners in category 5: ");
    6d82:	89 ed       	ldi	r24, 0xD9	; 217
    6d84:	93 e0       	ldi	r25, 0x03	; 3
    6d86:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
		temp9 = i2c_read_byte(EEPROM_DEV_ADDR,catg5_votes);
    6d8a:	80 ea       	ldi	r24, 0xA0	; 160
    6d8c:	6c e8       	ldi	r22, 0x8C	; 140
    6d8e:	70 e0       	ldi	r23, 0x00	; 0
    6d90:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6d94:	80 93 5b 08 	sts	0x085B, r24
		USART_Transmit_dec(temp9);
    6d98:	80 91 5b 08 	lds	r24, 0x085B
    6d9c:	90 e0       	ldi	r25, 0x00	; 0
    6d9e:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
		USART_SendByte(0x0D);
    6da2:	8d e0       	ldi	r24, 0x0D	; 13
    6da4:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Size of category 6: ");
    6da8:	81 ef       	ldi	r24, 0xF1	; 241
    6daa:	93 e0       	ldi	r25, 0x03	; 3
    6dac:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(temp3 / 16);
    6db0:	80 91 d1 08 	lds	r24, 0x08D1
    6db4:	82 95       	swap	r24
    6db6:	8f 70       	andi	r24, 0x0F	; 15
    6db8:	90 e0       	ldi	r25, 0x00	; 0
    6dba:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6dbe:	8d e0       	ldi	r24, 0x0D	; 13
    6dc0:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
		USART_putstring("Winners in category 6: ");
    6dc4:	86 e0       	ldi	r24, 0x06	; 6
    6dc6:	94 e0       	ldi	r25, 0x04	; 4
    6dc8:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
		temp10 = i2c_read_byte(EEPROM_DEV_ADDR,catg6_votes);
    6dcc:	80 ea       	ldi	r24, 0xA0	; 160
    6dce:	6d e8       	ldi	r22, 0x8D	; 141
    6dd0:	70 e0       	ldi	r23, 0x00	; 0
    6dd2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6dd6:	80 93 c9 08 	sts	0x08C9, r24
		USART_Transmit_dec(temp10);
    6dda:	80 91 c9 08 	lds	r24, 0x08C9
    6dde:	90 e0       	ldi	r25, 0x00	; 0
    6de0:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
		USART_SendByte(0x0D);
    6de4:	8d e0       	ldi	r24, 0x0D	; 13
    6de6:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Size of category 7: ");
    6dea:	8e e1       	ldi	r24, 0x1E	; 30
    6dec:	94 e0       	ldi	r25, 0x04	; 4
    6dee:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(temp4 % 16);
    6df2:	80 91 4c 08 	lds	r24, 0x084C
    6df6:	90 e0       	ldi	r25, 0x00	; 0
    6df8:	8f 70       	andi	r24, 0x0F	; 15
    6dfa:	90 70       	andi	r25, 0x00	; 0
    6dfc:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6e00:	8d e0       	ldi	r24, 0x0D	; 13
    6e02:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
		USART_putstring("Winners in category 7: ");
    6e06:	83 e3       	ldi	r24, 0x33	; 51
    6e08:	94 e0       	ldi	r25, 0x04	; 4
    6e0a:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
		temp11 = i2c_read_byte(EEPROM_DEV_ADDR,catg7_votes);
    6e0e:	80 ea       	ldi	r24, 0xA0	; 160
    6e10:	6e e8       	ldi	r22, 0x8E	; 142
    6e12:	70 e0       	ldi	r23, 0x00	; 0
    6e14:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6e18:	80 93 49 08 	sts	0x0849, r24
		USART_Transmit_dec(temp11);
    6e1c:	80 91 49 08 	lds	r24, 0x0849
    6e20:	90 e0       	ldi	r25, 0x00	; 0
    6e22:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
		USART_SendByte(0x0D);
    6e26:	8d e0       	ldi	r24, 0x0D	; 13
    6e28:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("No. of candidates: ");
    6e2c:	8b e4       	ldi	r24, 0x4B	; 75
    6e2e:	94 e0       	ldi	r25, 0x04	; 4
    6e30:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(candidate_count);
    6e34:	80 91 f6 05 	lds	r24, 0x05F6
    6e38:	90 e0       	ldi	r25, 0x00	; 0
    6e3a:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6e3e:	8d e0       	ldi	r24, 0x0D	; 13
    6e40:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
		//GHHJ
// Size of general category is total no of candidates - candidates in categories.
	general_category = candidate_count - no_of_buttons_in_categories;
    6e44:	80 91 f6 05 	lds	r24, 0x05F6
    6e48:	20 91 64 05 	lds	r18, 0x0564
    6e4c:	30 91 65 05 	lds	r19, 0x0565
    6e50:	90 e0       	ldi	r25, 0x00	; 0
    6e52:	82 1b       	sub	r24, r18
    6e54:	93 0b       	sbc	r25, r19
    6e56:	90 93 13 06 	sts	0x0613, r25
    6e5a:	80 93 12 06 	sts	0x0612, r24

/**********************************************************************************************************/		
	USART_putstring("Size of general category: ");
    6e5e:	8f e5       	ldi	r24, 0x5F	; 95
    6e60:	94 e0       	ldi	r25, 0x04	; 4
    6e62:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(general_category);
    6e66:	80 91 12 06 	lds	r24, 0x0612
    6e6a:	90 91 13 06 	lds	r25, 0x0613
    6e6e:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6e72:	8d e0       	ldi	r24, 0x0D	; 13
    6e74:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Winners in general category: ");	
    6e78:	8a e7       	ldi	r24, 0x7A	; 122
    6e7a:	94 e0       	ldi	r25, 0x04	; 4
    6e7c:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	gen_vote_count = voter_votes - (i2c_read_byte(EEPROM_DEV_ADDR, catg1_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg2_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg3_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg4_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg5_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg6_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg7_votes));
    6e80:	e0 90 c6 08 	lds	r14, 0x08C6
    6e84:	80 ea       	ldi	r24, 0xA0	; 160
    6e86:	68 e8       	ldi	r22, 0x88	; 136
    6e88:	70 e0       	ldi	r23, 0x00	; 0
    6e8a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6e8e:	88 2e       	mov	r8, r24
    6e90:	80 ea       	ldi	r24, 0xA0	; 160
    6e92:	69 e8       	ldi	r22, 0x89	; 137
    6e94:	70 e0       	ldi	r23, 0x00	; 0
    6e96:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6e9a:	08 2f       	mov	r16, r24
    6e9c:	80 ea       	ldi	r24, 0xA0	; 160
    6e9e:	6a e8       	ldi	r22, 0x8A	; 138
    6ea0:	70 e0       	ldi	r23, 0x00	; 0
    6ea2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6ea6:	a8 2e       	mov	r10, r24
    6ea8:	80 ea       	ldi	r24, 0xA0	; 160
    6eaa:	6b e8       	ldi	r22, 0x8B	; 139
    6eac:	70 e0       	ldi	r23, 0x00	; 0
    6eae:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6eb2:	c8 2e       	mov	r12, r24
    6eb4:	80 ea       	ldi	r24, 0xA0	; 160
    6eb6:	6c e8       	ldi	r22, 0x8C	; 140
    6eb8:	70 e0       	ldi	r23, 0x00	; 0
    6eba:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6ebe:	c8 2f       	mov	r28, r24
    6ec0:	80 ea       	ldi	r24, 0xA0	; 160
    6ec2:	6d e8       	ldi	r22, 0x8D	; 141
    6ec4:	70 e0       	ldi	r23, 0x00	; 0
    6ec6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6eca:	d8 2f       	mov	r29, r24
    6ecc:	80 ea       	ldi	r24, 0xA0	; 160
    6ece:	6e e8       	ldi	r22, 0x8E	; 142
    6ed0:	70 e0       	ldi	r23, 0x00	; 0
    6ed2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>

/************* Added 23.04.2017 	****************/



int main(void)
    6ed6:	ca 0c       	add	r12, r10
	USART_putstring("Size of general category: ");
	USART_Transmit_dec(general_category);
	USART_SendByte(0x0D);
	
	USART_putstring("Winners in general category: ");	
	gen_vote_count = voter_votes - (i2c_read_byte(EEPROM_DEV_ADDR, catg1_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg2_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg3_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg4_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg5_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg6_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg7_votes));
    6ed8:	9e 2d       	mov	r25, r14
    6eda:	9c 19       	sub	r25, r12
    6edc:	90 1b       	sub	r25, r16
    6ede:	98 1b       	sub	r25, r24
    6ee0:	89 2f       	mov	r24, r25
    6ee2:	8d 1b       	sub	r24, r29
    6ee4:	8c 1b       	sub	r24, r28
    6ee6:	88 19       	sub	r24, r8
    6ee8:	80 93 48 08 	sts	0x0848, r24
	USART_Transmit_dec(gen_vote_count);
    6eec:	80 91 48 08 	lds	r24, 0x0848
    6ef0:	90 e0       	ldi	r25, 0x00	; 0
    6ef2:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6ef6:	8d e0       	ldi	r24, 0x0D	; 13
    6ef8:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>
	
	USART_putstring("Voter Votes: ");
    6efc:	88 e9       	ldi	r24, 0x98	; 152
    6efe:	94 e0       	ldi	r25, 0x04	; 4
    6f00:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
	USART_Transmit_dec(voter_votes);
    6f04:	80 91 c6 08 	lds	r24, 0x08C6
    6f08:	90 e0       	ldi	r25, 0x00	; 0
    6f0a:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Transmit_dec>
	USART_SendByte(0x0D);
    6f0e:	8d e0       	ldi	r24, 0x0D	; 13
    6f10:	0e 94 96 00 	call	0x12c	; 0x12c <USART_SendByte>

/************* Added 23.04.2017 	****************/



int main(void)
    6f14:	0c e6       	ldi	r16, 0x6C	; 108
    6f16:	15 e0       	ldi	r17, 0x05	; 5
    6f18:	0f 2e       	mov	r0, r31
    6f1a:	fa ee       	ldi	r31, 0xEA	; 234
    6f1c:	ef 2e       	mov	r14, r31
    6f1e:	f5 e0       	ldi	r31, 0x05	; 5
    6f20:	ff 2e       	mov	r15, r31
    6f22:	f0 2d       	mov	r31, r0
			while(!INIT);	// waiting for the INIT button to be released
			lcd_cmd(0x01);	// CLear the LCD
			while(RESULT)	// The controller will now remain in this loop until the RESULT button is pressed.
			{
				lcd_cmd(0x80);							// LCD displays from 1st line 1st character
				lcd_data_str( "Ready press INIT" );		// 
    6f24:	0f 2e       	mov	r0, r31
    6f26:	f1 ec       	ldi	r31, 0xC1	; 193
    6f28:	af 2e       	mov	r10, r31
    6f2a:	f4 e0       	ldi	r31, 0x04	; 4
    6f2c:	bf 2e       	mov	r11, r31
    6f2e:	f0 2d       	mov	r31, r0
				lcd_cmd(0xc0);
				lcd_data_str("Voters: ");
    6f30:	0f 2e       	mov	r0, r31
    6f32:	f2 ed       	ldi	r31, 0xD2	; 210
    6f34:	8f 2e       	mov	r8, r31
    6f36:	f4 e0       	ldi	r31, 0x04	; 4
    6f38:	9f 2e       	mov	r9, r31
    6f3a:	f0 2d       	mov	r31, r0
    6f3c:	1e c0       	rjmp	.+60     	; 0x6f7a <main+0xa50>
		
	while(1)						// Main Forever Loop
	{
			while(INIT)				// This is a pre-voting step before starting a voting session
			{						// Can be used for confirmation of vote-counts.
				if(RESULT == 0)		// This allows confirming of the vote count in the unit. Confirmation whether all votes are 0 when a new session
    6f3e:	80 91 09 01 	lds	r24, 0x0109
    6f42:	82 fd       	sbrc	r24, 2
    6f44:	02 c0       	rjmp	.+4      	; 0x6f4a <main+0xa20>
				disp_result_LCD();	// is started or they match the previous sessions vote count when reloaded can be done here.
    6f46:	0e 94 5e 31 	call	0x62bc	; 0x62bc <disp_result_LCD>

				lcd_cmd(0x80);
    6f4a:	80 e8       	ldi	r24, 0x80	; 128
    6f4c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				lcd_data_str( "Press INIT" );
    6f50:	86 ea       	ldi	r24, 0xA6	; 166
    6f52:	94 e0       	ldi	r25, 0x04	; 4
    6f54:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
				lcd_cmd(0xC0);							
    6f58:	80 ec       	ldi	r24, 0xC0	; 192
    6f5a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				lcd_data_str("to begin voting");
    6f5e:	81 eb       	ldi	r24, 0xB1	; 177
    6f60:	94 e0       	ldi	r25, 0x04	; 4
    6f62:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>

				if(rx0_data == 'A')						// For sending device ID
    6f66:	80 91 5f 05 	lds	r24, 0x055F
    6f6a:	81 34       	cpi	r24, 0x41	; 65
    6f6c:	31 f4       	brne	.+12     	; 0x6f7a <main+0xa50>
				{
					USART_putstring(DEV_ID);
    6f6e:	85 e6       	ldi	r24, 0x65	; 101
    6f70:	92 e0       	ldi	r25, 0x02	; 2
    6f72:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
					rx0_data=0x00;
    6f76:	10 92 5f 05 	sts	0x055F, r1
	_delay_ms(1900);
/************************************************************************/
		
	while(1)						// Main Forever Loop
	{
			while(INIT)				// This is a pre-voting step before starting a voting session
    6f7a:	80 91 09 01 	lds	r24, 0x0109
    6f7e:	81 fd       	sbrc	r24, 1
    6f80:	de cf       	rjmp	.-68     	; 0x6f3e <main+0xa14>
				{
					USART_putstring(DEV_ID);
					rx0_data=0x00;
				}
			}
			while(!INIT);	// waiting for the INIT button to be released
    6f82:	e9 e0       	ldi	r30, 0x09	; 9
    6f84:	f1 e0       	ldi	r31, 0x01	; 1
    6f86:	80 81       	ld	r24, Z
    6f88:	81 ff       	sbrs	r24, 1
    6f8a:	fd cf       	rjmp	.-6      	; 0x6f86 <main+0xa5c>
			lcd_cmd(0x01);	// CLear the LCD
    6f8c:	81 e0       	ldi	r24, 0x01	; 1
    6f8e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
			while(RESULT)	// The controller will now remain in this loop until the RESULT button is pressed.
    6f92:	0f 2e       	mov	r0, r31
    6f94:	f9 e0       	ldi	r31, 0x09	; 9
    6f96:	cf 2e       	mov	r12, r31
    6f98:	f1 e0       	ldi	r31, 0x01	; 1
    6f9a:	df 2e       	mov	r13, r31
    6f9c:	f0 2d       	mov	r31, r0
						for(i=0;i<63;i++)
						{
							voted_button_array[i]=eeprom_read_byte(i*2);
						}
						//**************************************  added by neeraj on 16/12/2015    *************************************************///
						vote_cast = 1;
    6f9e:	22 24       	eor	r2, r2
    6fa0:	23 94       	inc	r2
					rx0_data=0x00;
				}
			}
			while(!INIT);	// waiting for the INIT button to be released
			lcd_cmd(0x01);	// CLear the LCD
			while(RESULT)	// The controller will now remain in this loop until the RESULT button is pressed.
    6fa2:	d6 c0       	rjmp	.+428    	; 0x7150 <main+0xc26>
			{
				lcd_cmd(0x80);							// LCD displays from 1st line 1st character
    6fa4:	80 e8       	ldi	r24, 0x80	; 128
    6fa6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				lcd_data_str( "Ready press INIT" );		// 
    6faa:	c5 01       	movw	r24, r10
    6fac:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
				lcd_cmd(0xc0);
    6fb0:	80 ec       	ldi	r24, 0xC0	; 192
    6fb2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_cmd>
				lcd_data_str("Voters: ");
    6fb6:	c4 01       	movw	r24, r8
    6fb8:	0e 94 02 03 	call	0x604	; 0x604 <lcd_data_str>
				lcd_data_int(voter_count);				// This displays how many voters have cast atleast one vote
    6fbc:	80 91 5c 08 	lds	r24, 0x085C
    6fc0:	90 91 5d 08 	lds	r25, 0x085D
    6fc4:	0e 94 4a 03 	call	0x694	; 0x694 <lcd_data_int>
				
				if(rx0_data == 'A')	  // For sending device ID
    6fc8:	80 91 5f 05 	lds	r24, 0x055F
    6fcc:	81 34       	cpi	r24, 0x41	; 65
    6fce:	31 f4       	brne	.+12     	; 0x6fdc <main+0xab2>
				{
						USART_putstring(DEV_ID);
    6fd0:	85 e6       	ldi	r24, 0x65	; 101
    6fd2:	92 e0       	ldi	r25, 0x02	; 2
    6fd4:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_putstring>
						rx0_data=0x00;
    6fd8:	10 92 5f 05 	sts	0x055F, r1
				}
				if(INIT == 0)							// Pressing INIT will initiate a vote cast.
    6fdc:	d6 01       	movw	r26, r12
    6fde:	8c 91       	ld	r24, X
    6fe0:	81 fd       	sbrc	r24, 1
    6fe2:	b6 c0       	rjmp	.+364    	; 0x7150 <main+0xc26>
				{ 
					//i2c_send_byte(PIC_DEV_ADDR, 0);		// Sends indication to PIC LED controller to clear all LED's
					while(!INIT);						// wait for INIT release
    6fe4:	f6 01       	movw	r30, r12
    6fe6:	80 81       	ld	r24, Z
    6fe8:	81 ff       	sbrs	r24, 1
    6fea:	fc cf       	rjmp	.-8      	; 0x6fe4 <main+0xaba>
														// here the no. of votes in the general category is computed
														// by subtracting the sum of votes a voter can cast in all non-general categories
														// with the total no of votes the voter can cast.
					if (voting_on)
    6fec:	80 91 11 06 	lds	r24, 0x0611
    6ff0:	85 ff       	sbrs	r24, 5
    6ff2:	5c c0       	rjmp	.+184    	; 0x70ac <main+0xb82>
					{
						votes_counter = i2c_read_byte(EEPROM_DEV_ADDR, votes_count_bkp); // load remaining votes for incomplete session
    6ff4:	80 ea       	ldi	r24, 0xA0	; 160
    6ff6:	6d ea       	ldi	r22, 0xAD	; 173
    6ff8:	70 e0       	ldi	r23, 0x00	; 0
    6ffa:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    6ffe:	80 93 ff 05 	sts	0x05FF, r24
						gen_vote_count = i2c_read_byte(EEPROM_DEV_ADDR, gen_vote_count_bkp);
    7002:	80 ea       	ldi	r24, 0xA0	; 160
    7004:	6e ea       	ldi	r22, 0xAE	; 174
    7006:	70 e0       	ldi	r23, 0x00	; 0
    7008:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    700c:	80 93 48 08 	sts	0x0848, r24
						myregister1 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_1_8);
    7010:	80 ea       	ldi	r24, 0xA0	; 160
    7012:	6d e9       	ldi	r22, 0x9D	; 157
    7014:	70 e0       	ldi	r23, 0x00	; 0
    7016:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    701a:	80 93 63 05 	sts	0x0563, r24
						myregister2 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_9_16);
    701e:	80 ea       	ldi	r24, 0xA0	; 160
    7020:	6e e9       	ldi	r22, 0x9E	; 158
    7022:	70 e0       	ldi	r23, 0x00	; 0
    7024:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    7028:	80 93 47 06 	sts	0x0647, r24
						myregister3 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_17_24);
    702c:	80 ea       	ldi	r24, 0xA0	; 160
    702e:	6f e9       	ldi	r22, 0x9F	; 159
    7030:	70 e0       	ldi	r23, 0x00	; 0
    7032:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    7036:	80 93 0d 06 	sts	0x060D, r24
						myregister4 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_25_32);
    703a:	80 ea       	ldi	r24, 0xA0	; 160
    703c:	60 ea       	ldi	r22, 0xA0	; 160
    703e:	70 e0       	ldi	r23, 0x00	; 0
    7040:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    7044:	80 93 60 05 	sts	0x0560, r24
						myregister5 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_33_40);
    7048:	80 ea       	ldi	r24, 0xA0	; 160
    704a:	61 ea       	ldi	r22, 0xA1	; 161
    704c:	70 e0       	ldi	r23, 0x00	; 0
    704e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    7052:	80 93 c8 08 	sts	0x08C8, r24
						myregister6 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_41_48);
    7056:	80 ea       	ldi	r24, 0xA0	; 160
    7058:	62 ea       	ldi	r22, 0xA2	; 162
    705a:	70 e0       	ldi	r23, 0x00	; 0
    705c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    7060:	80 93 ca 08 	sts	0x08CA, r24
						myregister7 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_49_56);
    7064:	80 ea       	ldi	r24, 0xA0	; 160
    7066:	63 ea       	ldi	r22, 0xA3	; 163
    7068:	70 e0       	ldi	r23, 0x00	; 0
    706a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    706e:	80 93 67 05 	sts	0x0567, r24
						myregister8 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_57_64);
    7072:	80 ea       	ldi	r24, 0xA0	; 160
    7074:	64 ea       	ldi	r22, 0xA4	; 164
    7076:	70 e0       	ldi	r23, 0x00	; 0
    7078:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    707c:	80 93 54 08 	sts	0x0854, r24
						//**************************************  added by neeraj on 16/12/2015    *************************************************///
						elem_count = i2c_read_byte(EEPROM_DEV_ADDR,elem_count_bkp);
    7080:	80 ea       	ldi	r24, 0xA0	; 160
    7082:	60 eb       	ldi	r22, 0xB0	; 176
    7084:	70 e0       	ldi	r23, 0x00	; 0
    7086:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    708a:	80 93 52 08 	sts	0x0852, r24
    708e:	e8 01       	movw	r28, r16
						unsigned int i;
						for(i=0;i<63;i++)
						{
							voted_button_array[i]=eeprom_read_byte(i*2);
    7090:	ce 01       	movw	r24, r28
    7092:	80 1b       	sub	r24, r16
    7094:	91 0b       	sbc	r25, r17
    7096:	0e 94 d4 38 	call	0x71a8	; 0x71a8 <__eerd_byte_m2560>
    709a:	88 83       	st	Y, r24
    709c:	19 82       	std	Y+1, r1	; 0x01
    709e:	22 96       	adiw	r28, 0x02	; 2
						myregister7 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_49_56);
						myregister8 = i2c_read_byte(EEPROM_DEV_ADDR, vote_indic_57_64);
						//**************************************  added by neeraj on 16/12/2015    *************************************************///
						elem_count = i2c_read_byte(EEPROM_DEV_ADDR,elem_count_bkp);
						unsigned int i;
						for(i=0;i<63;i++)
    70a0:	ce 15       	cp	r28, r14
    70a2:	df 05       	cpc	r29, r15
    70a4:	a9 f7       	brne	.-22     	; 0x7090 <main+0xb66>
						{
							voted_button_array[i]=eeprom_read_byte(i*2);
						}
						//**************************************  added by neeraj on 16/12/2015    *************************************************///
						vote_cast = 1;
    70a6:	20 92 07 06 	sts	0x0607, r2
    70aa:	3c c0       	rjmp	.+120    	; 0x7124 <main+0xbfa>
					}
					else{
							votes_counter = voter_votes;
    70ac:	80 91 c6 08 	lds	r24, 0x08C6
    70b0:	80 93 ff 05 	sts	0x05FF, r24
							gen_vote_count = voter_votes - (i2c_read_byte(EEPROM_DEV_ADDR, catg1_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg2_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg3_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg4_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg5_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg6_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg7_votes));
    70b4:	70 90 c6 08 	lds	r7, 0x08C6
    70b8:	80 ea       	ldi	r24, 0xA0	; 160
    70ba:	68 e8       	ldi	r22, 0x88	; 136
    70bc:	70 e0       	ldi	r23, 0x00	; 0
    70be:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    70c2:	d8 2f       	mov	r29, r24
    70c4:	80 ea       	ldi	r24, 0xA0	; 160
    70c6:	69 e8       	ldi	r22, 0x89	; 137
    70c8:	70 e0       	ldi	r23, 0x00	; 0
    70ca:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    70ce:	c8 2f       	mov	r28, r24
    70d0:	80 ea       	ldi	r24, 0xA0	; 160
    70d2:	6a e8       	ldi	r22, 0x8A	; 138
    70d4:	70 e0       	ldi	r23, 0x00	; 0
    70d6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    70da:	68 2e       	mov	r6, r24
    70dc:	80 ea       	ldi	r24, 0xA0	; 160
    70de:	6b e8       	ldi	r22, 0x8B	; 139
    70e0:	70 e0       	ldi	r23, 0x00	; 0
    70e2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    70e6:	58 2e       	mov	r5, r24
    70e8:	80 ea       	ldi	r24, 0xA0	; 160
    70ea:	6c e8       	ldi	r22, 0x8C	; 140
    70ec:	70 e0       	ldi	r23, 0x00	; 0
    70ee:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    70f2:	48 2e       	mov	r4, r24
    70f4:	80 ea       	ldi	r24, 0xA0	; 160
    70f6:	6d e8       	ldi	r22, 0x8D	; 141
    70f8:	70 e0       	ldi	r23, 0x00	; 0
    70fa:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>
    70fe:	38 2e       	mov	r3, r24
    7100:	80 ea       	ldi	r24, 0xA0	; 160
    7102:	6e e8       	ldi	r22, 0x8E	; 142
    7104:	70 e0       	ldi	r23, 0x00	; 0
    7106:	0e 94 f5 03 	call	0x7ea	; 0x7ea <i2c_read_byte>

/************* Added 23.04.2017 	****************/



int main(void)
    710a:	cd 0f       	add	r28, r29
						//**************************************  added by neeraj on 16/12/2015    *************************************************///
						vote_cast = 1;
					}
					else{
							votes_counter = voter_votes;
							gen_vote_count = voter_votes - (i2c_read_byte(EEPROM_DEV_ADDR, catg1_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg2_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg3_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg4_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg5_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg6_votes) + i2c_read_byte(EEPROM_DEV_ADDR, catg7_votes));
    710c:	7c 1a       	sub	r7, r28
    710e:	76 18       	sub	r7, r6
    7110:	75 18       	sub	r7, r5
    7112:	74 18       	sub	r7, r4
    7114:	73 18       	sub	r7, r3
    7116:	78 1a       	sub	r7, r24
    7118:	70 92 48 08 	sts	0x0848, r7
							vote_cast = 0;
    711c:	10 92 07 06 	sts	0x0607, r1
							elem_count =0;// Resetting voted button address counter.
    7120:	10 92 52 08 	sts	0x0852, r1
					//USART_putstring("no. of general votes: ");
					//USART_Transmit_dec(gen_vote_count);
					//USART_SendByte(0x0D);
/************************************************************************************************For testing purpose**********/	
					
					vote_routine();
    7124:	0e 94 ed 2f 	call	0x5fda	; 0x5fda <vote_routine>
					myregister1 = 0;
    7128:	10 92 63 05 	sts	0x0563, r1
					myregister2 = 0;
    712c:	10 92 47 06 	sts	0x0647, r1
					myregister3 = 0;
    7130:	10 92 0d 06 	sts	0x060D, r1
					myregister4 = 0;
    7134:	10 92 60 05 	sts	0x0560, r1
					myregister5 = 0;
    7138:	10 92 c8 08 	sts	0x08C8, r1
					myregister6 = 0;
    713c:	10 92 ca 08 	sts	0x08CA, r1
					myregister7 = 0;
    7140:	10 92 67 05 	sts	0x0567, r1
					myregister8 = 0;
    7144:	10 92 54 08 	sts	0x0854, r1
					vote_indicator_37 = vote_indicator_38 = vote_indicator_39 = vote_indicator_40 = vote_indicator_41 = vote_indicator_42 = 
					vote_indicator_43 = vote_indicator_44 = vote_indicator_45 = vote_indicator_46 = vote_indicator_47 = vote_indicator_48 = 
					vote_indicator_49 = vote_indicator_50 = vote_indicator_51 = vote_indicator_52 = vote_indicator_53 = vote_indicator_54 =
					vote_indicator_55 = vote_indicator_56 = vote_indicator_57 = vote_indicator_58 = vote_indicator_59 = vote_indicator_60 = 
					vote_indicator_61 = vote_indicator_62 = vote_indicator_63 = vote_indicator_64 = 0; */
					while(!INIT);
    7148:	d6 01       	movw	r26, r12
    714a:	8c 91       	ld	r24, X
    714c:	81 ff       	sbrs	r24, 1
    714e:	fc cf       	rjmp	.-8      	; 0x7148 <main+0xc1e>
					rx0_data=0x00;
				}
			}
			while(!INIT);	// waiting for the INIT button to be released
			lcd_cmd(0x01);	// CLear the LCD
			while(RESULT)	// The controller will now remain in this loop until the RESULT button is pressed.
    7150:	f6 01       	movw	r30, r12
    7152:	80 81       	ld	r24, Z
    7154:	82 fd       	sbrc	r24, 2
    7156:	26 cf       	rjmp	.-436    	; 0x6fa4 <main+0xa7a>
					while(!INIT);
				}
			}
			while(1)				// If the RESULT key is pressed in the above loop, the controller enters this loop forever displaying 
			{						// only the sessions results. Further voting is disallowed in this manner unless a previous session is 
				disp_result_LCD();	// reloaded by switching OFF and ON the control unit.
    7158:	0e 94 5e 31 	call	0x62bc	; 0x62bc <disp_result_LCD>
				break;
			}			
	}
    715c:	0e cf       	rjmp	.-484    	; 0x6f7a <main+0xa50>

0000715e <spi_init>:

//SPI initialize for SD card
//clock rate: 125Khz
void spi_init(void)
{
SPCR = 0x52; //setup SPI: Master mode, MSB first, SCK phase low, SCK idle low
    715e:	82 e5       	ldi	r24, 0x52	; 82
    7160:	8c bd       	out	0x2c, r24	; 44
SPSR = 0x00;
    7162:	1d bc       	out	0x2d, r1	; 45
}
    7164:	08 95       	ret

00007166 <SPI_transmit>:

unsigned char SPI_transmit(unsigned char data)
{
// Start transmission
SPDR = data;
    7166:	8e bd       	out	0x2e, r24	; 46

// Wait for transmission complete
while(!(SPSR & (1<<SPIF)));
    7168:	0d b4       	in	r0, 0x2d	; 45
    716a:	07 fe       	sbrs	r0, 7
    716c:	fd cf       	rjmp	.-6      	; 0x7168 <SPI_transmit+0x2>
data = SPDR;
    716e:	8e b5       	in	r24, 0x2e	; 46

return(data);
}
    7170:	08 95       	ret

00007172 <SPI_receive>:
unsigned char SPI_receive(void)
{
unsigned char data;
// Wait for reception complete

SPDR = 0xff;
    7172:	8f ef       	ldi	r24, 0xFF	; 255
    7174:	8e bd       	out	0x2e, r24	; 46
while(!(SPSR & (1<<SPIF)));
    7176:	0d b4       	in	r0, 0x2d	; 45
    7178:	07 fe       	sbrs	r0, 7
    717a:	fd cf       	rjmp	.-6      	; 0x7176 <SPI_receive+0x4>
data = SPDR;
    717c:	8e b5       	in	r24, 0x2e	; 46

// Return data register
return data;
}
    717e:	08 95       	ret

00007180 <__udivmodhi4>:
    7180:	aa 1b       	sub	r26, r26
    7182:	bb 1b       	sub	r27, r27
    7184:	51 e1       	ldi	r21, 0x11	; 17
    7186:	07 c0       	rjmp	.+14     	; 0x7196 <__udivmodhi4_ep>

00007188 <__udivmodhi4_loop>:
    7188:	aa 1f       	adc	r26, r26
    718a:	bb 1f       	adc	r27, r27
    718c:	a6 17       	cp	r26, r22
    718e:	b7 07       	cpc	r27, r23
    7190:	10 f0       	brcs	.+4      	; 0x7196 <__udivmodhi4_ep>
    7192:	a6 1b       	sub	r26, r22
    7194:	b7 0b       	sbc	r27, r23

00007196 <__udivmodhi4_ep>:
    7196:	88 1f       	adc	r24, r24
    7198:	99 1f       	adc	r25, r25
    719a:	5a 95       	dec	r21
    719c:	a9 f7       	brne	.-22     	; 0x7188 <__udivmodhi4_loop>
    719e:	80 95       	com	r24
    71a0:	90 95       	com	r25
    71a2:	bc 01       	movw	r22, r24
    71a4:	cd 01       	movw	r24, r26
    71a6:	08 95       	ret

000071a8 <__eerd_byte_m2560>:
    71a8:	f9 99       	sbic	0x1f, 1	; 31
    71aa:	fe cf       	rjmp	.-4      	; 0x71a8 <__eerd_byte_m2560>
    71ac:	92 bd       	out	0x22, r25	; 34
    71ae:	81 bd       	out	0x21, r24	; 33
    71b0:	f8 9a       	sbi	0x1f, 0	; 31
    71b2:	99 27       	eor	r25, r25
    71b4:	80 b5       	in	r24, 0x20	; 32
    71b6:	08 95       	ret

000071b8 <__eewr_byte_m2560>:
    71b8:	26 2f       	mov	r18, r22

000071ba <__eewr_r18_m2560>:
    71ba:	f9 99       	sbic	0x1f, 1	; 31
    71bc:	fe cf       	rjmp	.-4      	; 0x71ba <__eewr_r18_m2560>
    71be:	1f ba       	out	0x1f, r1	; 31
    71c0:	92 bd       	out	0x22, r25	; 34
    71c2:	81 bd       	out	0x21, r24	; 33
    71c4:	20 bd       	out	0x20, r18	; 32
    71c6:	0f b6       	in	r0, 0x3f	; 63
    71c8:	f8 94       	cli
    71ca:	fa 9a       	sbi	0x1f, 2	; 31
    71cc:	f9 9a       	sbi	0x1f, 1	; 31
    71ce:	0f be       	out	0x3f, r0	; 63
    71d0:	01 96       	adiw	r24, 0x01	; 1
    71d2:	08 95       	ret

000071d4 <_exit>:
    71d4:	f8 94       	cli

000071d6 <__stop_program>:
    71d6:	ff cf       	rjmp	.-2      	; 0x71d6 <__stop_program>
